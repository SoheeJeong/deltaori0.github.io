{"version":3,"sources":["constant.js","view/main/styles.js","component/layout/styles.js","view/google_login/storage.js","view/google_login/googlebtn.js","component/header/styles.js","component/header/index.js","component/footer/styles.js","component/footer/index.js","component/layout/index.js","view/main/index.js","view/board_lost/styles.js","container/lost-board-header/styles.js","container/lost-board-header/index.js","container/lost-board-list/styles.js","component/lost-board-item/styles.js","component/lost-board-item/index.js","container/lost-board-list/index.js","container/page-bar/styles.js","component/page-button/styles.js","component/page-button/index.js","container/page-bar/index.js","view/board_lost/index.js","view/board_lost/hooks.js","view/login/styles.js","view/login/index.js","view/board_find/styles.js","container/find-board-header/styles.js","container/find-board-header/index.js","container/find-board-list/styles.js","component/find-board-item/styles.js","component/find-board-item/index.js","container/find-board-list/index.js","view/board_find/index.js","view/board_find/hooks.js","view/find-upload/styles.js","view/find-upload/index.js","view/lost-upload/styles.js","view/lost-upload/index.js","component/find-text-editor/styles.js","view/notice/styles.js","container/notice-header/styles.js","container/notice-header/index.js","container/notice-list/styles.js","component/notice-item/styles.js","component/notice-item/index.js","container/notice-list/index.js","view/notice/index.js","view/notice/hooks.js","view/notice-upload/styles.js","view/notice-upload/index.js","view/join/styles.js","view/join/index.js","view/find-post/styles.js","container/comment-list/styles.js","component/comment/styles.js","component/comment/function.js","component/comment/index.js","container/comment-list/index.js","view/find-upload/edit.js","view/find-post/function.js","view/find-post/index.js","view/find-post/hooks.js","view/find-post/hooks2.js","view/lost-post/styles.js","view/lost-post/function.js","view/lost-post/index.js","view/lost-post/hooks.js","view/lost-post/hooks2.js","view/notice-post/styles.js","view/notice-post/function.js","view/notice-post/index.js","view/notice-post/hooks.js","view/mypage/styles.js","view/mypage/index.js","App.js","serviceWorker.js","component/global-style/index.js","index.js"],"names":["STATIC_URL","THEME_COLOR","Main","styled","div","ContentContainer","MainContent","MainLabel","SubContent","SubLabel","MainContainer","BlockContainer","Link","Title","Description","Icon","Layout","LayoutContainer","storage","set","key","object","localStorage","JSON","stringify","get","parse","e","remove","removeItem","CLIENT_ID","GoogleBtn","props","UserLogin","console","log","state","googleId","imgUrl","alert","UserLogout","a","isLogined","accessToken","username","email","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","this","setState","profileObj","name","imageUrl","window","location","href","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","Component","Header","Logo","img","Buttons","Button","button","DesktopLink","TempContainer","to","src","alt","Footer","Label","children","BoardLost","BoardLostContainer","TitleContainer","DescContainer","ToolsContainer","WriteButton","SearchContainer","SearchBox","input","SearchIcon","BoardListContainer","PagebarContainer","BoardHeader","ul","NameContainer","PlaceContainer","CommentContainer","WriterContainer","DateContainer","FindBoardHeader","BoardList","BoardItem","li","LostBoardItem","post","url","_id","title","place","replynum","date","slice","LostBoardList","posts","map","idx","Pagebar","ArrowBlock","Arrow","PageButton","PageButtonContainer","board_type","page","start_page","end_page","page_count","total_page","onClick","className","useState","setPosts","useEffect","fetch","method","request","ok","json","data","getInitialPosts","useBoardLost","placeholder","Login","Container","axios","defaults","withCredentials","id","pw","inputs","width","height","BoardFind","BoardFindContainer","FindPlaceContainer","LostPlaceContainer","FindBoardItem","getplace","putplace","pathname","url_string","split","length","parseInt","useBoardFind","totalCount","totalPage","startPage","endPage","Upload","UploadContainer","WriteInputContainer","select","option","TitleInputContainer","TitleInput","NameInput","PlaceInput","TextEditorContainer","TextEditor","SubmitButton","headers","FindUpload","send_param","value","selectedOption","content","catch","err","handleEditorChange","target","getContent","options","label","handleChange","styles","container","base","padding","fontSize","flex","provided","color","isSelected","backgroundColor","control","marginTop","type","ref","onChange","autoFocus","initialValue","init","menubar","plugins","toolbar","mobile","theme","block","LostUpload","Notice","NoticeContainer","NoticeHeader","NoticeItem","NoticeList","useBoardNotice","NoticeUpload","Join","JoinContainer","IDInputBox","PWInputBox","PWConfirmInputBox","JoinForm","description","maxLength","FindPost","FindPostContainer","PostContainer","PostTitle","MetaContainer","Date","IconContainer","Content","CommentsContainer","WriteCommentContainer","WriteComment","SubmitIcon","CommentList","Comment","Writer","ProfileIcon","SetReplynum","num","PostDelete","bool","confirm","reload","PostEdit","prompt","comment","comments","EditUpload","SetPlaceholder","newurl","EditPost","newcontent","fetchurl","toString","defaultValue","setComments","getInitialComments","useCommentFind","editurl","post_content","dangerouslySetInnerHTML","__html","postid","postkind","LostPost","LostPostContainer","useCommentLost","NoticePost","NoticePostContainer","userid","useNoticePost","MyPage","App","path","exact","component","from","Boolean","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4da356c4.chunk.js","sourcesContent":["export const BREAKPOINT = 640;\r\n\r\nexport const STATIC_URL = {\r\n  // LOGO: `https://user-images.githubusercontent.com/50616334/88452091-cdb79c00-ce96-11ea-9f67-9289cdf63a32.JPG`,\r\n  LOGO: `https://user-images.githubusercontent.com/50616334/88753989-86802280-d198-11ea-88f4-1b735493b8d9.png`,\r\n  LOGO2: `https://user-images.githubusercontent.com/50616334/88453653-e4182480-cea3-11ea-8916-18ea7c718377.png`,\r\n  MAGNIFYING_GLASS_ICON: `https://user-images.githubusercontent.com/41494099/87172994-10626b80-c310-11ea-99d3-bcc2da2cdb6d.png`,\r\n  PENCIL_ICON: `https://user-images.githubusercontent.com/50616334/88361747-0a12cb80-cdb5-11ea-9545-f5e7be8e9935.png`,\r\n  PENCIL_ICON2: `https://user-images.githubusercontent.com/50616334/90724248-31e44900-e2f9-11ea-9fec-7068e853490a.png`,\r\n  PROFILE: `https://user-images.githubusercontent.com/50616334/90849381-12592900-e3aa-11ea-83f7-3b13e7938bd8.png`,\r\n  SUBMIT: `https://user-images.githubusercontent.com/50616334/90851306-41be6480-e3af-11ea-98b9-84c5272fcb9c.png`,\r\n  DELETE: `https://user-images.githubusercontent.com/44287798/91042089-2cb23180-e64c-11ea-85c8-5756e4a05592.png`,\r\n  EDIT: `https://user-images.githubusercontent.com/44287798/91042139-42bff200-e64c-11ea-9f6e-e13ed9d55768.png`,\r\n  CHAT: `https://user-images.githubusercontent.com/44287798/91042471-c24dc100-e64c-11ea-9303-cd83c8d87198.png`,\r\n  MEGAPHONE: `https://user-images.githubusercontent.com/50616334/91296892-513b1480-e7d8-11ea-97d2-e78815b0c138.png`,\r\n  SMILE: `https://user-images.githubusercontent.com/50616334/91296938-687a0200-e7d8-11ea-9668-c836d16176c9.png`,\r\n  SAD: `https://user-images.githubusercontent.com/50616334/91296978-7af43b80-e7d8-11ea-9d06-85cb98385dfa.png`,\r\n};\r\n\r\nexport const THEME_COLOR = {\r\n  PRIMARY: \"#A20131\",\r\n  YELLOW: \"#F0B957\",\r\n  LIGHT_YELLOW: \"#F9E3BC\",\r\n  GRAY: \"#F1F1F1\",\r\n  GRAYER: \"#EDEDED\",\r\n  FONT_GRAY: \"#80868B\",\r\n  LIGHT_GRAY: \"#E5E5E3\",\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR, STATIC_URL } from \"../../constant\";\r\n\r\nexport const Main = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const MainContent = styled.div`\r\n  margin: 8rem;\r\n  margin-bottom: 0rem;\r\n  margin-top: 4rem;\r\n`;\r\nexport const MainLabel = styled.div`\r\n  padding: 1rem;\r\n  font-size: 4rem;\r\n  font-weight: bold;\r\n  color: #85092a;\r\n  text-decoration: underline ${THEME_COLOR.LIGHT_YELLOW};\r\n`;\r\nexport const SubContent = styled.div`\r\n  margin: 4rem 9rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 0rem;\r\n`;\r\nexport const SubLabel = styled.div`\r\n  padding: 0.8rem;\r\n  font-size: 2rem;\r\n  color: chacol;\r\n`;\r\nexport const MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  margin-left: 6rem;\r\n\r\n  align-items: center;\r\n  justify-content: left;\r\n`;\r\n\r\nexport const BlockContainer = styled(Link)`\r\n  width: 28rem;\r\n  height: 28rem;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1.5rem;\r\n  margin: 8rem 4rem;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n  border-radius: 0.5rem;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_GRAY};\r\n  text-decoration: none;\r\n  color: black;\r\n  &:hover {\r\n    background-color: ${THEME_COLOR.YELLOW};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin: 1.5rem 0rem 1.5rem 0rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const GoButton = styled(Link)`\r\n  width: 100%;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  img {\r\n    width: 6rem;\r\n    height: 6rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  min-height: 100%;\r\n`;\r\n\r\nexport const LayoutContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 6rem;\r\n`;\r\n","// 로컬 스토리지에 JSON 형태로 저장 / 불러오기 / 삭제 헬퍼\r\nexport const storage = {\r\n    set: (key, object) => {\r\n        if(!localStorage) return;\r\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n    },\r\n    get: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(!localStorage[key]) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const parsed = JSON.parse(localStorage[key]);\r\n            return parsed;\r\n        } catch(e) {\r\n            return localStorage[key];\r\n        }\r\n    },\r\n    remove: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(localStorage[key]) {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n};\r\n\r\nexport default storage;","import React, { Component } from 'react'\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport { storage } from './storage';\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nconst CLIENT_ID = \"920956368020-sk2d48e21kq4rrbl83kc4g5jedclnkom.apps.googleusercontent.com\";\r\n\r\nexport class GoogleBtn extends Component {\r\n//로그인(onclick)\r\n  login (response) {\r\n    if(response.accessToken){\r\n      this.setState(state => ({\r\n        isLogined: true,\r\n        accessToken: response.accessToken,\r\n        username: response.profileObj.name,\r\n        email: response.profileObj.email,\r\n        googleId: response.googleId,\r\n        imgUrl: response.profileObj.imageUrl,\r\n      }));\r\n    }\r\n    this.UserLogin(); //upload into userdb\r\n   // window.location.href = '/'; // 홈페이지로 새로고침\r\n   console.log(response);\r\n  }\r\n     //로그인\r\n     UserLogin = () => {\r\n      console.log(this.state.googleId);\r\n      console.log(this.state.imgUrl);\r\n      // const send_param = {\r\n      //   headers,\r\n      //   accessToken: this.state.accessToken,\r\n      //   username: this.state.username,\r\n      //   email: this.state.email,\r\n      //   googleId: this.state.googleId,\r\n      // };\r\n      // axios\r\n      //   .post(\"http://localhost:4000/user/login\", send_param)\r\n      //   //에러\r\n      //   .catch((err) => {\r\n      //     console.log(err);\r\n      //   });\r\n      //local storage에 저장\r\n      storage.set('loggedInfo',this.state);\r\n      storage.set('isLogged',true);\r\n      console.log(storage.get('loggedInfo'));\r\n      alert(\"로그인 완료!\");\r\n    };\r\n  //로그아웃(onclick)\r\n  logout (response) {\r\n    alert('들어왔다');\r\n    this.setState(state => ({\r\n      isLogined: false,\r\n      accessToken: '',\r\n      username: '',\r\n      email: '',\r\n      googleId: '',\r\n      imgUrl: '',\r\n    }));\r\n    this.UserLogout();\r\n    alert(\"로그아웃 완료!\");\r\n    window.location.href = '/'; // 홈페이지로 새로고침\r\n  }\r\n    //로그아웃\r\n    UserLogout = async () => {\r\n      // const request = await fetch(\"http://localhost:4000/user/logout/\" + this.state.googleId, {\r\n      //     method: \"DELETE\",\r\n      // });\r\n      // if (!request.ok) {\r\n      // alert(\"서버 죽음\");\r\n      // return;\r\n      // }\r\n      // await request.json();\r\n      \r\n      //localstorage에서 user데이터 삭제\r\n      storage.remove('loggedInfo');\r\n      storage.set('isLogged',false);\r\n      //console.log(storage.get('loggedInfo'));\r\n    };\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined: false,\r\n      accessToken: '',\r\n      username: '',\r\n      email: '',\r\n      googleId: '',\r\n      imgUrl: '',\r\n    };\r\n\r\n  this.login = this.login.bind(this);\r\n  this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n  this.logout = this.logout.bind(this);\r\n  this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n}\r\n  handleLoginFailure (response) {\r\n    alert('Failed to log in')\r\n  }\r\n\r\n  handleLogoutFailure (response) {\r\n    alert('Failed to log out')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      { storage.get('isLogged')==true ?\r\n        <GoogleLogout\r\n          clientId={ CLIENT_ID }\r\n          buttonText='로그아웃'\r\n          onLogoutSuccess={ this.logout }\r\n          onFailure={ this.handleLogoutFailure }\r\n        />: \r\n        <GoogleLogin\r\n          clientId={ CLIENT_ID }\r\n          buttonText='로그인'\r\n          onSuccess={ this.login}\r\n          onFailure={ this.handleLoginFailure }\r\n          cookiePolicy={ 'single_host_origin' }\r\n          responseType='code,token'\r\n        />\r\n      }\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleBtn;","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  height: 10rem;\r\n  padding: 0rem 2rem;\r\n\r\n  border-bottom: 3px solid ${THEME_COLOR.YELLOW};\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  display: block;\r\n  width: 13rem;\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  border: none;\r\n  background-color: inherit;\r\n  font-size: 1.6rem;\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    color: ${THEME_COLOR.YELLOW};\r\n  }\r\n\r\n  img {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    border-radius: 4rem;\r\n  }\r\n\r\n  /* height: 8rem; */\r\n  width: 8.7rem;\r\n  transition: background-color 0.5s;\r\n`;\r\n\r\nexport const DesktopLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  display: block;\r\n`;\r\n\r\nexport const TempContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;","import React from \"react\";\r\n\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport {GoogleBtn} from \"../../view/google_login/googlebtn\";\r\nimport { storage } from '../../view/google_login/storage';\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <S.Header>\r\n      <S.DesktopLink to=\"/\">\r\n        <S.Logo src={STATIC_URL.LOGO} alt=\"Logo\"></S.Logo>\r\n      </S.DesktopLink>\r\n      <S.Buttons>\r\n        <S.DesktopLink to=\"/lost/board\">\r\n          <S.Button>분실물</S.Button>\r\n        </S.DesktopLink>\r\n        <S.DesktopLink to=\"/find/board\">\r\n          <S.Button>습득물</S.Button>\r\n        </S.DesktopLink>\r\n        <S.DesktopLink to=\"/notice\">\r\n          <S.Button>공지사항</S.Button>\r\n        </S.DesktopLink>\r\n        {storage.get('isLogged')?\r\n        <S.TempContainer>\r\n          <S.DesktopLink to='/login'>\r\n            <S.Button>로그아웃</S.Button>\r\n          </S.DesktopLink>\r\n          <S.DesktopLink>\r\n            <S.Button>{<img src={storage.get('loggedInfo').imgUrl} alt=\"image\"/>}</S.Button>\r\n          </S.DesktopLink>\r\n        </S.TempContainer>:\r\n        <S.DesktopLink to='/login'>\r\n          <S.Button>로그인</S.Button>\r\n        </S.DesktopLink>\r\n        } \r\n      </S.Buttons>\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  /* justify-content: space-between; */\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 3rem;\r\n  padding: 0rem 2rem;\r\n\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n\r\n  background-color: ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.3rem;\r\n  margin: 0rem 0.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <S.Footer>\r\n      <S.Label>이름</S.Label>\r\n      <S.Label>이메일</S.Label>\r\n      <S.Label>연락처</S.Label>\r\n    </S.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as S from \"./styles\";\r\n\r\nimport React from \"react\";\r\nimport Header from \"../header\";\r\nimport Footer from \"../footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <S.Layout>\r\n      <Header />\r\n      <S.LayoutContainer>{children}</S.LayoutContainer>\r\n      <Footer />\r\n    </S.Layout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Layout>\r\n      <S.Main>\r\n        <S.ContentContainer>\r\n          <S.MainContent>\r\n            <S.MainLabel>FIN:D THANKU!</S.MainLabel>\r\n            <S.MainLabel>\r\n              고려대학교 구성원을 위한 스마트 분실물센터\r\n            </S.MainLabel>\r\n          </S.MainContent>\r\n          <S.SubContent>\r\n            <S.SubLabel>\r\n              찾아주셔서(FIN:D) 고맙습니다(THANKU)의 의미를 가지는 FIN:D\r\n              THANKU는 고려대학교 구성원을 위한 분실물센터입니다.\r\n            </S.SubLabel>\r\n            <S.SubLabel>\r\n              구성원 누구나 잃어버린 물건을 쉽게 찾을 수 있도록 하는 것이\r\n              목표입니다.(멘트 수정)\r\n            </S.SubLabel>\r\n          </S.SubContent>\r\n        </S.ContentContainer>\r\n        <S.MainContainer>\r\n          <S.BlockContainer to=\"lost/board\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.SAD} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>분실물</S.Title>\r\n            <S.Description>\r\n              분실물 게시판에 대한 설명이 들어갈 예정입니다.\r\n            </S.Description>\r\n            {/* <S.GoButton to=\"lost/board\">바로가기 ▷</S.GoButton> */}\r\n          </S.BlockContainer>\r\n          <S.BlockContainer to=\"notice\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.MEGAPHONE} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>공지사항</S.Title>\r\n            <S.Description>\r\n              공지사항에 대한 설명이 들어갈 예정입니다.\r\n            </S.Description>\r\n            {/* <S.GoButton to=\"notice\">바로가기 ▷</S.GoButton> */}\r\n          </S.BlockContainer>\r\n          <S.BlockContainer to=\"find/board\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.SMILE} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>습득물</S.Title>\r\n            <S.Description>\r\n              습득물 게시판에 대한 설명이 들어갈 예정입니다.\r\n            </S.Description>\r\n            {/* <S.GoButton to=\"find/board\">바로가기 ▷</S.GoButton> */}\r\n          </S.BlockContainer>\r\n        </S.MainContainer>\r\n      </S.Main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardLost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardLostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\nexport const TitleContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.TitleContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>분실물 명</S.Label>\r\n      </S.NameContainer>\r\n      <S.PlaceContainer>\r\n        <S.Label>분실 장소</S.Label>\r\n      </S.PlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>댓글 수</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>작성자</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default FindBoardHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n  /* border: 0.5px solid ${THEME_COLOR.GRAYER}; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nconst LostBoardItem = ({ post }) => {\r\n  const url = \"/lost/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>{post.name}</S.Label>\r\n      </S.NameContainer>\r\n      <S.PlaceContainer>\r\n        <S.Label>{post.place}</S.Label>\r\n      </S.PlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>{post.replynum}</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>{post.username}</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default LostBoardItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport LostBoardItem from \"../../component/lost-board-item\";\r\n\r\nconst LostBoardList = ({ posts }) => {\r\n  console.log(posts);\r\n\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <LostBoardItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default LostBoardList;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Pagebar = styled.div`\r\n  display: flex;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const Buttons = styled.ul`\r\n  display: flex;\r\n\r\n  margin: 0rem 0.5rem;\r\n`;\r\n\r\nexport const ArrowBlock = styled.button`\r\n  width: 3.6rem;\r\n  height: 3.6rem;\r\n\r\n  background-color: inherit;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* border: none;\r\n  outline: none; */\r\n`;\r\n\r\nexport const Arrow = styled.div`\r\n  border: solid black;\r\n  border-width: 0 1px 1px 0;\r\n  display: inline-block;\r\n  padding: 2px;\r\n\r\n  &.right {\r\n    transform: rotate(-45deg);\r\n    -webkit-transform: rotate(-45deg);\r\n    margin-right: 2px;\r\n  }\r\n\r\n  &.left {\r\n    transform: rotate(135deg);\r\n    -webkit-transform: rotate(135deg);\r\n    margin-left: 2px;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const PageButton = styled.li`\r\n  font-size: 1.4rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PageButtonContainer = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  width: 3.6rem;\r\n  height: 3.6rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst PageButton = ({ board_type, page, start_page, end_page }) => {\r\n  let url = \"/\";\r\n // console.log(board_type);\r\n  if (board_type === \"find\") url = \"/find/board/\";\r\n  else if (board_type === \"lost\") url = \"/lost/board/\";\r\n  else if (board_type === \"notice\") url = \"/notice/\";\r\n\r\n  console.log(\"현재 페이지:\", page);\r\n  console.log(\"시작 페이지:\", start_page);\r\n  console.log(\"끝 페이지:\", end_page);\r\n\r\n  return (\r\n    <S.PageButton>\r\n      <S.PageButtonContainer to={url + start_page}>\r\n        {start_page}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 1)}>\r\n        {start_page + 1}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 2)}>\r\n        {start_page + 2}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 3)}>\r\n        {start_page + 3}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 4)}>\r\n        {start_page + 4}\r\n      </S.PageButtonContainer>\r\n    </S.PageButton>\r\n  );\r\n};\r\n\r\nexport default PageButton;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport PageButton from \"../../component/page-button\";\r\n\r\nconst Pagebar = ({\r\n  board_type,\r\n  page,\r\n  start_page,\r\n  end_page,\r\n  page_count,\r\n  total_page,\r\n}) => {\r\n  function beforePage() {\r\n    console.log(\"이전 버튼 누름!!!!\");\r\n    if (start_page - page_count > 0) start_page -= page_count;\r\n    console.log(\"이전페이지 누름 - start_page :\", start_page); // 눌렀을 때 start_page에 바로 반영되어서 PageButton으로 넘겨줘야 함 (미완)\r\n    // window.location.reload(true);\r\n  }\r\n  function nextPage() {\r\n    console.log(\"다음 버튼 누름!!! !\");\r\n    if (start_page + page_count < total_page) start_page += page_count;\r\n    console.log(\"다음페이지 누름 - start_page :\", start_page);\r\n    // window.location.reload(true);\r\n  }\r\n  return (\r\n    <S.Pagebar>\r\n      <S.ArrowBlock onClick={beforePage}>\r\n        <S.Arrow className=\"left\"></S.Arrow>\r\n      </S.ArrowBlock>\r\n      <S.Buttons>\r\n        <PageButton\r\n          board_type={board_type}\r\n          page={page}\r\n          start_page={start_page}\r\n          end_page={end_page}\r\n        />\r\n      </S.Buttons>\r\n      <S.ArrowBlock onClick={nextPage}>\r\n        <S.Arrow className=\"right\"></S.Arrow>\r\n      </S.ArrowBlock>\r\n    </S.Pagebar>\r\n  );\r\n};\r\n\r\nexport default Pagebar;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/lost-board-header\";\r\nimport BoardList from \"../../container/lost-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardLost } from \"./hooks\";\r\n\r\nconst BoardLost = () => {\r\n  const { posts } = useBoardLost();\r\n\r\n  return (\r\n    <Layout>\r\n      <S.BoardLost>\r\n        <S.BoardLostContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>분실물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>분실물 게시판에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n        </S.BoardLostContainer>\r\n        <S.ToolsContainer>\r\n          <S.SearchContainer>\r\n            <S.SearchBox placeholder=\"제목 검색\" />\r\n            <S.SearchIcon>\r\n              <img\r\n                src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                alt=\"magnifying-glass\"\r\n              />\r\n            </S.SearchIcon>\r\n          </S.SearchContainer>\r\n          <S.WriteButton to=\"/lost/upload\">글 작성</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar board_type=\"lost\" />\r\n        </S.PagebarContainer>\r\n      </S.BoardLost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardLost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardLost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\"http://localhost:4000/lost/board\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data.slice(0, 10));\r\n      console.log(data.slice(0, 10));\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Login = styled.div`\r\n  width: 400px;\r\n  height: 400px;\r\n\r\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n  background: white;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n\r\n  padding-top: 50px;\r\n  padding-right: 30px;\r\n  padding-bottom: 0px;\r\n  padding-left: 30px;\r\n\r\n  border: 2px solid #f0b957;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`;\r\n\r\n// border: 3px solid #F0B957;\r\n// export const box = styled.div`\r\n//     background:yellow;\r\n// `;\r\n\r\n// export const button = styled.div`\r\n//     background-color: #4CAF50; /* Green */\r\n//     border: none;\r\n//     color: white;\r\n//     padding: 15px 32px;\r\n//     text-align: center;\r\n//     display: inline-block;\r\n//     font-size: 16px;\r\n// `;\r\n","import React, { useState } from \"react\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport Layout from \"../../component/layout\";\r\nimport * as S from \"./styles\";\r\nimport \"./login.scss\";\r\nimport axios from \"axios\";\r\n\r\nimport { GoogleLogin} from \"react-google-login\";\r\nimport {GoogleBtn} from \"../google_login/googlebtn\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\n//로그인 페이지\r\nconst idbox = \"Google 계정\";\r\nconst pwbox = \"Password\";\r\n\r\nconst Login = () => {\r\n  const [inputs, setInputs] = useState({\r\n    id: \"\",\r\n    pw: \"\",\r\n  });\r\n\r\n  const { id, pw } = inputs; //여기에 값이 저장됨\r\n\r\n  const onChange = (e) => {\r\n    //입력시\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onReset = () => {\r\n    //버튼클릭시\r\n    setInputs({\r\n      id: \"\",\r\n      pw: \"\",\r\n    });\r\n  };\r\n\r\n  // Google Login\r\n  const responseGoogle = (res) => {\r\n    console.log(res);\r\n  };\r\n\r\n  // Login Fail\r\n  const responseFail = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <S.Login>\r\n        <div>\r\n          <img src={STATIC_URL.LOGO} width=\"200px\" height=\"90px\" alt=\"logo\" />\r\n        </div>\r\n        <br /><br /><br /><br />  \r\n        <S.Container>\r\n          <GoogleBtn/>\r\n        </S.Container>\r\n      </S.Login>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n/*임시저장\r\n     <div>\r\n          <img src={STATIC_URL.LOGO} width=\"200px\" height=\"90px\" alt=\"logo\" />\r\n        </div>\r\n        <div>\r\n          <br />\r\n          <br />\r\n          <input\r\n            class=\"input_box\"\r\n            name=\"id\"\r\n            placeholder={idbox}\r\n            onChange={onChange}\r\n            value={id}\r\n          />\r\n          <br />\r\n          <br />\r\n          <input\r\n            class=\"input_box\"\r\n            type=\"password\"\r\n            name=\"pw\"\r\n            placeholder={pwbox}\r\n            onChange={onChange}\r\n            value={pw}\r\n          />\r\n          <br />\r\n          <br />\r\n          <button class=\"login_button\" onClick={onReset}>\r\n            로그인\r\n          </button>\r\n          <div>\r\n            id / pw:\r\n            {id} / {pw}\r\n          </div>\r\n        </div>\r\n        */","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardFind = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardFindContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FindPlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LostPlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.TitleContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>습득물 명</S.Label>\r\n      </S.NameContainer>\r\n      <S.LostPlaceContainer>\r\n        <S.Label>습득 장소</S.Label>\r\n      </S.LostPlaceContainer>\r\n      <S.FindPlaceContainer>\r\n        <S.Label>보관 장소</S.Label>\r\n      </S.FindPlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>댓글 수</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>작성자</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default FindBoardHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FindPlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LostPlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardItem = ({ post }) => {\r\n  const url = \"/find/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>{post.name}</S.Label>\r\n      </S.NameContainer>\r\n      <S.LostPlaceContainer>\r\n        <S.Label>{post.getplace}</S.Label>\r\n      </S.LostPlaceContainer>\r\n      <S.FindPlaceContainer>\r\n        <S.Label>{post.putplace}</S.Label>\r\n      </S.FindPlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>{post.replynum}</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>{post.username}</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default FindBoardItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport BoardItem from \"../../component/find-board-item\";\r\n\r\nconst BoardList = ({ posts }) => {\r\n  console.log(posts);\r\n\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <BoardItem post={post} key={idx}/>;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/find-board-header\";\r\nimport BoardList from \"../../container/find-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardFind } from \"./hooks\";\r\n\r\nconst BoardFind = () => {\r\n  console.log(\"Hello BoardFind\");\r\n  console.log(\"url : \", window.location.pathname);\r\n  let url_string = window.location.pathname.split(\"/\");\r\n  let page = 1; // 나중에 url 맨 뒷부분 보고 현재 보고 있는 페이지 추출 (근데 맨 처음 클릭했을 때 값은 1 뒤 url이 없으므로)\r\n  if (url_string.length == 3) page = 1;\r\n  else page = parseInt(url_string[3]);\r\n  console.log(url_string);\r\n  console.log(\"page: \", page);\r\n  const { posts } = useBoardFind();\r\n  const totalCount = posts.length;\r\n  const listCount = 10;\r\n  let totalPage = parseInt(totalCount / listCount);\r\n  if (totalCount % listCount > 0) totalPage += 1;\r\n  if (totalPage < page) page = totalPage; // 사용자가 임의로 페이지 수 바꿀 수 있으므로\r\n  const pageCount = 5;\r\n  let startPage = parseInt((page - 1) / pageCount + 1);\r\n  let endPage = startPage + pageCount - 1;\r\n  if (endPage > totalPage) endPage = totalPage;\r\n  console.log(\"totalCount:\", totalCount);\r\n  console.log(\"listCount:\", listCount);\r\n  console.log(\"totalPage:\", totalPage);\r\n  console.log(\"page\", page);\r\n  console.log(\"pageCount\", pageCount);\r\n  console.log(\"startPage\", startPage);\r\n  console.log(\"endPage\", endPage);\r\n\r\n  return (\r\n    <Layout>\r\n      <S.BoardFind>\r\n        <S.BoardFindContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>습득물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>습득물 게시판에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n        </S.BoardFindContainer>\r\n        <S.ToolsContainer>\r\n          <S.SearchContainer>\r\n            <S.SearchBox placeholder=\"제목 검색\" />\r\n            <S.SearchIcon>\r\n              <img\r\n                src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                alt=\"magnifying-glass\"\r\n              />\r\n            </S.SearchIcon>\r\n          </S.SearchContainer>\r\n          <S.WriteButton to=\"/find/upload\">글 작성</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar\r\n            board_type=\"find\"\r\n            page={page}\r\n            start_page={startPage}\r\n            end_page={endPage}\r\n            page_count={pageCount}\r\n            total_page={totalPage}\r\n          />\r\n        </S.PagebarContainer>\r\n      </S.BoardFind>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardFind;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardFind = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\"http://localhost:4000/find/board\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data.slice(0, 10));\r\n      console.log(data.slice(0, 10));\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n  \r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  /* height: 3rem; */\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const TitleInput = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PlaceInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  /* padding: 0rem 1rem; */\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n//import TextEditor from \"../../component/find-text-editor\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\n// import { STATIC_URL } from \"../../constant\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nclass FindUpload extends Component { \r\n  FindUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      getplace: this.getplace.value,\r\n      putplace: this.state.selectedOption.value,\r\n      content: this.content,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000/find/upload\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //Select 관련\r\n  options = [\r\n    { value: \"중앙광장 원스탑\", label: \"중앙광장 원스탑\" },\r\n    { value: \"하나스퀘어 원스탑\", label: \"하나스퀘어 원스탑\" },\r\n    { value: \"기타\", label: \"기타\" },\r\n  ];\r\n\r\n  state = {\r\n    selectedOption: \"\",\r\n  };\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n\r\n  //render\r\n  render() {\r\n    //select 관련\r\n    const { selectedOption } = this.state;\r\n\r\n    const styles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        padding: \"2px\",\r\n        fontSize: \"18px\",\r\n        height: \"30px\",\r\n        flex: 1,\r\n      }),\r\n      option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isSelected ? \"black\" : \"black\",\r\n        backgroundColor: state.isSelected ? \"lightgrey\" : \"white\",\r\n      }),\r\n      control: (provided) => ({\r\n        ...provided,\r\n        marginTop: \"1%\",\r\n      }),\r\n    };\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목 명\"\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                placeholder=\"습득물 명\"\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.getplace = ref)}\r\n                placeholder=\"습득 장소\"\r\n              />\r\n              <Select\r\n                styles={styles}\r\n                placeholder=\"보관 장소\"\r\n                options={this.options}\r\n                onChange={this.handleChange}\r\n                autoFocus={true}\r\n                value={selectedOption}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton \r\n              to=\"/find/board\"\r\n              onClick={this.FindUpload} \r\n              type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindUpload;","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAY};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  /* height: 3rem; */\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const TitleInput = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PlaceInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  /* padding: 0rem 1rem; */\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, {Component} from \"react\";\r\nimport * as S from \"./styles\";\r\nimport TextEditor from \"../../component/find-text-editor\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\n// import { STATIC_URL } from \"../../constant\";\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nclass LostUpload extends Component {\r\n  LostUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      place: this.place.value,\r\n      content: this.content,\r\n    };\r\n      // replynum: this.replynum.value,\r\n      // username: this.username.value\r\n    axios\r\n      .post(\"http://localhost:4000/lost/upload\", send_param)\r\n       //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //render\r\n  render () {\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목 명\" />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                placeholder=\"분실물 명\" />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.place = ref)}\r\n                placeholder=\"분실 장소\" />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor> \r\n            </S.TextEditorContainer>\r\n            \r\n            <S.SubmitButton\r\n              to = '/lost/board'\r\n              onClick={this.LostUpload}\r\n              type=\"button\"\r\n              block>작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LostUpload;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const TextEditor = styled.div``;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Notice = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst NoticeHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.NameContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.NameContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default NoticeHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n  /* border: 0.5px solid ${THEME_COLOR.GRAYER}; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const NameContainer = styled(Link)`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst NoticeItem = ({ post }) => {\r\n  const url = \"/notice/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.NameContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.NameContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default NoticeItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport NoticeItem from \"../../component/notice-item\";\r\n\r\nconst NoticeList = ({ posts }) => {\r\n  console.log(posts);\r\n\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <NoticeItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/notice-header\";\r\nimport BoardList from \"../../container/notice-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardNotice } from \"./hooks\";\r\n\r\nconst Notice = () => {\r\n  const { posts } = useBoardNotice();\r\n  return (\r\n    <Layout>\r\n      <S.Notice>\r\n        <S.NoticeContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>공지사항</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>공지사항에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n          <S.ToolsContainer>\r\n            <S.SearchContainer>\r\n              <S.SearchBox placeholder=\"검색\" />\r\n              <S.SearchIcon>\r\n                <img\r\n                  src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                  alt=\"magnifying-glass\"\r\n                />\r\n              </S.SearchIcon>\r\n            </S.SearchContainer>\r\n            <S.WriteButton to=\"/notice/upload\">글 작성</S.WriteButton>\r\n          </S.ToolsContainer>\r\n          <S.BoardListContainer>\r\n            <BoardHeader />\r\n            <BoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n          <S.PagebarContainer>\r\n            <Pagebar board_type=\"notice\" />\r\n          </S.PagebarContainer>\r\n        </S.NoticeContainer>\r\n      </S.Notice>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardNotice = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\"http://localhost:4000/notice\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAY};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  /* height: 3rem; */\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  /* padding: 0rem 1rem; */\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React,{Component} from \"react\";\r\nimport * as S from \"./styles\";\r\nimport TextEditor from \"../../component/find-text-editor\";\r\nimport Layout from \"../../component/layout\";\r\nimport axios from \"axios\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nconst headers = { withCredentials: true };\r\n\r\nclass NoticeUpload extends Component{\r\n  Upload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      content: this.content,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000/notice/upload\", send_param)\r\n      //정상 수행\r\n      //에러\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  render (){\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목\" />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor> \r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton \r\n              to = '/notice'\r\n              onClick = {this.Upload}>작성</S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NoticeUpload;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Join = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const JoinContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IDInputBox = styled.input`\r\n  width: 50rem;\r\n  height: 4rem;\r\n`;\r\n\r\nexport const PWInputBox = styled.input`\r\n  width: 50rem;\r\n  height: 4rem;\r\n`;\r\n\r\nexport const PWConfirmInputBox = styled.input`\r\n  width: 50rem;\r\n  height: 4rem;\r\n`;\r\nexport const SubmitButton = styled.button`\r\n  width: 10rem;\r\n  height: 4rem;\r\n`;\r\n","\r\nimport React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\n// import { render } from \"@testing-library/react\";\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nclass JoinForm extends Component {\r\n Join = () => {\r\n  const send_param = {\r\n    headers,\r\n    title: this.title.value,\r\n    description: this.description.value,\r\n  };\r\n  axios\r\n    .post(\"http://localhost:4000/join\", send_param)\r\n    //정상 수행\r\n  \r\n    //에러\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  render(){\r\n    return (\r\n      <Layout>\r\n        <S.Join>\r\n          <S.JoinContainer>\r\n            <S.IDInputBox\r\n              type=\"text\"\r\n              maxLength=\"20\"\r\n              ref={ref => (this.title = ref)}\r\n              placeholder=\"id\"/>\r\n            <S.PWInputBox \r\n              type=\"text\"\r\n              maxLength=\"20\"\r\n              ref={ref => (this.description = ref)}\r\n              placeholder=\"pw\"/>\r\n            <S.PWConfirmInputBox />\r\n            <S.SubmitButton\r\n              onClick={this.Join}\r\n              type=\"button\"\r\n              block\r\n            >확인\r\n            </S.SubmitButton>\r\n          </S.JoinContainer>\r\n        </S.Join>\r\n      </Layout>\r\n    );\r\n}\r\n\r\n};\r\n\r\nexport default JoinForm;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const FindPost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const FindPostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled(Link)`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const CommentsContainer = styled.div`\r\n  width: 99%;\r\n`;\r\n\r\nexport const WriteCommentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriteComment = styled.input`\r\n  width: 97%;\r\n  font-size: 1.4rem;\r\n  height: 3.5rem;\r\n  /* border: none; */\r\n  /* outline: none; */\r\n  /* background-color: ${THEME_COLOR.GRAY}; */\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SubmitIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const CommentList = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Comment = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 1rem;\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  padding: 1rem 1rem 0.5rem 1rem;\r\n`;\r\n\r\nexport const Writer = styled.div`\r\n  font-size: 1.3rem;\r\n  margin-right: 1rem;\r\n`;\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n`;\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0rem 1rem 1rem 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nexport const ProfileIcon = styled.div`\r\n  margin-right: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const CommentIcon = styled.div`\r\n  margin-right: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","    \r\n  //댓글수 조정\r\n  const SetReplynum = async (num) => {\r\n    const url = window.location.pathname;\r\n    const request = await fetch('http://localhost:4000'+url+'/replynum/'+(num), {\r\n      method: \"PATCH\",\r\n    });\r\n    console.log('http://localhost:4000'+url+'/replynum/'+(-1));\r\n    if (!request.ok) {\r\n      alert(\"서버 죽음\");\r\n      return;\r\n    }\r\n    await request.json();\r\n  }\r\n\r\n  export const PostDelete = async (username,id) => {\r\n    const url = window.location.pathname;\r\n    var bool = window.confirm('정말 삭제하시겠습니까?');\r\n    //삭제 안함\r\n    if(!bool){\r\n      return; \r\n    }\r\n    //삭제함 && 작성자 == 현재 접속자의 username(sohee(temp))\r\n    if(bool && username === \"sohee(temp)\"){\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment/\" + id, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"댓글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json(); \r\n      SetReplynum(-1); //댓글수 -1     \r\n      alert('댓글이 삭제되었습니다!'); \r\n      window.location.reload(true); //새로고침\r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n //댓글 수정\r\n  export const PostEdit = async (username,content,id) => {\r\n    const url = window.location.pathname;\r\n    //작성자 == 현재 접속자의 username(sohee(temp))\r\n    if(username === \"sohee(temp)\"){\r\n      var input = prompt('새로운 내용을 입력하세요',content);\r\n      if(!input) {\r\n          input=content; //input==null(취소 클릭시)\r\n        }\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment/\" + id +\"/content/\"+input, {\r\n        method: \"PATCH\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"댓글 수정 실패\");\r\n        return;\r\n      }\r\n      await request.json();\r\n      window.location.reload(true); //새로고침\r\n    }\r\n    //작성자!= 접속자 -> 수정 안함\r\n    else{\r\n      alert('수정 권한 없음');\r\n    }\r\n  }","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { PostDelete, PostEdit } from \"./function\";\r\n\r\nconst Comment = ({ comment }) => {\r\n  const username = comment.username;\r\n  const content = comment.content;\r\n  const id = comment._id;\r\n  const date = comment.date;\r\n\r\n  const Delete = () => {\r\n    PostDelete(username, id);\r\n  };\r\n  const Edit = () => {\r\n    PostEdit(username, content, id);\r\n  };\r\n\r\n  return (\r\n    <S.Comment>\r\n      <S.WriterContainer>\r\n        <S.ProfileIcon>\r\n          <img src={STATIC_URL.PROFILE} alt=\"profile\" />\r\n        </S.ProfileIcon>\r\n        <S.Writer>{username} </S.Writer>\r\n        <S.Date>{date.slice(0, 10)}</S.Date>\r\n      </S.WriterContainer>\r\n      <S.ContentContainer>\r\n        <S.Content>{content}</S.Content>\r\n        <S.IconContainer>\r\n          <S.Icon onClick={Edit}>\r\n            <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n          </S.Icon>\r\n          <S.Icon to=\"find/board\" onClick={Delete}>\r\n            <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n          </S.Icon>\r\n        </S.IconContainer>\r\n        {/* <S.CommentIcon>{<img src={STATIC_URL.EDIT} alt=\"edit\" align='right' onClick={Edit}/>}</S.CommentIcon> */}\r\n        {/* <S.CommentIcon>{<img src={STATIC_URL.DELETE} alt=\"delete\" align='right' onClick={Delete}/>}</S.CommentIcon> */}\r\n      </S.ContentContainer>\r\n    </S.Comment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Comment from \"../../component/comment\";\r\n\r\nconst CommentList = ({comments}) => {\r\n  console.log(comments);\r\n  return (\r\n    <S.CommentList>\r\n      {comments.map((comment, idx) => {\r\n        return <Comment comment={comment} key={idx}/>;\r\n      })}\r\n    </S.CommentList>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n//import TextEditor from \"../../component/find-text-editor\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\n// import { STATIC_URL } from \"../../constant\";\r\nimport Select from \"react-select\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\n\r\nexport class EditUpload extends Component{\r\n//placeholder\r\nplaceholder = {\r\n    title: 'g',\r\n    name: 'g',\r\n    getplace: 'g',\r\n    putplace: 'g',\r\n    content: 'g',\r\n};\r\nSetPlaceholder = async () => {\r\n    const url = window.location.pathname;\r\n    const newurl = url.slice(0,-5);\r\n    const request = await fetch(\"http://localhost:4000\" + newurl, {\r\n    method: \"GET\",\r\n    });\r\n    if (!request.ok) {\r\n    alert(\"서버 죽음\");\r\n    return;\r\n    }\r\n    this.placeholder = await request.json();\r\n    console.log(this.placeholder);\r\n    //return this.placeholder;\r\n};\r\nplaceholder=this.SetPlaceholder();\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //Select 관련\r\n  options = [\r\n    { value: \"중앙광장 원스탑\", label: \"중앙광장 원스탑\" },\r\n    { value: \"하나스퀘어 원스탑\", label: \"하나스퀘어 원스탑\" },\r\n    { value: \"기타\", label: \"기타\" },\r\n  ];\r\n\r\n  state = {\r\n    selectedOption: \"\",\r\n  };\r\n\r\n  handleChange = (selectedOption) => {\r\n      this.setState({ selectedOption });\r\n      console.log(`Option selected:`, selectedOption);\r\n  };\r\n  //게시글 수정 시\r\n EditPost = async () => {\r\n    const newcontent = {\r\n        title: this.title.value,\r\n        name: this.name.value,\r\n        getplace: this.getplace.value,\r\n        putplace: this.state.selectedOption.value,\r\n        content: this.content,\r\n    }\r\n    console.log(newcontent);\r\n    const url = window.location.pathname;\r\n    const fetchurl = \"http://localhost:4000\" + url + \"/\"+(newcontent.title)+\"/\"+(newcontent.name) + \r\n            \"/\"+(newcontent.getplace) + \"/\"+(newcontent.putplace) + \"/\"+toString(newcontent.content);\r\n    const request = await fetch(fetchurl, {\r\n        method: \"PATCH\",\r\n    });\r\n    console.log(fetchurl);\r\n   \r\n    if (!request.ok) {\r\n        alert(\"게시글 수정 실패\");\r\n        return;\r\n    }\r\n    await request.json();\r\n    console.log(newcontent.title.value);\r\n    alert('수정되었습니다!');\r\n }\r\n  //render\r\n  render(){\r\n    //select 관련\r\n    //this.SetPlaceholder();\r\n    const { selectedOption } = this.state;\r\n    const styles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        padding: \"2px\",\r\n        fontSize: \"18px\",\r\n        height: \"30px\",\r\n        flex: 1,\r\n      }),\r\n      option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isSelected ? \"black\" : \"black\",\r\n        backgroundColor: state.isSelected ? \"lightgrey\" : \"white\",\r\n      }),\r\n      control: (provided) => ({\r\n        ...provided,\r\n        marginTop: \"1%\",\r\n      }),\r\n    };\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 수정</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                defaultValue = {this.placeholder.title}\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                defaultValue = {this.placeholder.name}\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.getplace = ref)}\r\n                defaultValue= {this.placeholder.getplace}\r\n              />\r\n              <Select\r\n                styles={styles}\r\n                options={this.options}\r\n                placeholder=\"보관 장소\"\r\n                onChange={this.handleChange}\r\n                autoFocus={true}\r\n                value={selectedOption}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    defaultValue: this.placeholder.content,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      defaultValue: this.placeholder.content,\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton \r\n              to=\"/find/board\"\r\n              onClick = {this.EditPost}\r\n              type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUpload;","import {EditUpload} from \"../find-upload/edit\";\r\n\r\nexport const PostDelete = async (username) => {\r\n    const url = window.location.pathname;  //localhost:4000/find_post/게시글 id정보/  \r\n    var bool = window.confirm('정말 삭제하시겠습니까?');\r\n    //삭제 안함\r\n    if(!bool){\r\n      return; \r\n    }\r\n    //삭제함 && 작성자 == 현재 접속자의 username (temp:nonamed)\r\n    if(bool && username === \"nonamed\"){\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"게시글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json();      \r\n      alert('삭제되었습니다!'); \r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n\r\n  //게시글 수정\r\n  export const PostEdit = async (username) => {\r\n    const url = window.location.pathname;\r\n    //작성자 == 현재 접속자의 username(nonamed)\r\n    if(username === \"nonamed\"){\r\n\r\n      new EditUpload //현재 post정보 넘겨줌\r\n      window.location.reload(true); //새로고침\r\n    }\r\n    //작성자!= 접속자 -> 수정 안함\r\n    else{\r\n      alert('수정 권한 없음');\r\n    }\r\n  }\r\n  /*\r\n  //현재 게시글 넘겨주기(placeholder)\r\n  export const EditPlaceholder = async (post) => {\r\n    return post;\r\n  }\r\n  */\r\n  //댓글수 조정\r\n  export const SetReplynum = async (num) => {\r\n    const url = window.location.pathname;\r\n    const request = await fetch('http://localhost:4000'+url+'/replynum/'+(num), {\r\n      method: \"PATCH\",\r\n    });\r\n    console.log('http://localhost:4000'+url+'/replynum/'+(1));\r\n    if (!request.ok) {\r\n      alert(\"서버 죽음\");\r\n      return;\r\n    }\r\n    await request.json();\r\n  }\r\n ","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport CommentList from \"../../container/comment-list\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useBoardFind } from \"./hooks\";\r\nimport { useCommentFind } from \"./hooks2\";\r\nimport { PostDelete, PostEdit, SetReplynum } from \"./function\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nconst FindPost = () => {\r\n  const { posts } = useBoardFind();\r\n  const { comments } = useCommentFind();\r\n\r\n  //var username;\r\n  var content;\r\n\r\n  const url = window.location.pathname;\r\n  const editurl = url + \"/edit\";\r\n  const CommentUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      //username: username.value,\r\n      content: content.value,\r\n      postid: posts._id,\r\n      postkind: \"find\",\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000\" + url + \"/comment\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    SetReplynum(1); //댓글수 +1\r\n    alert(\"댓글 작성 완료!\");\r\n    window.location.reload(true); //새로고침\r\n  };\r\n  //게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(posts.username);\r\n  };\r\n\r\n  //게시글 수정\r\n  // const Edit = () => {\r\n  //   PostEdit(posts.username);\r\n  //   // EditPlaceholder(posts);\r\n  // };\r\n  const post_content = posts.content;\r\n\r\n  return (\r\n    <Layout>\r\n      <S.FindPost>\r\n        <S.TitleContainer>\r\n          <S.Title>습득물 게시판</S.Title>\r\n        </S.TitleContainer>\r\n        <S.FindPostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n                <S.Icon to={editurl}>\r\n                  <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                </S.Icon>\r\n                <S.Icon to=\"find/board\" onClick={Delete}>\r\n                  <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                </S.Icon>\r\n              </S.IconContainer>\r\n            </S.MetaContainer>\r\n            <S.Label>습득물 명 : {posts.name}</S.Label>\r\n            <S.Label>습득 장소 : {posts.getplace} </S.Label>\r\n            <S.Label>보관 장소 : {posts.putplace} </S.Label>\r\n            <S.ContentContainer>\r\n              <S.Content>\r\n                <div dangerouslySetInnerHTML={{ __html: post_content }} />\r\n              </S.Content>\r\n            </S.ContentContainer>\r\n          </S.PostContainer>\r\n        </S.FindPostContainer>\r\n        <br />\r\n        <br />\r\n        <S.PostContainer>\r\n          <S.Label>\r\n            {<img src={STATIC_URL.CHAT} alt=\"chat\" width=\"15x\" />} 댓글\r\n          </S.Label>\r\n          <S.CommentsContainer>\r\n            <CommentList comments={comments} />\r\n          </S.CommentsContainer>\r\n          <S.WriteCommentContainer>\r\n            <S.WriteComment\r\n              type=\"text\"\r\n              ref={(ref) => (content = ref)}\r\n              placeholder=\"댓글을 입력하세요.\"\r\n            />\r\n            <S.SubmitIcon onClick={CommentUpload}>\r\n              <img src={STATIC_URL.SUBMIT} alt=\"submit_icon\" />\r\n            </S.SubmitIcon>\r\n          </S.WriteCommentContainer>\r\n        </S.PostContainer>\r\n      </S.FindPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FindPost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardFind = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      // console.log(window.location.pathname);\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n      if (!request.ok) {\r\n        const request2 = await fetch(\"http://localhost:4000\" + url + \"/edit\", {\r\n        method: \"GET\",\r\n        });\r\n        if (!request2.ok){\r\n          alert(\"서버 죽음\");\r\n          return;\r\n        }\r\n      }\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","//각 게시글 별 comment 정보 가져오기\r\n//url= localhost:4000/find_post/게시글 id정보/comment\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useCommentFind = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialComments = async () => {\r\n      const url = window.location.pathname;  //localhost:4000/find_post/게시글 id정보/\r\n      \r\n      console.log(\"http://localhost:4000\" + url + \"/comment\")\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setComments(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialComments();\r\n  }, []);\r\n\r\n  return {\r\n    comments,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const LostPost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const LostPostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1.6rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nexport const CommentsContainer = styled.div`\r\n  width: 99%;\r\n`;\r\n\r\nexport const WriteCommentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriteComment = styled.input`\r\n  width: 97%;\r\n  font-size: 1.4rem;\r\n  height: 3.5rem;\r\n  /* border: none; */\r\n  /* outline: none; */\r\n  /* background-color: ${THEME_COLOR.GRAY}; */\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SubmitIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","export const PostDelete = async (username) => {\r\n    const url = window.location.pathname;\r\n    var bool = window.confirm('정말 삭제하시겠습니까?');\r\n    //삭제 안함\r\n    if(!bool){\r\n      return; \r\n    }\r\n    //삭제함 && 작성자 == 현재 접속자의 username (temp:nonamed)\r\n    if(bool && username === \"nonamed\"){\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"게시글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json();      \r\n      alert('삭제되었습니다!'); \r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n\r\n //게시글 수정\r\n export const PostEdit = async (username,content) => {\r\n  const url = window.location.pathname;\r\n  //작성자 == 현재 접속자의 username(nonamed)\r\n  if(username === \"nonamed\"){\r\n    var newcontent = \"content수정됨\"; //upload 페이지 다시 열어야할듯? find_edit view(content쓰임) 새로 만들어서 newcont 받아오기\r\n    const request = await fetch(\"http://localhost:4000\" + url +\"/content/\" + newcontent, {\r\n      method: \"PATCH\",\r\n    });\r\n    if (!request.ok) {\r\n      alert(\"게시글 수정 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert('수정되었습니다!');\r\n    window.location.reload(true); //새로고침\r\n  }\r\n  //작성자!= 접속자 -> 수정 안함\r\n  else{\r\n    alert('수정 권한 없음');\r\n  }\r\n}\r\n\r\n//댓글수 조정\r\nexport const SetReplynum = async (num) => {\r\n  const url = window.location.pathname;\r\n  const request = await fetch('http://localhost:4000'+url+'/replynum/'+(num), {\r\n    method: \"PATCH\",\r\n  });\r\n  console.log('http://localhost:4000'+url+'/replynum/'+(1));\r\n  if (!request.ok) {\r\n    alert(\"서버 죽음\");\r\n    return;\r\n  }\r\n  await request.json();\r\n}","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport CommentList from \"../../container/comment-list\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useBoardLost } from \"./hooks\";\r\nimport { PostDelete, PostEdit, SetReplynum } from \"./function\";\r\nimport { useCommentLost } from \"./hooks2\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { MetaContainer } from \"../find-post/styles\";\r\nconst headers = { withCredentials: true };\r\n\r\nconst LostPost = () => {\r\n  const { posts } = useBoardLost();\r\n  const { comments } = useCommentLost();\r\n  //var username;\r\n  var content;\r\n  const url = window.location.pathname; //localhost:4000/lost_post/게시글 id정보/\r\n\r\n  //댓글 업로드(신규)\r\n  const CommentUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      //username: username.value,\r\n      content: content.value,\r\n      postid: posts._id,\r\n      postkind: \"lost\",\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000\" + url + \"/comment\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    SetReplynum(1); //댓글수 +1\r\n    alert(\"댓글 작성 완료!\");\r\n    window.location.reload(true); //새로고침\r\n  };\r\n  //게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(posts.username);\r\n  };\r\n  //게시글 수정\r\n  const Edit = () => {\r\n    PostEdit(posts.username, posts.content);\r\n  };\r\n\r\n  const post_content = posts.content;\r\n  return (\r\n    <Layout>\r\n      <S.LostPost>\r\n        <S.TitleContainer>\r\n          <S.Title>분실물 게시판</S.Title>\r\n        </S.TitleContainer>\r\n        <S.LostPostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n                <S.Icon onClick={Edit}>\r\n                  <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                </S.Icon>\r\n                <S.Icon to=\"/lost/board\" onClick={Delete}>\r\n                  <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                </S.Icon>\r\n              </S.IconContainer>\r\n            </MetaContainer>\r\n\r\n            <S.Label>분실물 명 : {posts.name} </S.Label>\r\n            <S.Label>분실 장소 : {posts.place} </S.Label>\r\n            <S.ContentContainer>\r\n              {/* <S.Content>{posts.content}</S.Content> */}\r\n              <S.Content>\r\n                <div dangerouslySetInnerHTML={{ __html: post_content }} />\r\n              </S.Content>\r\n            </S.ContentContainer>\r\n          </S.PostContainer>\r\n        </S.LostPostContainer>\r\n        <br />\r\n        <br />\r\n        <S.PostContainer>\r\n          <S.Label>\r\n            {<img src={STATIC_URL.CHAT} alt=\"chat\" width=\"15px\" />} 댓글\r\n          </S.Label>\r\n          <S.CommentsContainer>\r\n            <CommentList comments={comments} />\r\n          </S.CommentsContainer>\r\n          <S.WriteCommentContainer>\r\n            <S.WriteComment\r\n              type=\"text\"\r\n              ref={(ref) => (content = ref)}\r\n              placeholder=\"댓글을 입력하세요.\"\r\n            />\r\n            <S.SubmitIcon onClick={CommentUpload}>\r\n              {<img src={STATIC_URL.SUBMIT} alt=\"submit_icon\" />}\r\n            </S.SubmitIcon>\r\n          </S.WriteCommentContainer>\r\n        </S.PostContainer>\r\n      </S.LostPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LostPost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardLost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","//각 게시글 별 comment 정보 가져오기\r\n//url= localhost:4000/lost_post/게시글 id정보/comment\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useCommentLost = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialComments = async () => {\r\n      const url = window.location.pathname;  //localhost:4000/lost_post/게시글 id정보/\r\n      \r\n      console.log(\"http://localhost:4000\" + url + \"/comment\")\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setComments(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialComments();\r\n  }, []);\r\n\r\n  return {\r\n    comments,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const NoticePost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticePostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","//공지사항 게시글 삭제\r\nexport const PostDelete = async (userid) => {\r\n    const url = window.location.pathname; \r\n\r\n    var bool = window.confirm('정말 삭제하시겠습니까?');\r\n    //삭제 안함\r\n    if(!bool){\r\n      return; \r\n    }\r\n    //삭제함 && 접속자 id가 관리자의 username과 같으면 (temp:admin)\r\n    if(bool&&userid==\"admin\"){\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"게시글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json();      \r\n      alert('삭제되었습니다!'); \r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n\r\n //공지사항 게시글 수정\r\n export const PostEdit = async (username,content) => {\r\n  const url = window.location.pathname;\r\n  //작성자 == 관리자 id (admin)\r\n  if(username === \"admin\"){\r\n    var newcontent = \"content수정됨\"; //upload 페이지 다시 열어야할듯? find_edit view 새로 만들어서 newcont 받아오기\r\n    const request = await fetch(\"http://localhost:4000\" + url +\"/content/\" + newcontent, {\r\n      method: \"PATCH\",\r\n    });\r\n    if (!request.ok) {\r\n      alert(\"게시글 수정 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert('수정되었습니다!');\r\n    window.location.reload(true); //새로고침\r\n  }\r\n  //작성자!= 접속자 -> 수정 안함\r\n  else{\r\n    alert('수정 권한 없음');\r\n  }\r\n}","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useNoticePost } from \"./hooks\";\r\nimport { PostDelete, PostEdit } from \"./function\";\r\n\r\nconst NoticePost = () => {\r\n  const { posts } = useNoticePost();\r\n  const Delete = () => {\r\n    PostDelete(\"admin\");\r\n  };\r\n  const Edit = () => {\r\n    PostEdit(\"admin\", posts.content);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <S.NoticePost>\r\n        <S.TitleContainer>\r\n          <S.Title>공지사항</S.Title>\r\n        </S.TitleContainer>\r\n        <S.NoticePostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n                <S.Icon onClick={Edit}>\r\n                  <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                </S.Icon>\r\n                <S.Icon to=\"/notice\" onClick={Delete}>\r\n                  <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                </S.Icon>\r\n              </S.IconContainer>\r\n            </S.MetaContainer>\r\n            <S.Content>{posts.content}</S.Content>\r\n          </S.PostContainer>\r\n        </S.NoticePostContainer>\r\n        <S.ContentContainer></S.ContentContainer>\r\n      </S.NoticePost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NoticePost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useNoticePost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      console.log(window.location.pathname);\r\n\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const MyPage = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/find-board-header\";\r\nimport BoardList from \"../../container/find-board-list\";\r\n\r\nconst MyPage = () => {\r\n  return (\r\n    <Layout>\r\n      <S.MyPage></S.MyPage>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Main from \"./view/main\";\r\nimport BoardLost from \"./view/board_lost\";\r\nimport Login from \"./view/login\";\r\nimport BoardFind from \"./view/board_find\";\r\nimport FindUpload from \"./view/find-upload\";\r\nimport LostUpload from \"./view/lost-upload\";\r\nimport Notice from \"./view/notice\";\r\nimport NoticeUpload from \"./view/notice-upload\";\r\nimport JoinForm from \"./view/join\";\r\nimport FindPost from \"./view/find-post\";\r\nimport LostPost from \"./view/lost-post\";\r\nimport NoticePost from \"./view/notice-post\";\r\nimport EditUpload from \"./view/find-upload/edit\";\r\nimport MyPage from \"./view/mypage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/lost/board\" exact component={BoardLost} />\r\n        <Route path=\"/lost/board/:page_number\" exact component={BoardLost} />\r\n        <Route path=\"/find/board\" exact component={BoardFind} />\r\n        <Route path=\"/find/board/:page_number\" exact component={BoardFind} />\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/find/upload\" exact component={FindUpload} />\r\n        <Route path=\"/lost/upload\" exact component={LostUpload} />\r\n        <Route path=\"/notice\" exact component={Notice} />\r\n        <Route path=\"/notice/:page_number\" exact component={Notice} />\r\n        <Route path=\"/notice/upload\" exact component={NoticeUpload} />\r\n        <Route path=\"/join\" exact component={JoinForm} />\r\n        <Route path=\"/find/post/:_id\" exact component={FindPost} />\r\n        <Route path=\"/find/post/:_id/edit\" exact component={EditUpload} />\r\n        <Route path=\"/lost/post/:_id\" exact component={LostPost} />\r\n        <Route path=\"/notice/post/:_id\" exact component={NoticePost} />\r\n        <Route path=\"/mypage\" exact component={MyPage} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components/macro\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'NanumSquare', sans-serif !important;\r\n    font-display: 'block';\r\n    box-sizing : border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  html {\r\n    font-size : 10px;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    user-select : none;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding : 0;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport GlobalStyle from \"./component/global-style\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}