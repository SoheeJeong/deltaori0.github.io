{"version":3,"sources":["constant.js","view/main/styles.js","component/layout/styles.js","view/google_login/storage.js","component/header/styles.js","component/header/index.js","component/footer/styles.js","component/footer/index.js","component/layout/index.js","view/main/index.js","view/board_lost/styles.js","container/lost-board-header/styles.js","container/lost-board-header/index.js","container/lost-board-list/styles.js","component/lost-board-item/styles.js","component/lost-board-item/index.js","container/lost-board-list/index.js","container/page-bar/styles.js","component/page-button/styles.js","component/page-button/index.js","container/page-bar/index.js","view/board_lost/index.js","view/board_lost/hooks.js","view/board_lost_search/styles.js","view/board_lost_search/index.js","view/board_lost_search/hooks.js","view/login/styles.js","view/google_login/googlebtn.js","view/login/index.js","view/board_find/styles.js","container/find-board-header/styles.js","container/find-board-header/index.js","container/find-board-list/styles.js","component/find-board-item/styles.js","component/find-board-item/index.js","container/find-board-list/index.js","view/board_find/index.js","view/board_find/hooks.js","view/board_find_search/styles.js","view/board_find_search/index.js","view/board_find_search/hooks.js","view/find-upload/styles.js","view/find-upload/index.js","view/lost-upload/styles.js","view/lost-upload/index.js","view/notice/styles.js","container/notice-header/styles.js","container/notice-header/index.js","container/notice-list/styles.js","component/notice-item/styles.js","component/notice-item/index.js","container/notice-list/index.js","view/notice/index.js","view/notice/hooks.js","view/notice_search/styles.js","view/notice_search/index.js","view/notice_search/hooks.js","view/notice-upload/styles.js","view/notice-upload/index.js","view/find-post/styles.js","container/comment-list/styles.js","component/comment/styles.js","component/comment/function.js","component/comment/index.js","container/comment-list/index.js","view/find-post/function.js","view/find-post/index.js","view/find-post/hooks.js","view/find-post/hooks2.js","view/lost-post/styles.js","view/lost-post/function.js","view/lost-post/index.js","view/lost-post/hooks.js","view/lost-post/hooks2.js","view/notice-post/styles.js","view/notice-post/function.js","view/notice-post/index.js","view/notice-post/hooks.js","view/find-upload/edit.js","view/lost-upload/edit.js","view/mypage/styles.js","view/mypage/index.js","view/mypage/hooks.js","view/mypage/hooks2.js","App.js","serviceWorker.js","component/global-style/index.js","index.js"],"names":["STATIC_URL","THEME_COLOR","Main","styled","div","ContentContainer","MainContent","MainLabel","SubContent","SubLabel","MainContainer","BlockContainer","Link","Title","Description","Icon","Layout","LayoutContainer","storage","set","key","object","localStorage","JSON","stringify","get","parse","e","remove","removeItem","Header","Logo","img","Buttons","Button","button","DesktopLink","TempContainer","to","src","alt","imgUrl","Footer","Label","children","BoardLost","BoardLostContainer","TitleContainer","DescContainer","ToolsContainer","WriteButton","SearchContainer","SearchBox","input","SearchIcon","BoardListContainer","PagebarContainer","BoardHeader","ul","NameContainer","PlaceContainer","CommentContainer","WriterContainer","DateContainer","FindBoardHeader","BoardList","BoardItem","li","LostBoardItem","post","url","_id","title","name","place","replynum","username","date","slice","LostBoardList","posts","map","idx","Pagebar","ArrowBlock","Arrow","PageButton","PageButtonContainer","className","searchval","useState","setPosts","useEffect","a","fetch","method","request","ok","alert","json","data","getInitialPosts","useBoardLost","placeholder","type","ref","onClick","value","length","currenturl","window","location","href","board_type","BoardLostSearch","pathname","useBoardSearch","Login","Container","CLIENT_ID","GoogleBtn","props","UserLogin","state","UserLogout","isLogined","accessToken","email","googleId","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","this","setState","profileObj","imageUrl","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","Component","width","height","BoardFind","BoardFindContainer","FindPlaceContainer","LostPlaceContainer","FindBoardItem","getplace","putplace","useBoardFind","BoardFindSearch","Upload","UploadContainer","WriteInputContainer","select","option","TitleInputContainer","TitleInput","NameInput","PlaceInput","TextEditorContainer","TextEditor","SubmitButton","headers","withCredentials","FindUpload","send_param","selectedOption","content","split","axios","catch","err","console","log","setTimeout","handleEditorChange","target","getContent","options","label","handleChange","styles","container","base","padding","fontSize","flex","provided","color","isSelected","backgroundColor","control","marginTop","onChange","autoFocus","initialValue","init","menubar","plugins","toolbar","mobile","theme","block","LostUpload","Notice","NoticeContainer","NoticeHeader","NoticeItem","NoticeList","useBoardNotice","auth","includes","authentication","NoticeSearch","NoticeUpload","FindPost","FindPostContainer","PostContainer","PostTitle","MetaContainer","Date","IconContainer","Content","CommentsContainer","WriteCommentContainer","WriteComment","SubmitIcon","CommentList","Comment","Writer","ProfileIcon","SetReplynum","num","PostDelete","delauth","id","confirm","reload","PostEdit","editauth","prompt","comment","comments","setComments","getInitialComments","useCommentFind","post_content","editurl","dangerouslySetInnerHTML","__html","postid","postkind","LostPost","LostPostContainer","useCommentLost","NoticePost","NoticePostContainer","useNoticePost","FindEdit","EditPost","newcontent","fetchurl","previousurl","defaultValue","LostEdit","MyPage","MyInfoContainer","MyInfo","Meta","ImageContainer","imageurl","emailname","useMyPage","posts2","useMyPage2","App","path","exact","component","from","Boolean","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f40ecf49.chunk.js","sourcesContent":["export const STATIC_URL = {\r\n  LOGO: `https://user-images.githubusercontent.com/50616334/88753989-86802280-d198-11ea-88f4-1b735493b8d9.png`,\r\n  LOGO2: `https://user-images.githubusercontent.com/50616334/88453653-e4182480-cea3-11ea-8916-18ea7c718377.png`,\r\n  MAGNIFYING_GLASS_ICON: `https://user-images.githubusercontent.com/41494099/87172994-10626b80-c310-11ea-99d3-bcc2da2cdb6d.png`,\r\n  PENCIL_ICON: `https://user-images.githubusercontent.com/50616334/88361747-0a12cb80-cdb5-11ea-9545-f5e7be8e9935.png`,\r\n  PENCIL_ICON2: `https://user-images.githubusercontent.com/50616334/90724248-31e44900-e2f9-11ea-9fec-7068e853490a.png`,\r\n  PROFILE: `https://user-images.githubusercontent.com/50616334/90849381-12592900-e3aa-11ea-83f7-3b13e7938bd8.png`,\r\n  SUBMIT: `https://user-images.githubusercontent.com/50616334/90851306-41be6480-e3af-11ea-98b9-84c5272fcb9c.png`,\r\n  DELETE: `https://user-images.githubusercontent.com/44287798/91042089-2cb23180-e64c-11ea-85c8-5756e4a05592.png`,\r\n  EDIT: `https://user-images.githubusercontent.com/44287798/91042139-42bff200-e64c-11ea-9f6e-e13ed9d55768.png`,\r\n  CHAT: `https://user-images.githubusercontent.com/44287798/91042471-c24dc100-e64c-11ea-9303-cd83c8d87198.png`,\r\n  MEGAPHONE: `https://user-images.githubusercontent.com/50616334/91296892-513b1480-e7d8-11ea-97d2-e78815b0c138.png`,\r\n  SMILE: `https://user-images.githubusercontent.com/50616334/91296938-687a0200-e7d8-11ea-9668-c836d16176c9.png`,\r\n  SAD: `https://user-images.githubusercontent.com/50616334/91296978-7af43b80-e7d8-11ea-9d06-85cb98385dfa.png`,\r\n};\r\n\r\nexport const THEME_COLOR = {\r\n  PRIMARY: \"#A20131\",\r\n  YELLOW: \"#F0B957\",\r\n  LIGHT_YELLOW: \"#F9E3BC\",\r\n  GRAY: \"#F1F1F1\",\r\n  GRAYER: \"#EDEDED\",\r\n  FONT_GRAY: \"#80868B\",\r\n  LIGHT_GRAY: \"#E5E5E3\",\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Main = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const MainContent = styled.div`\r\n  margin: 8rem;\r\n  margin-bottom: 0rem;\r\n  margin-top: 4rem;\r\n`;\r\nexport const MainLabel = styled.div`\r\n  padding: 1rem;\r\n  font-size: 4rem;\r\n  font-weight: bold;\r\n  color: #85092a;\r\n  text-decoration: underline ${THEME_COLOR.LIGHT_YELLOW};\r\n`;\r\nexport const SubContent = styled.div`\r\n  margin: 4rem 9rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 0rem;\r\n`;\r\nexport const SubLabel = styled.div`\r\n  padding: 0.8rem;\r\n  font-size: 2rem;\r\n  color: chacol;\r\n`;\r\nexport const MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  margin-left: 6rem;\r\n\r\n  align-items: center;\r\n  justify-content: left;\r\n`;\r\n\r\nexport const BlockContainer = styled(Link)`\r\n  width: 28rem;\r\n  height: 28rem;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1.5rem;\r\n  margin: 8rem 4rem;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n  border-radius: 0.5rem;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_GRAY};\r\n  text-decoration: none;\r\n  color: black;\r\n  &:hover {\r\n    background-color: ${THEME_COLOR.YELLOW};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin: 1.5rem 0rem 1.5rem 0rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const GoButton = styled(Link)`\r\n  width: 100%;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  img {\r\n    width: 6rem;\r\n    height: 6rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  min-height: 100%;\r\n`;\r\n\r\nexport const LayoutContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 6rem;\r\n`;\r\n","// 로컬 스토리지에 JSON 형태로 저장 / 불러오기 / 삭제 헬퍼\r\nexport const storage = {\r\n    set: (key, object) => {\r\n        if(!localStorage) return;\r\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n    },\r\n    get: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(!localStorage[key]) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const parsed = JSON.parse(localStorage[key]);\r\n            return parsed;\r\n        } catch(e) {\r\n            return localStorage[key];\r\n        }\r\n    },\r\n    remove: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(localStorage[key]) {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n};\r\n\r\nexport default storage;","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  height: 10rem;\r\n  padding: 0rem 2rem;\r\n\r\n  border-bottom: 3px solid ${THEME_COLOR.YELLOW};\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  display: block;\r\n  width: 13rem;\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  border: none;\r\n  background-color: inherit;\r\n  font-size: 1.6rem;\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    color: ${THEME_COLOR.YELLOW};\r\n  }\r\n\r\n  img {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    border-radius: 4rem;\r\n  }\r\n\r\n  width: 8.7rem;\r\n  transition: background-color 0.5s;\r\n`;\r\n\r\nexport const DesktopLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  display: block;\r\n`;\r\n\r\nexport const TempContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { storage } from \"../../view/google_login/storage\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <S.Header>\r\n      <S.DesktopLink to=\"/\">\r\n        <S.Logo src={STATIC_URL.LOGO} alt=\"Logo\"></S.Logo>\r\n      </S.DesktopLink>\r\n      <S.Buttons>\r\n        <S.DesktopLink to=\"/lost/board\">\r\n          <S.Button>분실물</S.Button>\r\n        </S.DesktopLink>\r\n        <S.DesktopLink to=\"/find/board\">\r\n          <S.Button>습득물</S.Button>\r\n        </S.DesktopLink>\r\n        <S.DesktopLink to=\"/notice\">\r\n          <S.Button>공지사항</S.Button>\r\n        </S.DesktopLink>\r\n        {storage.get(\"isLogged\") ? (\r\n          <S.TempContainer>\r\n            <S.DesktopLink to=\"/login\">\r\n              <S.Button>로그아웃</S.Button>\r\n            </S.DesktopLink>\r\n            <S.DesktopLink to=\"/mypage\">\r\n              <S.Button>\r\n                {<img src={storage.get(\"loggedInfo\").imgUrl} alt=\"profile\" />}\r\n              </S.Button>\r\n            </S.DesktopLink>\r\n          </S.TempContainer>\r\n        ) : (\r\n          <S.DesktopLink to=\"/login\">\r\n            <S.Button>로그인</S.Button>\r\n          </S.DesktopLink>\r\n        )}\r\n      </S.Buttons>\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 3rem;\r\n  padding: 0rem 2rem;\r\n\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n\r\n  background-color: ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.3rem;\r\n  margin: 0rem 0.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <S.Footer>\r\n      <S.Label>정소희 (wjdthgmlgo@korea.ac.kr)</S.Label>\r\n      <S.Label>홍은수 (deltaori0@korea.ac.kr)</S.Label>\r\n      <S.Label>FIN:D THANKU</S.Label>\r\n    </S.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as S from \"./styles\";\r\n\r\nimport React from \"react\";\r\nimport Header from \"../header\";\r\nimport Footer from \"../footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <S.Layout>\r\n      <Header />\r\n      <S.LayoutContainer>{children}</S.LayoutContainer>\r\n      <Footer />\r\n    </S.Layout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Layout>\r\n      <S.Main>\r\n        <S.ContentContainer>\r\n          <S.MainContent>\r\n            <S.MainLabel>FIN:D THANKU!</S.MainLabel>\r\n            <S.MainLabel>\r\n              고려대학교 구성원을 위한 스마트 분실물센터\r\n            </S.MainLabel>\r\n          </S.MainContent>\r\n          <S.SubContent>\r\n            <S.SubLabel>\r\n              찾아주셔서(FIN:D) 고맙습니다(THANKU)의 의미를 가지는 FIN:D\r\n              THANKU는\r\n              <br />\r\n              고려대학교 구성원을 위한 분실물센터입니다.\r\n            </S.SubLabel>\r\n            <S.SubLabel>\r\n              구성원 누구나 잃어버린 물건을 쉽게 찾을 수 있도록 하는 것이 FIN:D\r\n              THANKU의 목표입니다.\r\n            </S.SubLabel>\r\n          </S.SubContent>\r\n        </S.ContentContainer>\r\n        <S.MainContainer>\r\n          <S.BlockContainer to=\"lost/board\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.SAD} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>분실물</S.Title>\r\n            <S.Description>잃어버린 물건 보러가기</S.Description>\r\n          </S.BlockContainer>\r\n          <S.BlockContainer to=\"notice\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.MEGAPHONE} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>공지사항</S.Title>\r\n            <S.Description>FIN:D THANKU 공지사항 보러가기</S.Description>\r\n          </S.BlockContainer>\r\n          <S.BlockContainer to=\"find/board\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.SMILE} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>습득물</S.Title>\r\n            <S.Description>찾은 물건 보러가기</S.Description>\r\n          </S.BlockContainer>\r\n        </S.MainContainer>\r\n      </S.Main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardLost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardLostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\nexport const TitleContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.TitleContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>분실물 명</S.Label>\r\n      </S.NameContainer>\r\n      <S.PlaceContainer>\r\n        <S.Label>분실 장소</S.Label>\r\n      </S.PlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>댓글 수</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>작성자</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default FindBoardHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n  /* border: 0.5px solid ${THEME_COLOR.GRAYER}; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nconst LostBoardItem = ({ post }) => {\r\n  const url = \"/lost/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>{post.name}</S.Label>\r\n      </S.NameContainer>\r\n      <S.PlaceContainer>\r\n        <S.Label>{post.place}</S.Label>\r\n      </S.PlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>{post.replynum}</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>{post.username}</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default LostBoardItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport LostBoardItem from \"../../component/lost-board-item\";\r\n\r\nconst LostBoardList = ({ posts }) => {\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        // JSON Object Array의 각각의 JSON 요소를 추출하여 post 변수로 넣어줌\r\n        return <LostBoardItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default LostBoardList;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Pagebar = styled.div`\r\n  display: flex;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const Buttons = styled.ul`\r\n  display: flex;\r\n\r\n  margin: 0rem 0.5rem;\r\n`;\r\n\r\nexport const ArrowBlock = styled.button`\r\n  width: 3.6rem;\r\n  height: 3.6rem;\r\n\r\n  background-color: inherit;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nexport const Arrow = styled.div`\r\n  border: solid black;\r\n  border-width: 0 1px 1px 0;\r\n  display: inline-block;\r\n  padding: 2px;\r\n\r\n  &.right {\r\n    transform: rotate(-45deg);\r\n    -webkit-transform: rotate(-45deg);\r\n    margin-right: 2px;\r\n  }\r\n\r\n  &.left {\r\n    transform: rotate(135deg);\r\n    -webkit-transform: rotate(135deg);\r\n    margin-left: 2px;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const PageButton = styled.li`\r\n  font-size: 1.4rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PageButtonContainer = styled.div`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  width: 3.6rem;\r\n  height: 3.6rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst PageButton = () => {\r\n  return (\r\n    <S.PageButton>\r\n      <S.PageButtonContainer>1</S.PageButtonContainer>\r\n      <S.PageButtonContainer>2</S.PageButtonContainer>\r\n      <S.PageButtonContainer>3</S.PageButtonContainer>\r\n      <S.PageButtonContainer>4</S.PageButtonContainer>\r\n      <S.PageButtonContainer>5</S.PageButtonContainer>\r\n    </S.PageButton>\r\n  );\r\n};\r\n\r\nexport default PageButton;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport PageButton from \"../../component/page-button\";\r\n\r\nconst Pagebar = () => {\r\n  return (\r\n    <S.Pagebar>\r\n      <S.ArrowBlock>\r\n        <S.Arrow className=\"left\"></S.Arrow>\r\n      </S.ArrowBlock>\r\n      <S.Buttons>\r\n        <PageButton />\r\n      </S.Buttons>\r\n      <S.ArrowBlock>\r\n        <S.Arrow className=\"right\"></S.Arrow>\r\n      </S.ArrowBlock>\r\n    </S.Pagebar>\r\n  );\r\n};\r\n\r\nexport default Pagebar;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/lost-board-header\";\r\nimport BoardList from \"../../container/lost-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardLost } from \"./hooks\";\r\n\r\nconst BoardLost = () => {\r\n  const { posts } = useBoardLost();\r\n  var searchval;\r\n  const Search = () => {\r\n    if (searchval.value.length < 2) {\r\n      alert(\"두 글자 이상 입력해주세요.\");\r\n      return;\r\n    }\r\n    const currenturl = window.location.href;\r\n    window.location.href = currenturl + \"/search/\" + searchval.value;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <S.BoardLost>\r\n        <S.BoardLostContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>분실물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>분실물 게시판에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n        </S.BoardLostContainer>\r\n        <S.ToolsContainer>\r\n          <S.SearchContainer>\r\n            <S.SearchBox\r\n              placeholder=\"제목 검색\"\r\n              type=\"text\"\r\n              ref={(ref) => (searchval = ref)}\r\n            />\r\n            <S.SearchIcon onClick={Search}>\r\n              <img\r\n                src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                alt=\"magnifying-glass\"\r\n              />\r\n            </S.SearchIcon>\r\n          </S.SearchContainer>\r\n          <S.WriteButton to=\"/lost/upload\">글 작성</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar board_type=\"lost\" />\r\n        </S.PagebarContainer>\r\n      </S.BoardLost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardLost;\r\n","import { useEffect, useState } from \"react\";\r\nexport const useBoardLost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      // 분실물 게시판에 작성된 게시글 정보들을 JSON Object Array로 가져온다\r\n      // GET https://find-thanku.herokuapp.com/find/board\r\n      const request = await fetch(\r\n        \"https://find-thanku.herokuapp.com/lost/board\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardLost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardLostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport BoardHeader from \"../../container/lost-board-header\";\r\nimport BoardList from \"../../container/lost-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardSearch } from \"./hooks\";\r\n\r\nconst BoardLostSearch = () => {\r\n  const { posts } = useBoardSearch();\r\n\r\n  return (\r\n    <Layout>\r\n      <S.BoardLost>\r\n        <S.BoardLostContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>분실물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n        </S.BoardLostContainer>\r\n        <S.ToolsContainer>\r\n          <S.Description>검색 결과</S.Description>\r\n          <S.WriteButton to=\"/lost/board\">목록으로</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar />\r\n        </S.PagebarContainer>\r\n      </S.BoardLost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardLostSearch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardSearch = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 검색 결과에 해당하는 게시글들을 JSON 배열 형태로 가져온다\r\n    // GET https://find-thanku.herokuapp.com/lost/board/search/:searchval\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Login = styled.div`\r\n  width: 400px;\r\n  height: 400px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n\r\n  padding-top: 50px;\r\n  padding-right: 30px;\r\n  padding-bottom: 0px;\r\n  padding-left: 30px;\r\n\r\n  border: 2px solid #f0b957;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\r\nimport { storage } from \"./storage\";\r\n\r\n// GoogleAPI를 통해 받아온 Client ID\r\nconst CLIENT_ID =\r\n  \"920956368020-sk2d48e21kq4rrbl83kc4g5jedclnkom.apps.googleusercontent.com\";\r\n\r\nexport class GoogleBtn extends Component {\r\n  // 로그인(onclick)\r\n  login(response) {\r\n    // access token을 받아왔으면 JSON state 지정\r\n    if (response.accessToken) {\r\n      this.setState((state) => ({\r\n        isLogined: true,\r\n        accessToken: response.accessToken,\r\n        username: response.profileObj.name,\r\n        email: response.profileObj.email,\r\n        googleId: response.googleId,\r\n        imgUrl: response.profileObj.imageUrl,\r\n      }));\r\n    }\r\n    this.UserLogin(); //upload into userdb\r\n    window.location.href = \"/\"; // 메인 페이지로 이동\r\n  }\r\n  // 로그인 함수\r\n  UserLogin = () => {\r\n    //local storage에 저장\r\n    storage.set(\"loggedInfo\", this.state);\r\n    storage.set(\"isLogged\", true);\r\n    alert(\"로그인 완료!\");\r\n  };\r\n  // 로그아웃(onclick)\r\n  logout(response) {\r\n    this.setState((state) => ({\r\n      isLogined: false,\r\n      accessToken: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      googleId: \"\",\r\n      imgUrl: \"\",\r\n    }));\r\n    this.UserLogout();\r\n    alert(\"로그아웃 완료!\");\r\n    window.location.href = \"/\"; // 메인 페이지로 이동\r\n  }\r\n  // 로그아웃\r\n  UserLogout = async () => {\r\n    // localstorage에서 user데이터 삭제\r\n    storage.remove(\"loggedInfo\");\r\n    storage.set(\"isLogged\", false);\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined: false,\r\n      accessToken: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      googleId: \"\",\r\n      imgUrl: \"\",\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n  }\r\n  handleLoginFailure(response) {\r\n    alert(\"Failed to log in\");\r\n  }\r\n\r\n  handleLogoutFailure(response) {\r\n    alert(\"Failed to log out\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {storage.get(\"isLogged\") ? (\r\n          <GoogleLogout\r\n            clientId={CLIENT_ID}\r\n            buttonText=\"로그아웃\"\r\n            onLogoutSuccess={this.logout}\r\n            onFailure={this.handleLogoutFailure}\r\n          />\r\n        ) : (\r\n          <GoogleLogin\r\n            clientId={CLIENT_ID}\r\n            buttonText=\"로그인\"\r\n            onSuccess={this.login}\r\n            onFailure={this.handleLoginFailure}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            responseType=\"code,token\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleBtn;\r\n","import React from \"react\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport Layout from \"../../component/layout\";\r\nimport * as S from \"./styles\";\r\nimport \"./login.scss\";\r\nimport { GoogleBtn } from \"../google_login/googlebtn\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Layout>\r\n      <S.Login>\r\n        <div>\r\n          <img src={STATIC_URL.LOGO} width=\"200px\" height=\"90px\" alt=\"logo\" />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <S.Container>\r\n          <GoogleBtn />\r\n        </S.Container>\r\n      </S.Login>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardFind = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardFindContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FindPlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LostPlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.TitleContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>습득물 명</S.Label>\r\n      </S.NameContainer>\r\n      <S.LostPlaceContainer>\r\n        <S.Label>습득 장소</S.Label>\r\n      </S.LostPlaceContainer>\r\n      <S.FindPlaceContainer>\r\n        <S.Label>보관 장소</S.Label>\r\n      </S.FindPlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>댓글 수</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>작성자</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default FindBoardHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FindPlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LostPlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardItem = ({ post }) => {\r\n  const url = \"/find/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>{post.name}</S.Label>\r\n      </S.NameContainer>\r\n      <S.LostPlaceContainer>\r\n        <S.Label>{post.getplace}</S.Label>\r\n      </S.LostPlaceContainer>\r\n      <S.FindPlaceContainer>\r\n        <S.Label>{post.putplace}</S.Label>\r\n      </S.FindPlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>{post.replynum}</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>{post.username}</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default FindBoardItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport BoardItem from \"../../component/find-board-item\";\r\n\r\nconst BoardList = ({ posts }) => {\r\n  return (\r\n    // JSON Object Array의 각각의 JSON 요소를 추출하여 post 변수로 넣어줌\r\n    // 게시글에 달린 댓글 전부 화면에 표시됨\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <BoardItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/find-board-header\";\r\nimport BoardList from \"../../container/find-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardFind } from \"./hooks\";\r\n\r\nconst BoardFind = () => {\r\n  const { posts } = useBoardFind();\r\n\r\n  //게시글 검색\r\n  var searchval;\r\n  const Search = () => {\r\n    if (searchval.value.length < 2) {\r\n      alert(\"두 글자 이상 입력해주세요.\");\r\n      return;\r\n    }\r\n    const currenturl = window.location.href;\r\n    // 검색한 내용을 포함하여 수정된 url로 페이지를 이동\r\n    window.location.href = currenturl + \"/search/\" + searchval.value;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <S.BoardFind>\r\n        <S.BoardFindContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>습득물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>습득물 게시판에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n        </S.BoardFindContainer>\r\n        <S.ToolsContainer>\r\n          <S.SearchContainer>\r\n            <S.SearchBox\r\n              placeholder=\"제목 검색\"\r\n              type=\"text\"\r\n              ref={(ref) => (searchval = ref)}\r\n            />\r\n            <S.SearchIcon onClick={Search}>\r\n              <img\r\n                src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                alt=\"magnifying-glass\"\r\n              />\r\n            </S.SearchIcon>\r\n          </S.SearchContainer>\r\n          <S.WriteButton to=\"/find/upload\">글 작성</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar />\r\n        </S.PagebarContainer>\r\n      </S.BoardFind>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardFind;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardFind = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 습득물 게시판에 작성된 게시글 정보들을 JSON Object Array로 가져온다\r\n    // GET https://find-thanku.herokuapp.com/find/board\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\r\n        \"https://find-thanku.herokuapp.com/find/board\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardFind = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardFindContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport BoardHeader from \"../../container/find-board-header\";\r\nimport BoardList from \"../../container/find-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardSearch } from \"./hooks\";\r\n\r\nconst BoardFindSearch = () => {\r\n  const { posts } = useBoardSearch();\r\n  return (\r\n    <Layout>\r\n      <S.BoardFind>\r\n        <S.BoardFindContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>습득물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n        </S.BoardFindContainer>\r\n        <S.ToolsContainer>\r\n          <S.Description>검색 결과</S.Description>\r\n          <S.WriteButton to=\"/find/board\">목록으로</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar />\r\n        </S.PagebarContainer>\r\n      </S.BoardFind>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardFindSearch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardSearch = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 검색 결과에 해당하는 게시글들을 JSON 배열 형태로 가져온다\r\n    // GET https://find-thanku.herokuapp.com/find/board/search/:searchval\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const TitleInput = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PlaceInput = styled.input`\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nclass FindUpload extends Component {\r\n  FindUpload = () => {\r\n    // 데이터베이스로 보낼 JSON 형식 지정\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      googleId: storage.get(\"loggedInfo\").googleId,\r\n      getplace: this.getplace.value,\r\n      putplace: this.state.selectedOption.value,\r\n      content: this.content,\r\n      username: storage.get(\"loggedInfo\").email.split(\"@\")[0],\r\n    };\r\n    axios\r\n      // 데이터베이스에 데이터 업로드\r\n      // POST https://find-thanku.herokuapp.com/find/upload\r\n      .post(\"https://find-thanku.herokuapp.com/find/upload\", send_param)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n    // 1초 sleep\r\n    setTimeout(function () {\r\n      window.location.pathname = \"/find/board\";\r\n    }, 1000);\r\n  };\r\n  //texteditor 안의 내용이 바뀌면 content 변수 해당 값으로 업데이트\r\n  handleEditorChange = (e) => {\r\n    this.content = e.target.getContent();\r\n  };\r\n  //Select 옵션 지정\r\n  options = [\r\n    { value: \"중앙광장 원스탑\", label: \"중앙광장 원스탑\" },\r\n    { value: \"하나스퀘어 원스탑\", label: \"하나스퀘어 원스탑\" },\r\n    { value: \"기타\", label: \"기타\" },\r\n  ];\r\n\r\n  state = {\r\n    selectedOption: \"\",\r\n  };\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n  };\r\n\r\n  render() {\r\n    // select state\r\n    const { selectedOption } = this.state;\r\n\r\n    // Select 옵션 스타일 지정\r\n    const styles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        padding: \"2px\",\r\n        fontSize: \"18px\",\r\n        height: \"30px\",\r\n        flex: 1,\r\n      }),\r\n      option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isSelected ? \"black\" : \"black\",\r\n        backgroundColor: state.isSelected ? \"lightgrey\" : \"white\",\r\n      }),\r\n      control: (provided) => ({\r\n        ...provided,\r\n        marginTop: \"1%\",\r\n      }),\r\n    };\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목 명\"\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                placeholder=\"습득물 명\"\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.getplace = ref)}\r\n                placeholder=\"습득 장소\"\r\n              />\r\n              <Select\r\n                styles={styles}\r\n                placeholder=\"보관 장소\"\r\n                options={this.options}\r\n                onChange={this.handleChange}\r\n                autoFocus={true}\r\n                value={selectedOption}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder:\r\n                      \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder:\r\n                        \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton onClick={this.FindUpload} type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindUpload;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAY};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const TitleInput = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PlaceInput = styled.input`\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport * as S from \"./styles\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\nimport { storage } from \"../google_login/storage\";\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nclass LostUpload extends Component {\r\n  LostUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      googleId: storage.get(\"loggedInfo\").googleId,\r\n      place: this.place.value,\r\n      content: this.content,\r\n      username: storage.get(\"loggedInfo\").email.split(\"@\")[0],\r\n    };\r\n    axios\r\n      .post(\"https://find-thanku.herokuapp.com/lost/upload\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n    setTimeout(function () {\r\n      window.location.pathname = \"/lost/board\";\r\n    }, 1000);\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    this.content = e.target.getContent();\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목 명\"\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                placeholder=\"분실물 명\"\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.place = ref)}\r\n                placeholder=\"분실 장소\"\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder:\r\n                      \"분실물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder:\r\n                        \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton onClick={this.LostUpload} type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LostUpload;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Notice = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst NoticeHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.NameContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.NameContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default NoticeHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n  /* border: 0.5px solid ${THEME_COLOR.GRAYER}; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst NoticeItem = ({ post }) => {\r\n  const url = \"/notice/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default NoticeItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport NoticeItem from \"../../component/notice-item\";\r\n\r\nconst NoticeList = ({ posts }) => {\r\n  return (\r\n    // JSON Object Array의 각각의 JSON 요소를 추출하여 post 변수로 넣어줌\r\n    // 게시글에 달린 댓글 전부 화면에 표시됨\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <NoticeItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/notice-header\";\r\nimport BoardList from \"../../container/notice-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nimport { useBoardNotice } from \"./hooks\";\r\n\r\nconst Notice = () => {\r\n  const { posts } = useBoardNotice();\r\n  const authentication = () => {\r\n    // 관리자 설정\r\n    var admin = [\"112743772853536234615\", \"115049392299918823209\"]; //[eunsoo,sohee]\r\n    try {\r\n      var auth = admin.includes(storage.get(\"loggedInfo\").googleId);\r\n    } catch {\r\n      alert(\"로그인 하세요!\");\r\n    }\r\n    return auth;\r\n  };\r\n  var auth = authentication();\r\n  //검색기능\r\n  var searchval;\r\n  const Search = () => {\r\n    if (searchval.value.length < 2) {\r\n      alert(\"두 글자 이상 입력해주세요.\");\r\n      return;\r\n    }\r\n    const currenturl = window.location.href;\r\n    window.location.href = currenturl + \"/search/\" + searchval.value;\r\n  };\r\n  return (\r\n    <Layout>\r\n      <S.Notice>\r\n        <S.NoticeContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>공지사항</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>\r\n              홈페이지 공지사항이 게시되는 페이지 입니다\r\n            </S.Description>\r\n          </S.DescContainer>\r\n          <S.ToolsContainer>\r\n            <S.SearchContainer>\r\n              <S.SearchBox\r\n                placeholder=\"검색\"\r\n                type=\"text\"\r\n                ref={(ref) => (searchval = ref)}\r\n              />\r\n              <S.SearchIcon onClick={Search}>\r\n                <img\r\n                  src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                  alt=\"magnifying-glass\"\r\n                />\r\n              </S.SearchIcon>\r\n            </S.SearchContainer>\r\n            {auth ? (\r\n              <S.WriteButton to=\"/notice/upload\">글 작성</S.WriteButton>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </S.ToolsContainer>\r\n          <S.BoardListContainer>\r\n            <BoardHeader />\r\n            <BoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n          <S.PagebarContainer>\r\n            <Pagebar />\r\n          </S.PagebarContainer>\r\n        </S.NoticeContainer>\r\n      </S.Notice>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardNotice = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      // GET https://find-thanku.herokuapp.com/notice/\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com/notice\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not Responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Notice = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport BoardHeader from \"../../container/notice-header\";\r\nimport BoardList from \"../../container/notice-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardSearch } from \"./hooks\";\r\n\r\nconst NoticeSearch = () => {\r\n  const { posts } = useBoardSearch();\r\n  return (\r\n    <Layout>\r\n      <S.Notice>\r\n        <S.NoticeContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>공지사항</S.Title>\r\n          </S.TitleContainer>\r\n          <S.ToolsContainer>\r\n            <S.Description>검색 결과</S.Description>\r\n            <S.WriteButton to=\"/notice/upload\">목록으로</S.WriteButton>\r\n          </S.ToolsContainer>\r\n          <S.BoardListContainer>\r\n            <BoardHeader />\r\n            <BoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n          <S.PagebarContainer>\r\n            <Pagebar board_type=\"notice\" />\r\n          </S.PagebarContainer>\r\n        </S.NoticeContainer>\r\n      </S.Notice>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NoticeSearch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardSearch = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 검색 결과에 해당하는 게시글들을 JSON 배열 형태로 가져온다\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      // GET https://find-thanku.herokuapp.com/notice/search/:searchval\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAY};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport axios from \"axios\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nclass NoticeUpload extends Component {\r\n  Upload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      content: this.content,\r\n      googleId: storage.get(\"loggedInfo\").googleId,\r\n    };\r\n    // POST https://find-thanku.herokuapp.com/notice/upload\r\n    axios\r\n      .post(\"https://find-thanku.herokuapp.com/notice/upload\", send_param)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  // texteditor에 작성되는 내용을 content 변수로 받아줌\r\n  handleEditorChange = (e) => {\r\n    this.content = e.target.getContent();\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목\"\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder:\r\n                      \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder:\r\n                        \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton to=\"/notice\" onClick={this.Upload}>\r\n              작성\r\n            </S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoticeUpload;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const FindPost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const FindPostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled(Link)`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const CommentsContainer = styled.div`\r\n  width: 99%;\r\n`;\r\n\r\nexport const WriteCommentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriteComment = styled.input`\r\n  width: 97%;\r\n  font-size: 1.4rem;\r\n  height: 3.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SubmitIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const CommentList = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Comment = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 1rem;\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  padding: 1rem 1rem 0.5rem 1rem;\r\n`;\r\n\r\nexport const Writer = styled.div`\r\n  font-size: 1.3rem;\r\n  margin-right: 1rem;\r\n`;\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n`;\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0rem 1rem 1rem 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nexport const ProfileIcon = styled.div`\r\n  margin-right: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const CommentIcon = styled.div`\r\n  margin-right: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","//댓글 수 지정 함수\r\nconst SetReplynum = async (num) => {\r\n  const url = window.location.pathname; // 현재 페이지의 pathname을 가져온다\r\n  // 변경된 댓글 수를 해당 게시글 url에 업데이트\r\n  // 분실물 게시판 : PATCH https://find-thanku.herokuapp.com/lost/post/:_id/replynum/:num\r\n  // 습득물 게시판 : PATCH https://find-thanku.herokuapp.com/find/post/:_id/replynum/:num\r\n  const request = await fetch(\r\n    \"https://find-thanku.herokuapp.com\" + url + \"/replynum/\" + num,\r\n    {\r\n      method: \"PATCH\",\r\n    }\r\n  );\r\n  if (!request.ok) {\r\n    alert(\"Server not Responding\");\r\n    return;\r\n  }\r\n  await request.json();\r\n};\r\n\r\n// 댓글 삭제하는 함수 (댓글 작성자만 삭제 권한 부여)\r\nexport const PostDelete = async (delauth, id) => {\r\n  const url = window.location.pathname;\r\n  // (삭제함) && (작성자 == 현재 접속자의 googleId)\r\n  if (delauth) {\r\n    var bool = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    // 삭제 안함\r\n    if (!bool) {\r\n      return;\r\n    }\r\n    // 삭제함\r\n    // 분실물 게시판 : DELETE https://find-thanku.herokuapp.como/lost/post/:_id/comment/:_commentid\r\n    // 습득물 게시판 : DELETE https://find-thanku.herokuapp.como/find/post/:_id/comment/:_commentid\r\n    const request = await fetch(\r\n      \"https://find-thanku.herokuapp.com\" + url + \"/comment/\" + id,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (!request.ok) {\r\n      alert(\"댓글 삭제 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    SetReplynum(-1); // 댓글수 -1\r\n    alert(\"댓글이 삭제되었습니다!\");\r\n    window.location.reload(true); // 새로고침\r\n  }\r\n  // 작성자 != 접속자 -> 삭제 안함\r\n  else {\r\n    alert(\"삭제 권한 없음\");\r\n  }\r\n};\r\n\r\n// 댓글 수정하는 함수\r\nexport const PostEdit = async (editauth, content, id) => {\r\n  const url = window.location.pathname;\r\n  //작성자 == 현재 접속자의 googleId\r\n  if (editauth) {\r\n    var input = prompt(\"새로운 내용을 입력하세요\", content);\r\n    if (!input) {\r\n      input = content; //input == null(취소 클릭시)\r\n    }\r\n    // 분실물 게시판 : PATCH https://find-thanku.herokuapp.com/lost/post/:_id/comment/:_commentid/content/:content\r\n    // 습득물 게시판 : PATCH https://find-thanku.herokuapp.com/find/post/:_id/comment/:_commentid/content/:content\r\n    const request = await fetch(\r\n      \"https://find-thanku.herokuapp.com\" +\r\n        url +\r\n        \"/comment/\" +\r\n        id +\r\n        \"/content/\" +\r\n        input,\r\n      {\r\n        method: \"PATCH\",\r\n      }\r\n    );\r\n    if (!request.ok) {\r\n      alert(\"댓글 수정 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    window.location.reload(true); //새로고침\r\n  }\r\n  //작성자!= 접속자 -> 수정 안함\r\n  else {\r\n    alert(\"수정 권한 없음\");\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { PostDelete, PostEdit } from \"./function\";\r\nimport { storage } from \"../../view/google_login/storage\";\r\n\r\nconst Comment = ({ comment }) => {\r\n  // 댓글 JSON Object Array를 comment 변수로 받아옴\r\n  const googleId = comment.googleId; // 댓글 작성자의 구글 아이디\r\n  const content = comment.content;\r\n  const id = comment._id;\r\n  const date = comment.date;\r\n  const username = comment.username;\r\n  const currentId = storage.get(\"loggedInfo\").googleId; // local storage를 사용하여 접속자의 구글 아이디 정보를 가져옴\r\n\r\n  // 작성자 == 접속자인 경우 삭제/수정 권한 부여\r\n  var editauth;\r\n  var delauth;\r\n  if (currentId === googleId) {\r\n    editauth = true;\r\n    delauth = true;\r\n  } else {\r\n    editauth = false;\r\n    delauth = false;\r\n  }\r\n\r\n  const Delete = () => {\r\n    PostDelete(delauth, id);\r\n  };\r\n\r\n  const Edit = () => {\r\n    PostEdit(delauth, content, id);\r\n  };\r\n\r\n  return (\r\n    <S.Comment>\r\n      <S.WriterContainer>\r\n        <S.ProfileIcon>\r\n          <img src={STATIC_URL.PROFILE} alt=\"profile\" />\r\n        </S.ProfileIcon>\r\n        <S.Writer>{username}</S.Writer>\r\n        <S.Date>{date.slice(0, 10)}</S.Date>\r\n      </S.WriterContainer>\r\n      <S.ContentContainer>\r\n        <S.Content>{content}</S.Content>\r\n        <S.IconContainer>\r\n          {editauth ? (\r\n            <S.Icon onClick={Edit}>\r\n              <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n            </S.Icon>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {delauth ? (\r\n            <S.Icon to=\"find/board\" onClick={Delete}>\r\n              <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n            </S.Icon>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </S.IconContainer>\r\n      </S.ContentContainer>\r\n    </S.Comment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Comment from \"../../component/comment\";\r\n\r\nconst CommentList = ({ comments }) => {\r\n  return (\r\n    // JSON Object Array의 각각의 JSON 요소를 추출하여 comment 변수로 넣어줌\r\n    // 게시글에 달린 댓글 전부 화면에 표시됨\r\n    <S.CommentList>\r\n      {comments.map((comment, idx) => {\r\n        return <Comment comment={comment} key={idx} />;\r\n      })}\r\n    </S.CommentList>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","//게시글 삭제\r\nexport const PostDelete = async (delauth) => {\r\n  const url = window.location.pathname; // /find_post/게시글 id정보/\r\n  //삭제함 && 작성자 == 현재 접속자의 username (temp:nonamed)\r\n  if (delauth) {\r\n    var bool = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    //삭제 안함\r\n    if (!bool) {\r\n      return;\r\n    }\r\n    //삭제함\r\n    // DELETE https://find-thanku.herokuapp.com/find/post/:_id\r\n    const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!request.ok) {\r\n      alert(\"게시글 삭제 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert(\"삭제되었습니다!\");\r\n  }\r\n  //작성자!= 접속자 -> 삭제 안함\r\n  else {\r\n    alert(\"삭제 권한 없음\");\r\n  }\r\n};\r\n\r\n//댓글수 조정\r\nexport const SetReplynum = async (num) => {\r\n  const url = window.location.pathname;\r\n  const request = await fetch(\r\n    // PATCH https://find-thanku.herokuapp.com/find/post/:_id/replynum/:num\r\n    \"https://find-thanku.herokuapp.com\" + url + \"/replynum/\" + num,\r\n    {\r\n      method: \"PATCH\",\r\n    }\r\n  );\r\n  if (!request.ok) {\r\n    alert(\"Server not responding\");\r\n    return;\r\n  }\r\n  await request.json();\r\n};\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport CommentList from \"../../container/comment-list\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useBoardFind } from \"./hooks\";\r\nimport { useCommentFind } from \"./hooks2\";\r\nimport { PostDelete, SetReplynum } from \"./function\";\r\nimport axios from \"axios\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nconst FindPost = () => {\r\n  const { posts } = useBoardFind();\r\n  const { comments } = useCommentFind();\r\n  const currentId = storage.get(\"loggedInfo\").googleId;\r\n\r\n  var content;\r\n  //삭제,수정 권한 부여 (접속자 == 작성자)\r\n  var editauth;\r\n  var delauth;\r\n  if (currentId === posts.googleId) {\r\n    editauth = true;\r\n    delauth = true;\r\n  } else {\r\n    editauth = false;\r\n    delauth = false;\r\n  }\r\n\r\n  const CommentUpload = () => {\r\n    const url = window.location.pathname;\r\n    // 데이터베이스로 보낼 댓글 정보\r\n    const send_param = {\r\n      headers,\r\n      username: storage.get(\"loggedInfo\").email.split(\"@\")[0],\r\n      googleId: storage.get(\"loggedInfo\").googleId,\r\n      content: content.value,\r\n      postid: posts._id,\r\n      postkind: \"find\",\r\n    };\r\n    axios\r\n      // POST https://find-thanku.herokuapp.com/find/post/:_id/comment\r\n      .post(\"https://find-thanku.herokuapp.com\" + url + \"/comment\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    SetReplynum(1); //댓글수 +1\r\n    alert(\"댓글 작성 완료!\");\r\n    //새로고침\r\n    setTimeout(function () {\r\n      window.location.reload(true);\r\n    }, 1000);\r\n  };\r\n  //게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(delauth);\r\n    setTimeout(function () {\r\n      window.location.pathname = \"/find/board\";\r\n    }, 1000);\r\n  };\r\n  //게시글 수정\r\n  const Edit = () => {\r\n    const url = window.location.href; //window.location.pathname;\r\n    const editurl = url + \"/edit\";\r\n    if (editauth) {\r\n      const placeholder = {\r\n        title: posts.title,\r\n        name: posts.name,\r\n        getplace: posts.getplace,\r\n        putplace: posts.putplace,\r\n        content: posts.content,\r\n      };\r\n      storage.set(\"editval\", placeholder);\r\n      window.location.href = editurl; //editurl로 이동\r\n    } else {\r\n      alert(\"수정 권한 없음\");\r\n      return;\r\n    }\r\n  };\r\n  const post_content = posts.content;\r\n\r\n  return (\r\n    <Layout>\r\n      <S.FindPost>\r\n        <S.TitleContainer>\r\n          <S.Title>습득물 게시판</S.Title>\r\n        </S.TitleContainer>\r\n        <S.FindPostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n                {editauth ? (\r\n                  <S.Icon onClick={Edit}>\r\n                    <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                  </S.Icon>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n                {delauth ? (\r\n                  <S.Icon onClick={Delete}>\r\n                    <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                  </S.Icon>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </S.IconContainer>\r\n            </S.MetaContainer>\r\n            <S.Label>습득물 명 : {posts.name}</S.Label>\r\n            <S.Label>습득 장소 : {posts.getplace} </S.Label>\r\n            <S.Label>보관 장소 : {posts.putplace} </S.Label>\r\n            <S.ContentContainer>\r\n              <S.Content>\r\n                <div dangerouslySetInnerHTML={{ __html: post_content }} />\r\n              </S.Content>\r\n            </S.ContentContainer>\r\n          </S.PostContainer>\r\n        </S.FindPostContainer>\r\n        <br />\r\n        <br />\r\n        <S.PostContainer>\r\n          <S.Label>\r\n            {<img src={STATIC_URL.CHAT} alt=\"chat\" width=\"15x\" />} 댓글\r\n          </S.Label>\r\n          <S.CommentsContainer>\r\n            <CommentList comments={comments} />\r\n          </S.CommentsContainer>\r\n          <S.WriteCommentContainer>\r\n            <S.WriteComment\r\n              type=\"text\"\r\n              ref={(ref) => (content = ref)}\r\n              placeholder=\"댓글을 입력하세요.\"\r\n            />\r\n            <S.SubmitIcon onClick={CommentUpload}>\r\n              <img src={STATIC_URL.SUBMIT} alt=\"submit_icon\" />\r\n            </S.SubmitIcon>\r\n          </S.WriteCommentContainer>\r\n        </S.PostContainer>\r\n      </S.FindPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FindPost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardFind = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname; // /find/post/:id\r\n      // 상세 게시글 불러오기\r\n      // GET https://find-thanku.herokuapp.com/find/post/:_id\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n        method: \"GET\",\r\n      });\r\n      if (!request.ok) {\r\n        //  수정된 상세 게시글 불러오기\r\n        const request2 = await fetch(\r\n          \"https://find-thanku.herokuapp.com\" + url + \"/edit\",\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        );\r\n        if (!request2.ok) {\r\n          alert(\"Server not responding\");\r\n          return;\r\n        }\r\n      }\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","//각 게시글 별 comment 정보 가져오기\r\n//url= localhost:4000/find_post/게시글 id정보/comment\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useCommentFind = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialComments = async () => {\r\n      const url = window.location.pathname; // /find/post/게시글 id정보/\r\n\r\n      // GET https://find-thanku.herokuapp.com/find/post/:_id/comment\r\n      const request = await fetch(\r\n        \"https://find-thanku.herokuapp.com\" + url + \"/comment\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setComments(data);\r\n    };\r\n\r\n    getInitialComments();\r\n  }, []);\r\n\r\n  return {\r\n    comments,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const LostPost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const LostPostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1.6rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nexport const CommentsContainer = styled.div`\r\n  width: 99%;\r\n`;\r\n\r\nexport const WriteCommentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriteComment = styled.input`\r\n  width: 97%;\r\n  font-size: 1.4rem;\r\n  height: 3.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SubmitIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","//게시글 삭제\r\nexport const PostDelete = async (delauth) => {\r\n  const url = window.location.pathname; ///lost/post/게시글 id정보/\r\n  //삭제함 && 작성자 == 현재 접속자의 username (temp:nonamed)\r\n  if (delauth) {\r\n    var bool = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    //삭제 안함\r\n    if (!bool) {\r\n      return;\r\n    }\r\n    //삭제함\r\n    // DELETE https://find-thanku.herokuapp.com/lost/post/:_id\r\n    const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!request.ok) {\r\n      alert(\"게시글 삭제 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert(\"삭제되었습니다!\");\r\n  }\r\n  //작성자!= 접속자 -> 삭제 안함\r\n  else {\r\n    alert(\"삭제 권한 없음\");\r\n  }\r\n};\r\n\r\n//댓글수 조정\r\nexport const SetReplynum = async (num) => {\r\n  const url = window.location.pathname;\r\n  // PATCH https://find-thanku.herokuapp.com/lost/post/:_id/replynum/:num\r\n  const request = await fetch(\r\n    \"https://find-thanku.herokuapp.com\" + url + \"/replynum/\" + num,\r\n    {\r\n      method: \"PATCH\",\r\n    }\r\n  );\r\n  if (!request.ok) {\r\n    alert(\"Server not responding\");\r\n    return;\r\n  }\r\n  await request.json();\r\n};\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport CommentList from \"../../container/comment-list\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useBoardLost } from \"./hooks\";\r\nimport { PostDelete, SetReplynum } from \"./function\";\r\nimport { useCommentLost } from \"./hooks2\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nconst LostPost = () => {\r\n  const { posts } = useBoardLost();\r\n  const { comments } = useCommentLost();\r\n  const currentId = storage.get(\"loggedInfo\").googleId;\r\n  var content;\r\n  //삭제,수정 권한\r\n  var editauth;\r\n  var delauth;\r\n  if (currentId === posts.googleId) {\r\n    editauth = true;\r\n    delauth = true;\r\n  } else {\r\n    editauth = false;\r\n    delauth = false;\r\n  }\r\n\r\n  //댓글 업로드(신규)\r\n  const CommentUpload = () => {\r\n    const url = window.location.pathname;\r\n    const send_param = {\r\n      headers,\r\n      username: storage.get(\"loggedInfo\").email.split(\"@\")[0],\r\n      googleId: storage.get(\"loggedInfo\").googleId,\r\n      content: content.value,\r\n      postid: posts._id,\r\n      postkind: \"lost\",\r\n    };\r\n    // POST https://find-thanku.herokuapp.com/lost/post/:_id/comment\r\n    axios\r\n      .post(\"https://find-thanku.herokuapp.com\" + url + \"/comment\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    SetReplynum(1); //댓글수 +1\r\n    alert(\"댓글 작성 완료!\");\r\n\r\n    setTimeout(function () {\r\n      window.location.reload(true);\r\n    }, 1000);\r\n  };\r\n  //게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(delauth);\r\n    setTimeout(function () {\r\n      window.location.pathname = \"/lost/board\";\r\n    }, 1000);\r\n  };\r\n  //게시글 수정\r\n  const Edit = () => {\r\n    const url = window.location.href; //window.location.pathname;\r\n    const editurl = url + \"/edit\";\r\n    if (editauth) {\r\n      const placeholder = {\r\n        title: posts.title,\r\n        name: posts.name,\r\n        place: posts.place,\r\n        content: posts.content,\r\n      };\r\n      storage.set(\"editval\", placeholder);\r\n      window.location.href = editurl; //editurl로 이동\r\n    } else {\r\n      alert(\"수정 권한 없음\");\r\n      return;\r\n    }\r\n  };\r\n  const post_content = posts.content;\r\n\r\n  return (\r\n    <Layout>\r\n      <S.LostPost>\r\n        <S.TitleContainer>\r\n          <S.Title>분실물 게시판</S.Title>\r\n        </S.TitleContainer>\r\n        <S.LostPostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n                {editauth ? (\r\n                  <S.Icon onClick={Edit}>\r\n                    <div>\r\n                      <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                    </div>\r\n                  </S.Icon>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n                {delauth ? (\r\n                  <S.Icon onClick={Delete}>\r\n                    <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                  </S.Icon>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </S.IconContainer>\r\n            </S.MetaContainer>\r\n            <S.Label>분실물 명 : {posts.name} </S.Label>\r\n            <S.Label>분실 장소 : {posts.place} </S.Label>\r\n            <S.ContentContainer>\r\n              <S.Content>\r\n                <div dangerouslySetInnerHTML={{ __html: post_content }} />\r\n              </S.Content>\r\n            </S.ContentContainer>\r\n          </S.PostContainer>\r\n        </S.LostPostContainer>\r\n        <br />\r\n        <br />\r\n        <S.PostContainer>\r\n          <S.Label>\r\n            {<img src={STATIC_URL.CHAT} alt=\"chat\" width=\"15px\" />} 댓글\r\n          </S.Label>\r\n          <S.CommentsContainer>\r\n            <CommentList comments={comments} />\r\n          </S.CommentsContainer>\r\n          <S.WriteCommentContainer>\r\n            <S.WriteComment\r\n              type=\"text\"\r\n              ref={(ref) => (content = ref)}\r\n              placeholder=\"댓글을 입력하세요.\"\r\n            />\r\n            <S.SubmitIcon onClick={CommentUpload}>\r\n              {<img src={STATIC_URL.SUBMIT} alt=\"submit_icon\" />}\r\n            </S.SubmitIcon>\r\n          </S.WriteCommentContainer>\r\n        </S.PostContainer>\r\n      </S.LostPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LostPost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardLost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      // GET https://find-thanku.herokuapp.com/lost/post/:_id\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","//각 게시글 별 comment 정보 가져오기\r\n//url= localhost:4000/lost_post/게시글 id정보/comment\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useCommentLost = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialComments = async () => {\r\n      const url = window.location.pathname; // lost/post/게시글 id정보/\r\n\r\n      // GET https://find-thanku.herokuapp.com/lost/post/:_id/comment\r\n      const request = await fetch(\r\n        \"https://find-thanku.herokuapp.com\" + url + \"/comment\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setComments(data);\r\n    };\r\n\r\n    getInitialComments();\r\n  }, []);\r\n\r\n  return {\r\n    comments,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const NoticePost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticePostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","//공지사항 게시글 삭제 함수\r\nexport const PostDelete = async (auth) => {\r\n  const url = window.location.pathname;\r\n  //삭제함 && 접속자 id가 관리자의 username과 같으면 (temp:admin)\r\n  if (auth) {\r\n    var bool = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    //삭제 안함\r\n    if (!bool) {\r\n      return;\r\n    }\r\n    //삭제함\r\n    // DELETE https://find-thanku.herokuapp.com/notice/post/:_id\r\n    const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!request.ok) {\r\n      alert(\"게시글 삭제 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert(\"삭제되었습니다!\");\r\n  }\r\n  //작성자!= 접속자 -> 삭제 안함\r\n  else {\r\n    alert(\"삭제 권한 없음\");\r\n  }\r\n};\r\n\r\n//공지사항 게시글 수정\r\nexport const PostEdit = async (auth, content) => {\r\n  const url = window.location.pathname;\r\n  //작성자 == 관리자 id (admin)\r\n  if (auth) {\r\n    var newcontent = \"content 수정됨\";\r\n    // PATCH https://find-thanku.herokuapp.com/notice/post/:_id/content/:content\r\n    const request = await fetch(\r\n      \"https://find-thanku.herokuapp.com\" + url + \"/content/\" + newcontent,\r\n      {\r\n        method: \"PATCH\",\r\n      }\r\n    );\r\n    if (!request.ok) {\r\n      alert(\"게시글 수정 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert(\"수정되었습니다!\");\r\n    window.location.reload(true); //새로고침\r\n  }\r\n  //작성자!= 접속자 -> 수정 안함\r\n  else {\r\n    alert(\"수정 권한 없음\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useNoticePost } from \"./hooks\";\r\nimport { PostDelete, PostEdit } from \"./function\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst NoticePost = () => {\r\n  const { posts } = useNoticePost();\r\n  const authentication = () => {\r\n    var admin = [\"112743772853536234615\", \"115049392299918823209\"]; //[eunsoo,sohee]\r\n    var auth = admin.includes(storage.get(\"loggedInfo\").googleId);\r\n    return auth;\r\n  };\r\n  var auth = authentication(); //admin 권한\r\n  // 게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(auth);\r\n  };\r\n  // 게시글 수정\r\n  const Edit = () => {\r\n    PostEdit(auth, posts.content);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <S.NoticePost>\r\n        <S.TitleContainer>\r\n          <S.Title>공지사항</S.Title>\r\n        </S.TitleContainer>\r\n        <S.NoticePostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              {auth ? (\r\n                <S.IconContainer>\r\n                  <S.Icon onClick={Edit}>\r\n                    <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                  </S.Icon>\r\n                  <S.Icon to=\"/notice\" onClick={Delete}>\r\n                    <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                  </S.Icon>\r\n                </S.IconContainer>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </S.MetaContainer>\r\n            <S.Content>{posts.content}</S.Content>\r\n          </S.PostContainer>\r\n        </S.NoticePostContainer>\r\n        <S.ContentContainer></S.ContentContainer>\r\n      </S.NoticePost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NoticePost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useNoticePost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      // GET https://find-thanku.herokuapp.com/notice/post/:_id\r\n      const request = await fetch(\"https://find-thanku.herokuapp.com\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\nimport Select from \"react-select\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nexport class FindEdit extends Component {\r\n  // texteditor에 작성된 내용을 content 변수에 넣음\r\n  handleEditorChange = (e) => {\r\n    this.content = e.target.getContent();\r\n  };\r\n  // Select option 지정\r\n  options = [\r\n    { value: \"중앙광장 원스탑\", label: \"중앙광장 원스탑\" },\r\n    { value: \"하나스퀘어 원스탑\", label: \"하나스퀘어 원스탑\" },\r\n    { value: \"기타\", label: \"기타\" },\r\n  ];\r\n\r\n  state = {\r\n    selectedOption: \"\",\r\n  };\r\n\r\n  // 선택한 옵션이 바뀌면 state 바꿈\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n  };\r\n\r\n  // 게시글 수정 함수\r\n  EditPost = async () => {\r\n    // 새 게시글\r\n    const newcontent = {\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      getplace: this.getplace.value,\r\n      putplace: this.state.selectedOption.value,\r\n      content: \"this.content\",\r\n    };\r\n    // 페이지가 업로드 시 기존에 작성한 내용이 들어감 - 습득 장소\r\n    if (!newcontent.putplace) {\r\n      newcontent.putplace = storage.get(\"editval\").putplace; // local storage에 저장되어 있던 내용으로 업데이트\r\n    }\r\n\r\n    const url = window.location.pathname;\r\n\r\n    const fetchurl =\r\n      \"https://find-thanku.herokuapp.com\" +\r\n      url +\r\n      \"/\" +\r\n      newcontent.title +\r\n      \"/\" +\r\n      newcontent.name +\r\n      \"/\" +\r\n      newcontent.getplace +\r\n      \"/\" +\r\n      newcontent.putplace +\r\n      \"/\" +\r\n      newcontent.content;\r\n    // PATCH https://find-thanku.herokuapp.com/find/post/:_id/edit/:title/:name/:getplace/:putplace/:content\r\n    const request = await fetch(fetchurl, {\r\n      method: \"PATCH\",\r\n    });\r\n    const previousurl = window.location.href.slice(0, -5);\r\n    if (!request.ok) {\r\n      alert(\"게시글 수정 실패\");\r\n      storage.remove(\"editval\"); // local storage에 저장된 내용 삭제\r\n      window.location.href = previousurl;\r\n      return;\r\n    }\r\n    await request.json();\r\n    storage.remove(\"editval\");\r\n    alert(\"수정되었습니다!\");\r\n    window.location.href = previousurl;\r\n  };\r\n\r\n  render() {\r\n    // select 스타일 지정\r\n    const { selectedOption } = this.state;\r\n    const styles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        padding: \"2px\",\r\n        fontSize: \"18px\",\r\n        height: \"30px\",\r\n        flex: 1,\r\n      }),\r\n      option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isSelected ? \"black\" : \"black\",\r\n        backgroundColor: state.isSelected ? \"lightgrey\" : \"white\",\r\n      }),\r\n      control: (provided) => ({\r\n        ...provided,\r\n        marginTop: \"1%\",\r\n      }),\r\n    };\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 수정</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                defaultValue={storage.get(\"editval\").title}\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                defaultValue={storage.get(\"editval\").name}\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.getplace = ref)}\r\n                defaultValue={storage.get(\"editval\").getplace}\r\n              />\r\n              <Select\r\n                styles={styles}\r\n                options={this.options}\r\n                placeholder={storage.get(\"editval\").putplace}\r\n                onChange={this.handleChange}\r\n                autoFocus={true}\r\n                value={selectedOption}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue={storage.get(\"editval\").content}\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton onClick={this.EditPost} type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindEdit;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nexport class LostEdit extends Component {\r\n  //texteditor 안의 내용 수정시 content 값도 변경\r\n  handleEditorChange = (e) => {\r\n    this.content = e.target.getContent();\r\n  };\r\n  //게시글 수정 시\r\n  EditPost = async () => {\r\n    const newcontent = {\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      place: this.place.value,\r\n      content: \"this.content\",\r\n    };\r\n    const url = window.location.pathname;\r\n    const fetchurl =\r\n      \"https://find-thanku.herokuapp.com\" +\r\n      url +\r\n      \"/\" +\r\n      newcontent.title +\r\n      \"/\" +\r\n      newcontent.name +\r\n      \"/\" +\r\n      newcontent.place +\r\n      \"/\" +\r\n      newcontent.content;\r\n    // PATCH https://find-thanku.herokuapp.com/lost/post/:_id/edit/:title/:name/:place/:content\r\n    const request = await fetch(fetchurl, {\r\n      method: \"PATCH\",\r\n    });\r\n    const previousurl = window.location.href.slice(0, -5); //edit 뺀 url\r\n    if (!request.ok) {\r\n      alert(\"게시글 수정 실패\");\r\n      storage.remove(\"editval\");\r\n      window.location.href = previousurl;\r\n      return;\r\n    }\r\n    await request.json();\r\n    storage.remove(\"editval\");\r\n    alert(\"수정되었습니다!\");\r\n    window.location.href = previousurl;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 수정</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                defaultValue={storage.get(\"editval\").title}\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                defaultValue={storage.get(\"editval\").name}\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.place = ref)}\r\n                defaultValue={storage.get(\"editval\").place}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue={storage.get(\"editval\").content}\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton onClick={this.EditPost} type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LostEdit;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const MyPage = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const MyInfoContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 3rem;\r\n`;\r\nexport const MyInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Meta = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-bottom: 0.8rem;\r\n`;\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 1.8rem;\r\n`;\r\nexport const Label = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  img {\r\n    width: 8rem;\r\n    height: 8rem;\r\n    border-radius: 8rem;\r\n  }\r\n  margin-right: 3rem;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport FindBoardHeader from \"../../container/find-board-header\";\r\nimport LostBoardHeader from \"../../container/lost-board-header\";\r\n\r\nimport FindBoardList from \"../../container/find-board-list\";\r\nimport LostBoardList from \"../../container/lost-board-list\";\r\n\r\nimport { useMyPage } from \"./hooks\"; // 분실물 게시판 Hook\r\nimport { useMyPage2 } from \"./hooks2\"; //습득물 게시판 Hook\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst MyPage = () => {\r\n  const googleId = storage.get(\"loggedInfo\").googleId; //숫자 형식의 구글 아이디\r\n  const imageurl = storage.get(\"loggedInfo\").imgUrl;\r\n  const username = storage.get(\"loggedInfo\").username; //ex: 정소희[학부재학/컴퓨터학과]\r\n  const email = storage.get(\"loggedInfo\").email; //ex: wjdthgmlgo@korea.ac.kr\r\n  const emailname = email.split(\"@\")[0]; //ex: wjdthgmlgo\r\n\r\n  //각 게시판 posts 설정\r\n  const { posts } = useMyPage(googleId); //분실물 post\r\n  const { posts2 } = useMyPage2(googleId); //습득물 post\r\n\r\n  return (\r\n    <Layout>\r\n      <S.MyPage>\r\n        <S.MyInfoContainer>\r\n          <S.Title>내 정보</S.Title>\r\n          <S.MyInfo>\r\n            <S.ImageContainer>\r\n              <img src={imageurl} alt=\"profile\" />\r\n            </S.ImageContainer>\r\n            <S.MetaContainer>\r\n              <S.Meta>이름: {username}</S.Meta>\r\n              <S.Meta>닉네임: {emailname}</S.Meta>\r\n              <S.Meta>이메일: {email}</S.Meta>\r\n            </S.MetaContainer>\r\n          </S.MyInfo>\r\n        </S.MyInfoContainer>\r\n\r\n        <S.Title>내가 작성한 글</S.Title>\r\n        <S.Container>\r\n          <S.Label>분실물 게시판</S.Label>\r\n          <S.BoardListContainer>\r\n            <LostBoardHeader />\r\n            <LostBoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n        </S.Container>\r\n        <S.Container>\r\n          <S.Label>습득물 게시판</S.Label>\r\n          <S.BoardListContainer>\r\n            <FindBoardHeader />\r\n            <FindBoardList posts={posts2} />\r\n          </S.BoardListContainer>\r\n        </S.Container>\r\n      </S.MyPage>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMyPage = (googleId) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 마이페이지에 보여질 분실물 게시글 가져오기\r\n    const getInitialPosts = async () => {\r\n      const boardkind = \"lost\";\r\n      // GET https://find-thanku.herokuapp.como/mypage/:boardkind/:googleId\r\n      const request = await fetch(\r\n        \"https://find-thanku.herokuapp.com/mypage/\" +\r\n          boardkind +\r\n          \"/\" +\r\n          googleId,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, [googleId]);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMyPage2 = (googleId) => {\r\n  const [posts2, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 마이페이지에 보여질 습득물 게시글 가져오기 by googleId\r\n    const getInitialPosts = async () => {\r\n      const boardkind = \"find\";\r\n      // GET https://find-thanku.herokuapp.como/mypage/:boardkind/:googleId\r\n      const request = await fetch(\r\n        \"https://find-thanku.herokuapp.com/mypage/\" +\r\n          boardkind +\r\n          \"/\" +\r\n          googleId,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      if (!request.ok) {\r\n        alert(\"Server not responding\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, [googleId]);\r\n\r\n  return {\r\n    posts2,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Main from \"./view/main\";\r\nimport BoardLost from \"./view/board_lost\";\r\nimport BoardLostSearch from \"./view/board_lost_search\";\r\nimport Login from \"./view/login\";\r\nimport BoardFind from \"./view/board_find\";\r\nimport BoardFindSearch from \"./view/board_find_search\";\r\nimport FindUpload from \"./view/find-upload\";\r\nimport LostUpload from \"./view/lost-upload\";\r\nimport Notice from \"./view/notice\";\r\nimport NoticeSearch from \"./view/notice_search\";\r\nimport NoticeUpload from \"./view/notice-upload\";\r\nimport FindPost from \"./view/find-post\";\r\nimport LostPost from \"./view/lost-post\";\r\nimport NoticePost from \"./view/notice-post\";\r\nimport FindEdit from \"./view/find-upload/edit\";\r\nimport LostEdit from \"./view/lost-upload/edit\";\r\nimport MyPage from \"./view/mypage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/lost/board\" exact component={BoardLost} />\r\n        <Route path=\"/lost/board/:page_number\" exact component={BoardLost} />\r\n        <Route\r\n          path=\"/lost/board/search/:searchval\"\r\n          exact\r\n          component={BoardLostSearch}\r\n        />\r\n        <Route path=\"/find/board\" exact component={BoardFind} />\r\n        <Route path=\"/find/board/:page_number\" exact component={BoardFind} />\r\n        <Route\r\n          path=\"/find/board/search/:searchval\"\r\n          exact\r\n          component={BoardFindSearch}\r\n        />\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/find/upload\" exact component={FindUpload} />\r\n        <Route path=\"/lost/upload\" exact component={LostUpload} />\r\n        <Route path=\"/notice\" exact component={Notice} />\r\n        <Route\r\n          path=\"/notice/search/:searchval\"\r\n          exact\r\n          component={NoticeSearch}\r\n        />\r\n        <Route path=\"/notice/upload\" exact component={NoticeUpload} />\r\n        <Route path=\"/notice/:page_number\" exact component={Notice} />\r\n        <Route path=\"/find/post/:_id\" exact component={FindPost} />\r\n        <Route path=\"/find/post/:_id/edit\" exact component={FindEdit} />\r\n        <Route path=\"/lost/post/:_id\" exact component={LostPost} />\r\n        <Route path=\"/lost/post/:_id/edit\" exact component={LostEdit} />\r\n        <Route path=\"/notice/post/:_id\" exact component={NoticePost} />\r\n        <Route path=\"/mypage\" exact component={MyPage} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createGlobalStyle } from \"styled-components/macro\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'NanumSquare', sans-serif !important;\r\n    font-display: 'block';\r\n    box-sizing : border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  html {\r\n    font-size : 10px;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    user-select : none;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding : 0;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport GlobalStyle from \"./component/global-style\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}