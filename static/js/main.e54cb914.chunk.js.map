{"version":3,"sources":["constant.js","view/main/styles.js","component/layout/styles.js","view/google_login/storage.js","component/header/styles.js","component/header/index.js","component/footer/styles.js","component/footer/index.js","component/layout/index.js","view/main/index.js","view/board_lost/styles.js","container/lost-board-header/styles.js","container/lost-board-header/index.js","container/lost-board-list/styles.js","component/lost-board-item/styles.js","component/lost-board-item/index.js","container/lost-board-list/index.js","container/page-bar/styles.js","component/page-button/styles.js","component/page-button/index.js","container/page-bar/index.js","view/board_lost/index.js","view/board_lost/hooks.js","view/board_lost_search/styles.js","view/board_lost_search/index.js","view/board_lost_search/hooks.js","view/login/styles.js","view/google_login/googlebtn.js","view/login/index.js","view/board_find/styles.js","container/find-board-header/styles.js","container/find-board-header/index.js","container/find-board-list/styles.js","component/find-board-item/styles.js","component/find-board-item/index.js","container/find-board-list/index.js","view/board_find/index.js","view/board_find/hooks.js","view/board_find_search/styles.js","view/board_find_search/index.js","view/board_find_search/hooks.js","view/find-upload/styles.js","view/find-upload/index.js","view/lost-upload/styles.js","view/lost-upload/index.js","component/find-text-editor/styles.js","view/notice/styles.js","container/notice-header/styles.js","container/notice-header/index.js","container/notice-list/styles.js","component/notice-item/styles.js","component/notice-item/index.js","container/notice-list/index.js","view/notice/index.js","view/notice/hooks.js","view/notice_search/styles.js","view/notice_search/index.js","view/notice_search/hooks.js","view/notice-upload/styles.js","view/notice-upload/index.js","view/join/styles.js","view/join/index.js","view/find-post/styles.js","container/comment-list/styles.js","component/comment/styles.js","component/comment/function.js","component/comment/index.js","container/comment-list/index.js","view/find-post/function.js","view/find-post/index.js","view/find-post/hooks.js","view/find-post/hooks2.js","view/lost-post/styles.js","view/lost-post/function.js","view/lost-post/index.js","view/lost-post/hooks.js","view/lost-post/hooks2.js","view/notice-post/styles.js","view/notice-post/function.js","view/notice-post/index.js","view/notice-post/hooks.js","view/find-upload/edit.js","view/lost-upload/edit.js","view/mypage/styles.js","view/mypage/index.js","view/mypage/hooks.js","view/mypage/hooks2.js","App.js","serviceWorker.js","component/global-style/index.js","index.js"],"names":["STATIC_URL","THEME_COLOR","Main","styled","div","ContentContainer","MainContent","MainLabel","SubContent","SubLabel","MainContainer","BlockContainer","Link","Title","Description","Icon","Layout","LayoutContainer","storage","set","key","object","localStorage","JSON","stringify","get","parse","e","remove","removeItem","Header","Logo","img","Buttons","Button","button","DesktopLink","TempContainer","to","src","alt","imgUrl","Footer","Label","children","BoardLost","BoardLostContainer","TitleContainer","DescContainer","ToolsContainer","WriteButton","SearchContainer","SearchBox","input","SearchIcon","BoardListContainer","PagebarContainer","BoardHeader","ul","NameContainer","PlaceContainer","CommentContainer","WriterContainer","DateContainer","FindBoardHeader","BoardList","BoardItem","li","LostBoardItem","post","url","_id","title","name","place","replynum","username","date","slice","LostBoardList","posts","console","log","map","idx","Pagebar","ArrowBlock","Arrow","PageButton","PageButtonContainer","board_type","page","start_page","end_page","page_count","total_page","onClick","className","searchval","useState","setPosts","useEffect","a","fetch","method","request","ok","alert","json","data","getInitialPosts","useBoardLost","placeholder","type","ref","value","length","currenturl","window","location","href","BoardLostSearch","pathname","useBoardSearch","Login","Container","CLIENT_ID","GoogleBtn","props","UserLogin","state","googleId","UserLogout","isLogined","accessToken","email","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","this","setState","profileObj","imageUrl","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","Component","width","height","BoardFind","BoardFindContainer","FindPlaceContainer","LostPlaceContainer","FindBoardItem","getplace","putplace","useBoardFind","url_string","split","parseInt","totalCount","totalPage","startPage","endPage","BoardFindSearch","Upload","UploadContainer","WriteInputContainer","select","option","TitleInputContainer","TitleInput","NameInput","PlaceInput","TextEditorContainer","TextEditor","SubmitButton","headers","withCredentials","FindUpload","send_param","selectedOption","content","axios","catch","err","handleEditorChange","target","getContent","options","label","handleChange","styles","container","base","padding","fontSize","flex","provided","color","isSelected","backgroundColor","control","marginTop","onChange","autoFocus","initialValue","init","menubar","plugins","toolbar","mobile","theme","block","LostUpload","Notice","NoticeContainer","NoticeHeader","NoticeItem","NoticeList","useBoardNotice","auth","includes","NoticeSearch","NoticeUpload","Join","JoinContainer","IDInputBox","PWInputBox","PWConfirmInputBox","JoinForm","description","maxLength","FindPost","FindPostContainer","PostContainer","PostTitle","MetaContainer","Date","IconContainer","Content","CommentsContainer","WriteCommentContainer","WriteComment","SubmitIcon","CommentList","Comment","Writer","ProfileIcon","SetReplynum","num","PostDelete","delauth","id","confirm","reload","PostEdit","editauth","prompt","comment","comments","setComments","getInitialComments","useCommentFind","post_content","editurl","dangerouslySetInnerHTML","__html","postid","postkind","LostPost","LostPostContainer","useCommentLost","NoticePost","NoticePostContainer","useNoticePost","FindEdit","EditPost","newcontent","fetchurl","previousurl","defaultValue","LostEdit","MyPage","MyInfoContainer","MyInfo","Meta","ImageContainer","imageurl","emailname","boardkind","useMyPage","posts2","useMyPage2","App","path","exact","component","from","Boolean","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e54cb914.chunk.js","sourcesContent":["export const BREAKPOINT = 640;\r\n\r\nexport const STATIC_URL = {\r\n  // LOGO: `https://user-images.githubusercontent.com/50616334/88452091-cdb79c00-ce96-11ea-9f67-9289cdf63a32.JPG`,\r\n  LOGO: `https://user-images.githubusercontent.com/50616334/88753989-86802280-d198-11ea-88f4-1b735493b8d9.png`,\r\n  LOGO2: `https://user-images.githubusercontent.com/50616334/88453653-e4182480-cea3-11ea-8916-18ea7c718377.png`,\r\n  MAGNIFYING_GLASS_ICON: `https://user-images.githubusercontent.com/41494099/87172994-10626b80-c310-11ea-99d3-bcc2da2cdb6d.png`,\r\n  PENCIL_ICON: `https://user-images.githubusercontent.com/50616334/88361747-0a12cb80-cdb5-11ea-9545-f5e7be8e9935.png`,\r\n  PENCIL_ICON2: `https://user-images.githubusercontent.com/50616334/90724248-31e44900-e2f9-11ea-9fec-7068e853490a.png`,\r\n  PROFILE: `https://user-images.githubusercontent.com/50616334/90849381-12592900-e3aa-11ea-83f7-3b13e7938bd8.png`,\r\n  SUBMIT: `https://user-images.githubusercontent.com/50616334/90851306-41be6480-e3af-11ea-98b9-84c5272fcb9c.png`,\r\n  DELETE: `https://user-images.githubusercontent.com/44287798/91042089-2cb23180-e64c-11ea-85c8-5756e4a05592.png`,\r\n  EDIT: `https://user-images.githubusercontent.com/44287798/91042139-42bff200-e64c-11ea-9f6e-e13ed9d55768.png`,\r\n  CHAT: `https://user-images.githubusercontent.com/44287798/91042471-c24dc100-e64c-11ea-9303-cd83c8d87198.png`,\r\n  MEGAPHONE: `https://user-images.githubusercontent.com/50616334/91296892-513b1480-e7d8-11ea-97d2-e78815b0c138.png`,\r\n  SMILE: `https://user-images.githubusercontent.com/50616334/91296938-687a0200-e7d8-11ea-9668-c836d16176c9.png`,\r\n  SAD: `https://user-images.githubusercontent.com/50616334/91296978-7af43b80-e7d8-11ea-9d06-85cb98385dfa.png`,\r\n};\r\n\r\nexport const THEME_COLOR = {\r\n  PRIMARY: \"#A20131\",\r\n  YELLOW: \"#F0B957\",\r\n  LIGHT_YELLOW: \"#F9E3BC\",\r\n  GRAY: \"#F1F1F1\",\r\n  GRAYER: \"#EDEDED\",\r\n  FONT_GRAY: \"#80868B\",\r\n  LIGHT_GRAY: \"#E5E5E3\",\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR, STATIC_URL } from \"../../constant\";\r\n\r\nexport const Main = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const MainContent = styled.div`\r\n  margin: 8rem;\r\n  margin-bottom: 0rem;\r\n  margin-top: 4rem;\r\n`;\r\nexport const MainLabel = styled.div`\r\n  padding: 1rem;\r\n  font-size: 4rem;\r\n  font-weight: bold;\r\n  color: #85092a;\r\n  text-decoration: underline ${THEME_COLOR.LIGHT_YELLOW};\r\n`;\r\nexport const SubContent = styled.div`\r\n  margin: 4rem 9rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 0rem;\r\n`;\r\nexport const SubLabel = styled.div`\r\n  padding: 0.8rem;\r\n  font-size: 2rem;\r\n  color: chacol;\r\n`;\r\nexport const MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  margin-left: 6rem;\r\n\r\n  align-items: center;\r\n  justify-content: left;\r\n`;\r\n\r\nexport const BlockContainer = styled(Link)`\r\n  width: 28rem;\r\n  height: 28rem;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1.5rem;\r\n  margin: 8rem 4rem;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n  border-radius: 0.5rem;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_GRAY};\r\n  text-decoration: none;\r\n  color: black;\r\n  &:hover {\r\n    background-color: ${THEME_COLOR.YELLOW};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin: 1.5rem 0rem 1.5rem 0rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const GoButton = styled(Link)`\r\n  width: 100%;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  img {\r\n    width: 6rem;\r\n    height: 6rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n  min-height: 100%;\r\n`;\r\n\r\nexport const LayoutContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 6rem;\r\n`;\r\n","// 로컬 스토리지에 JSON 형태로 저장 / 불러오기 / 삭제 헬퍼\r\nexport const storage = {\r\n    set: (key, object) => {\r\n        if(!localStorage) return;\r\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n    },\r\n    get: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(!localStorage[key]) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const parsed = JSON.parse(localStorage[key]);\r\n            return parsed;\r\n        } catch(e) {\r\n            return localStorage[key];\r\n        }\r\n    },\r\n    remove: (key) => {\r\n        if(!localStorage) return null;\r\n\r\n        if(localStorage[key]) {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n};\r\n\r\nexport default storage;","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  height: 10rem;\r\n  padding: 0rem 2rem;\r\n\r\n  border-bottom: 3px solid ${THEME_COLOR.YELLOW};\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  display: block;\r\n  width: 13rem;\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  border: none;\r\n  background-color: inherit;\r\n  font-size: 1.6rem;\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    color: ${THEME_COLOR.YELLOW};\r\n  }\r\n\r\n  img {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    border-radius: 4rem;\r\n  }\r\n\r\n  /* height: 8rem; */\r\n  width: 8.7rem;\r\n  transition: background-color 0.5s;\r\n`;\r\n\r\nexport const DesktopLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  display: block;\r\n`;\r\n\r\nexport const TempContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;","import React from \"react\";\r\n\r\nimport { STATIC_URL } from \"../../constant\";\r\n// import { GoogleBtn } from \"../../view/google_login/googlebtn\";\r\nimport { storage } from \"../../view/google_login/storage\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <S.Header>\r\n      <S.DesktopLink to=\"/\">\r\n        <S.Logo src={STATIC_URL.LOGO} alt=\"Logo\"></S.Logo>\r\n      </S.DesktopLink>\r\n      <S.Buttons>\r\n        <S.DesktopLink to=\"/lost/board\">\r\n          <S.Button>분실물</S.Button>\r\n        </S.DesktopLink>\r\n        <S.DesktopLink to=\"/find/board\">\r\n          <S.Button>습득물</S.Button>\r\n        </S.DesktopLink>\r\n        <S.DesktopLink to=\"/notice\">\r\n          <S.Button>공지사항</S.Button>\r\n        </S.DesktopLink>\r\n        {storage.get(\"isLogged\") ? (\r\n          <S.TempContainer>\r\n            <S.DesktopLink to=\"/login\">\r\n              <S.Button>로그아웃</S.Button>\r\n            </S.DesktopLink>\r\n            <S.DesktopLink to=\"/mypage\">\r\n              <S.Button>\r\n                {<img src={storage.get(\"loggedInfo\").imgUrl} alt=\"image\" />}\r\n              </S.Button>\r\n            </S.DesktopLink>\r\n          </S.TempContainer>\r\n        ) : (\r\n          <S.DesktopLink to=\"/login\">\r\n            <S.Button>로그인</S.Button>\r\n          </S.DesktopLink>\r\n        )}\r\n      </S.Buttons>\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  /* justify-content: space-between; */\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 3rem;\r\n  padding: 0rem 2rem;\r\n\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n\r\n  background-color: ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.3rem;\r\n  margin: 0rem 0.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <S.Footer>\r\n      <S.Label>이름</S.Label>\r\n      <S.Label>이메일</S.Label>\r\n      <S.Label>연락처</S.Label>\r\n    </S.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as S from \"./styles\";\r\n\r\nimport React from \"react\";\r\nimport Header from \"../header\";\r\nimport Footer from \"../footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <S.Layout>\r\n      <Header />\r\n      <S.LayoutContainer>{children}</S.LayoutContainer>\r\n      <Footer />\r\n    </S.Layout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Layout>\r\n      <S.Main>\r\n        <S.ContentContainer>\r\n          <S.MainContent>\r\n            <S.MainLabel>FIN:D THANKU!</S.MainLabel>\r\n            <S.MainLabel>\r\n              고려대학교 구성원을 위한 스마트 분실물센터\r\n            </S.MainLabel>\r\n          </S.MainContent>\r\n          <S.SubContent>\r\n            <S.SubLabel>\r\n              찾아주셔서(FIN:D) 고맙습니다(THANKU)의 의미를 가지는 FIN:D THANKU는 \r\n              <br/>고려대학교 구성원을 위한 분실물센터입니다.\r\n            </S.SubLabel>\r\n            <S.SubLabel>\r\n              구성원 누구나 잃어버린 물건을 쉽게 찾을 수 있도록 하는 것이\r\n              FIN:D THANKU의 목표입니다.\r\n            </S.SubLabel>\r\n          </S.SubContent>\r\n        </S.ContentContainer>\r\n        <S.MainContainer>\r\n          <S.BlockContainer to=\"lost/board\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.SAD} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>분실물</S.Title>\r\n            <S.Description>\r\n              분실물 게시판에 대한 설명이 들어갈 예정입니다.\r\n            </S.Description>\r\n            {/* <S.GoButton to=\"lost/board\">바로가기 ▷</S.GoButton> */}\r\n          </S.BlockContainer>\r\n          <S.BlockContainer to=\"notice\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.MEGAPHONE} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>공지사항</S.Title>\r\n            <S.Description>\r\n              공지사항에 대한 설명이 들어갈 예정입니다.\r\n            </S.Description>\r\n            {/* <S.GoButton to=\"notice\">바로가기 ▷</S.GoButton> */}\r\n          </S.BlockContainer>\r\n          <S.BlockContainer to=\"find/board\">\r\n            <S.Icon>\r\n              <img src={STATIC_URL.SMILE} alt=\"sad\" />\r\n            </S.Icon>\r\n            <S.Title>습득물</S.Title>\r\n            <S.Description>\r\n              습득물 게시판에 대한 설명이 들어갈 예정입니다.\r\n            </S.Description>\r\n            {/* <S.GoButton to=\"find/board\">바로가기 ▷</S.GoButton> */}\r\n          </S.BlockContainer>\r\n        </S.MainContainer>\r\n      </S.Main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardLost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardLostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\nexport const TitleContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.TitleContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>분실물 명</S.Label>\r\n      </S.NameContainer>\r\n      <S.PlaceContainer>\r\n        <S.Label>분실 장소</S.Label>\r\n      </S.PlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>댓글 수</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>작성자</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default FindBoardHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n  /* border: 0.5px solid ${THEME_COLOR.GRAYER}; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nconst LostBoardItem = ({ post }) => {\r\n  const url = \"/lost/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>{post.name}</S.Label>\r\n      </S.NameContainer>\r\n      <S.PlaceContainer>\r\n        <S.Label>{post.place}</S.Label>\r\n      </S.PlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>{post.replynum}</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>{post.username}</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default LostBoardItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport LostBoardItem from \"../../component/lost-board-item\";\r\n\r\nconst LostBoardList = ({ posts }) => {\r\n  console.log(posts);\r\n\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <LostBoardItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default LostBoardList;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Pagebar = styled.div`\r\n  display: flex;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const Buttons = styled.ul`\r\n  display: flex;\r\n\r\n  margin: 0rem 0.5rem;\r\n`;\r\n\r\nexport const ArrowBlock = styled.button`\r\n  width: 3.6rem;\r\n  height: 3.6rem;\r\n\r\n  background-color: inherit;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* border: none;\r\n  outline: none; */\r\n`;\r\n\r\nexport const Arrow = styled.div`\r\n  border: solid black;\r\n  border-width: 0 1px 1px 0;\r\n  display: inline-block;\r\n  padding: 2px;\r\n\r\n  &.right {\r\n    transform: rotate(-45deg);\r\n    -webkit-transform: rotate(-45deg);\r\n    margin-right: 2px;\r\n  }\r\n\r\n  &.left {\r\n    transform: rotate(135deg);\r\n    -webkit-transform: rotate(135deg);\r\n    margin-left: 2px;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const PageButton = styled.li`\r\n  font-size: 1.4rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PageButtonContainer = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  width: 3.6rem;\r\n  height: 3.6rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst PageButton = ({ board_type, page, start_page, end_page }) => {\r\n  let url = \"/\";\r\n // console.log(board_type);\r\n  if (board_type === \"find\") url = \"/find/board/\";\r\n  else if (board_type === \"lost\") url = \"/lost/board/\";\r\n  else if (board_type === \"notice\") url = \"/notice/\";\r\n\r\n  console.log(\"현재 페이지:\", page);\r\n  console.log(\"시작 페이지:\", start_page);\r\n  console.log(\"끝 페이지:\", end_page);\r\n\r\n  return (\r\n    <S.PageButton>\r\n      <S.PageButtonContainer to={url + start_page}>\r\n        {start_page}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 1)}>\r\n        {start_page + 1}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 2)}>\r\n        {start_page + 2}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 3)}>\r\n        {start_page + 3}\r\n      </S.PageButtonContainer>\r\n      <S.PageButtonContainer to={url + (start_page + 4)}>\r\n        {start_page + 4}\r\n      </S.PageButtonContainer>\r\n    </S.PageButton>\r\n  );\r\n};\r\n\r\nexport default PageButton;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport PageButton from \"../../component/page-button\";\r\n\r\nconst Pagebar = ({\r\n  board_type,\r\n  page,\r\n  start_page,\r\n  end_page,\r\n  page_count,\r\n  total_page,\r\n}) => {\r\n  function beforePage() {\r\n    console.log(\"이전 버튼 누름!!!!\");\r\n    if (start_page - page_count > 0) start_page -= page_count;\r\n    console.log(\"이전페이지 누름 - start_page :\", start_page); // 눌렀을 때 start_page에 바로 반영되어서 PageButton으로 넘겨줘야 함 (미완)\r\n    // window.location.reload(true);\r\n  }\r\n  function nextPage() {\r\n    console.log(\"다음 버튼 누름!!! !\");\r\n    if (start_page + page_count < total_page) start_page += page_count;\r\n    console.log(\"다음페이지 누름 - start_page :\", start_page);\r\n    // window.location.reload(true);\r\n  }\r\n  return (\r\n    <S.Pagebar>\r\n      <S.ArrowBlock onClick={beforePage}>\r\n        <S.Arrow className=\"left\"></S.Arrow>\r\n      </S.ArrowBlock>\r\n      <S.Buttons>\r\n        <PageButton\r\n          board_type={board_type}\r\n          page={page}\r\n          start_page={start_page}\r\n          end_page={end_page}\r\n        />\r\n      </S.Buttons>\r\n      <S.ArrowBlock onClick={nextPage}>\r\n        <S.Arrow className=\"right\"></S.Arrow>\r\n      </S.ArrowBlock>\r\n    </S.Pagebar>\r\n  );\r\n};\r\n\r\nexport default Pagebar;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/lost-board-header\";\r\nimport BoardList from \"../../container/lost-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardLost } from \"./hooks\";\r\n\r\nconst BoardLost = () => {\r\n  const { posts } = useBoardLost();\r\n  var searchval;\r\n  const Search = () => {\r\n    console.log(searchval.value);\r\n    if(searchval.value.length<2){\r\n      alert('두 글자 이상 입력해주세요.');\r\n      return;\r\n    }\r\n    const currenturl = window.location.href;\r\n    window.location.href = currenturl + \"/search/\" + searchval.value;\r\n  };\r\n  \r\n  return (\r\n    <Layout>\r\n      <S.BoardLost>\r\n        <S.BoardLostContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>분실물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>분실물 게시판에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n        </S.BoardLostContainer>\r\n        <S.ToolsContainer>\r\n          <S.SearchContainer>\r\n            <S.SearchBox \r\n              placeholder=\"검색\"\r\n              type=\"text\"\r\n              ref={(ref) => (searchval = ref)} />\r\n            <S.SearchIcon onClick = {Search}>\r\n              <img\r\n                src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                alt=\"magnifying-glass\"\r\n              />\r\n            </S.SearchIcon>\r\n          </S.SearchContainer>\r\n          <S.WriteButton to=\"/lost/upload\">글 작성</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar board_type=\"lost\" />\r\n        </S.PagebarContainer>\r\n      </S.BoardLost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardLost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardLost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\"http://localhost:4000/lost/board\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data.slice(0, 10));\r\n      console.log(data.slice(0, 10));\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardLost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardLostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/lost-board-header\";\r\nimport BoardList from \"../../container/lost-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardSearch } from \"./hooks\";\r\n\r\nconst BoardLostSearch = () => {\r\n  const { posts } = useBoardSearch();\r\n\r\n  return (\r\n    <Layout>\r\n      <S.BoardLost>\r\n        <S.BoardLostContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>분실물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n        </S.BoardLostContainer>\r\n        <S.ToolsContainer>\r\n          <S.Description>검색 결과</S.Description>\r\n          <S.WriteButton to=\"/lost/board\">목록으로</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar board_type=\"lost\" />\r\n        </S.PagebarContainer>\r\n      </S.BoardLost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardLostSearch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardSearch = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data.slice(0, 10));\r\n      console.log(data.slice(0, 10));\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Login = styled.div`\r\n  width: 400px;\r\n  height: 400px;\r\n\r\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n  background: white;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n\r\n  padding-top: 50px;\r\n  padding-right: 30px;\r\n  padding-bottom: 0px;\r\n  padding-left: 30px;\r\n\r\n  border: 2px solid #f0b957;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`;\r\n\r\n// border: 3px solid #F0B957;\r\n// export const box = styled.div`\r\n//     background:yellow;\r\n// `;\r\n\r\n// export const button = styled.div`\r\n//     background-color: #4CAF50; /* Green */\r\n//     border: none;\r\n//     color: white;\r\n//     padding: 15px 32px;\r\n//     text-align: center;\r\n//     display: inline-block;\r\n//     font-size: 16px;\r\n// `;\r\n","import React, { Component } from 'react'\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport { storage } from './storage';\r\n// import axios from \"axios\";\r\n// const headers = { withCredentials: true };\r\n\r\nconst CLIENT_ID = \"920956368020-sk2d48e21kq4rrbl83kc4g5jedclnkom.apps.googleusercontent.com\";\r\n\r\nexport class GoogleBtn extends Component {\r\n//로그인(onclick)\r\n  login (response) {\r\n    if(response.accessToken){\r\n      this.setState(state => ({\r\n        isLogined: true,\r\n        accessToken: response.accessToken,\r\n        username: response.profileObj.name,\r\n        email: response.profileObj.email,\r\n        googleId: response.googleId,\r\n        imgUrl: response.profileObj.imageUrl,\r\n      }));\r\n    }\r\n    this.UserLogin(); //upload into userdb\r\n    window.location.href = '/'; // 홈페이지로 새로고침\r\n    console.log(response);\r\n  }\r\n     //로그인\r\n     UserLogin = () => {\r\n      console.log(this.state.googleId);\r\n      console.log(this.state.imgUrl);\r\n      // const send_param = {\r\n      //   headers,\r\n      //   accessToken: this.state.accessToken,\r\n      //   username: this.state.username,\r\n      //   email: this.state.email,\r\n      //   googleId: this.state.googleId,\r\n      // };\r\n      // axios\r\n      //   .post(\"http://localhost:4000/user/login\", send_param)\r\n      //   //에러\r\n      //   .catch((err) => {\r\n      //     console.log(err);\r\n      //   });\r\n      //local storage에 저장\r\n      storage.set('loggedInfo',this.state);\r\n      storage.set('isLogged',true);\r\n      console.log(storage.get('loggedInfo'));\r\n      alert(\"로그인 완료!\");\r\n    };\r\n    //로그아웃(onclick)\r\n    logout (response) {\r\n      this.setState(state => ({\r\n        isLogined: false,\r\n        accessToken: '',\r\n        username: '',\r\n        email: '',\r\n        googleId: '',\r\n        imgUrl: '',\r\n      }));\r\n      this.UserLogout();\r\n      alert(\"로그아웃 완료!\");\r\n      window.location.href = '/'; // 홈페이지로 새로고침\r\n    }\r\n    //로그아웃\r\n    UserLogout = async () => {\r\n      // const request = await fetch(\"http://localhost:4000/user/logout/\" + this.state.googleId, {\r\n      //     method: \"DELETE\",\r\n      // });\r\n      // if (!request.ok) {\r\n      // alert(\"서버 죽음\");\r\n      // return;\r\n      // }\r\n      // await request.json();\r\n      \r\n      //localstorage에서 user데이터 삭제\r\n      storage.remove('loggedInfo');\r\n      storage.set('isLogged',false);\r\n      //console.log(storage.get('loggedInfo'));\r\n    };\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogined: false,\r\n      accessToken: '',\r\n      username: '',\r\n      email: '',\r\n      googleId: '',\r\n      imgUrl: '',\r\n    };\r\n\r\n  this.login = this.login.bind(this);\r\n  this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n  this.logout = this.logout.bind(this);\r\n  this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n}\r\n  handleLoginFailure (response) {\r\n    alert('Failed to log in')\r\n  }\r\n\r\n  handleLogoutFailure (response) {\r\n    alert('Failed to log out')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      { storage.get('isLogged') ?\r\n        <GoogleLogout\r\n          clientId={ CLIENT_ID }\r\n          buttonText='로그아웃'\r\n          onLogoutSuccess={ this.logout }\r\n          onFailure={ this.handleLogoutFailure }\r\n        />: \r\n        <GoogleLogin\r\n          clientId={ CLIENT_ID }\r\n          buttonText='로그인'\r\n          onSuccess={ this.login}\r\n          onFailure={ this.handleLoginFailure }\r\n          cookiePolicy={ 'single_host_origin' }\r\n          responseType='code,token'\r\n        />\r\n      }\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleBtn;","import React, { useState } from \"react\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport Layout from \"../../component/layout\";\r\nimport * as S from \"./styles\";\r\nimport \"./login.scss\";\r\nimport {GoogleBtn} from \"../google_login/googlebtn\";\r\n\r\nconst Login = () => {\r\n  // Google Login\r\n  const responseGoogle = (res) => {\r\n    console.log(res);\r\n  };\r\n\r\n  // Login Fail\r\n  const responseFail = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <S.Login>\r\n        <div>\r\n          <img src={STATIC_URL.LOGO} width=\"200px\" height=\"90px\" alt=\"logo\" />\r\n        </div>\r\n        <br /><br /><br /><br />  \r\n        <S.Container>\r\n          <GoogleBtn/>\r\n        </S.Container>\r\n      </S.Login>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n/*임시저장\r\n     <div>\r\n          <img src={STATIC_URL.LOGO} width=\"200px\" height=\"90px\" alt=\"logo\" />\r\n        </div>\r\n        <div>\r\n          <br />\r\n          <br />\r\n          <input\r\n            class=\"input_box\"\r\n            name=\"id\"\r\n            placeholder={idbox}\r\n            onChange={onChange}\r\n            value={id}\r\n          />\r\n          <br />\r\n          <br />\r\n          <input\r\n            class=\"input_box\"\r\n            type=\"password\"\r\n            name=\"pw\"\r\n            placeholder={pwbox}\r\n            onChange={onChange}\r\n            value={pw}\r\n          />\r\n          <br />\r\n          <br />\r\n          <button class=\"login_button\" onClick={onReset}>\r\n            로그인\r\n          </button>\r\n          <div>\r\n            id / pw:\r\n            {id} / {pw}\r\n          </div>\r\n        </div>\r\n        */","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardFind = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardFindContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FindPlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LostPlaceContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.TitleContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>습득물 명</S.Label>\r\n      </S.NameContainer>\r\n      <S.LostPlaceContainer>\r\n        <S.Label>습득 장소</S.Label>\r\n      </S.LostPlaceContainer>\r\n      <S.FindPlaceContainer>\r\n        <S.Label>보관 장소</S.Label>\r\n      </S.FindPlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>댓글 수</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>작성자</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default FindBoardHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const TitleContainer = styled(Link)`\r\n  flex: 2.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FindPlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LostPlaceContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriterContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex: 0.8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst FindBoardItem = ({ post }) => {\r\n  const url = \"/find/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.TitleContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.TitleContainer>\r\n      <S.NameContainer>\r\n        <S.Label>{post.name}</S.Label>\r\n      </S.NameContainer>\r\n      <S.LostPlaceContainer>\r\n        <S.Label>{post.getplace}</S.Label>\r\n      </S.LostPlaceContainer>\r\n      <S.FindPlaceContainer>\r\n        <S.Label>{post.putplace}</S.Label>\r\n      </S.FindPlaceContainer>\r\n      <S.CommentContainer>\r\n        <S.Label>{post.replynum}</S.Label>\r\n      </S.CommentContainer>\r\n      <S.WriterContainer>\r\n        <S.Label>{post.username}</S.Label>\r\n      </S.WriterContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default FindBoardItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport BoardItem from \"../../component/find-board-item\";\r\n\r\nconst BoardList = ({ posts }) => {\r\n  console.log(posts);\r\n\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <BoardItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/find-board-header\";\r\nimport BoardList from \"../../container/find-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardFind } from \"./hooks\";\r\n\r\nconst BoardFind = () => {\r\n  const { posts } = useBoardFind();\r\n\r\n  // console.log(\"Hello BoardFind\");\r\n  // console.log(\"url : \", window.location.pathname);\r\n  let url_string = window.location.pathname.split(\"/\");\r\n  let page = 1; // 나중에 url 맨 뒷부분 보고 현재 보고 있는 페이지 추출 (근데 맨 처음 클릭했을 때 값은 1 뒤 url이 없으므로)\r\n  if (url_string.length === 3) { \r\n    page = 1;\r\n  }\r\n  else{ \r\n    page = parseInt(url_string[3]);\r\n  }\r\n  const totalCount = posts.length;\r\n  const listCount = 10;\r\n  let totalPage = parseInt(totalCount / listCount);\r\n  if (totalCount % listCount > 0){\r\n    totalPage += 1;\r\n  } \r\n  if (totalPage < page) {\r\n    page = totalPage; // 사용자가 임의로 페이지 수 바꿀 수 있으므로\r\n  }\r\n  const pageCount = 5;\r\n  let startPage = parseInt((page - 1) / pageCount + 1);\r\n  let endPage = startPage + pageCount - 1;\r\n  if (endPage > totalPage) {\r\n    endPage = totalPage;\r\n  }\r\n  // console.log(\"totalCount:\", totalCount);\r\n  // console.log(\"listCount:\", listCount);\r\n  // console.log(\"totalPage:\", totalPage);\r\n  // console.log(\"page\", page);\r\n  // console.log(\"pageCount\", pageCount);\r\n  // console.log(\"startPage\", startPage);\r\n  // console.log(\"endPage\", endPage);\r\n  \r\n  //게시글 검색\r\n  var searchval;\r\n  const Search = () => {\r\n    console.log(searchval.value);\r\n    if(searchval.value.length<2){\r\n      alert('두 글자 이상 입력해주세요.');\r\n      return;\r\n    }\r\n    const currenturl = window.location.href;\r\n    window.location.href = currenturl + \"/search/\" + searchval.value;\r\n  };\r\n  \r\n  return (\r\n    <Layout>\r\n      <S.BoardFind>\r\n        <S.BoardFindContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>습득물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>습득물 게시판에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n        </S.BoardFindContainer>\r\n        <S.ToolsContainer>\r\n          <S.SearchContainer>\r\n            <S.SearchBox \r\n              placeholder=\"검색\" \r\n              type=\"text\"\r\n              ref={(ref) => (searchval = ref)}/>\r\n            <S.SearchIcon onClick = {Search}>\r\n              <img\r\n                src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                alt=\"magnifying-glass\"\r\n              />\r\n            </S.SearchIcon>\r\n          </S.SearchContainer>\r\n          <S.WriteButton to=\"/find/upload\">글 작성</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar\r\n            board_type=\"find\"\r\n            page={page}\r\n            start_page={startPage}\r\n            end_page={endPage}\r\n            page_count={pageCount}\r\n            total_page={totalPage}\r\n          />\r\n        </S.PagebarContainer>\r\n      </S.BoardFind>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardFind;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardFind = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\"http://localhost:4000/find/board\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data.slice(0, 10));\r\n      console.log(data.slice(0, 10));\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardFind = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardFindContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/find-board-header\";\r\nimport BoardList from \"../../container/find-board-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\n\r\nimport { useBoardSearch } from \"./hooks\";\r\n\r\nconst BoardFindSearch = () => {\r\n  const { posts } = useBoardSearch();\r\n  let url_string = window.location.pathname.split(\"/\");\r\n  let page = 1; // 나중에 url 맨 뒷부분 보고 현재 보고 있는 페이지 추출 (근데 맨 처음 클릭했을 때 값은 1 뒤 url이 없으므로)\r\n  if (url_string.length === 3) {\r\n    page = 1;\r\n  } else {\r\n    page = parseInt(url_string[3]);\r\n  }\r\n  const totalCount = posts.length;\r\n  const listCount = 10;\r\n  let totalPage = parseInt(totalCount / listCount);\r\n  if (totalCount % listCount > 0) {\r\n    totalPage += 1;\r\n  }\r\n  if (totalPage < page) {\r\n    page = totalPage; // 사용자가 임의로 페이지 수 바꿀 수 있으므로\r\n  }\r\n  const pageCount = 5;\r\n  let startPage = parseInt((page - 1) / pageCount + 1);\r\n  let endPage = startPage + pageCount - 1;\r\n  if (endPage > totalPage) {\r\n    endPage = totalPage;\r\n  }\r\n  return (\r\n    <Layout>\r\n      <S.BoardFind>\r\n        <S.BoardFindContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>습득물 게시판</S.Title>\r\n          </S.TitleContainer>\r\n        </S.BoardFindContainer>\r\n        <S.ToolsContainer>\r\n          <S.Description>검색 결과</S.Description>\r\n          <S.WriteButton to=\"/find/board\">목록으로</S.WriteButton>\r\n        </S.ToolsContainer>\r\n        <S.BoardListContainer>\r\n          <BoardHeader />\r\n          <BoardList posts={posts} />\r\n        </S.BoardListContainer>\r\n        <S.PagebarContainer>\r\n          <Pagebar\r\n            board_type=\"find\"\r\n            page={page}\r\n            start_page={startPage}\r\n            end_page={endPage}\r\n            page_count={pageCount}\r\n            total_page={totalPage}\r\n          />\r\n        </S.PagebarContainer>\r\n      </S.BoardFind>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BoardFindSearch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardSearch = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n      \r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data.slice(0, 10));\r\n      console.log(data.slice(0, 10));\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n  \r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  /* height: 3rem; */\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const TitleInput = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PlaceInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  /* padding: 0rem 1rem; */\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { storage } from '../google_login/storage';\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nclass FindUpload extends Component { \r\n  FindUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      googleId: storage.get('loggedInfo').googleId,\r\n      getplace: this.getplace.value,\r\n      putplace: this.state.selectedOption.value,\r\n      content: this.content,\r\n      username: storage.get('loggedInfo').email.split('@')[0],\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000/find/upload\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //Select 관련\r\n  options = [\r\n    { value: \"중앙광장 원스탑\", label: \"중앙광장 원스탑\" },\r\n    { value: \"하나스퀘어 원스탑\", label: \"하나스퀘어 원스탑\" },\r\n    { value: \"기타\", label: \"기타\" },\r\n  ];\r\n\r\n  state = {\r\n    selectedOption: \"\",\r\n  };\r\n\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n\r\n  //render\r\n  render() {\r\n    //select 관련\r\n    const { selectedOption } = this.state;\r\n\r\n    const styles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        padding: \"2px\",\r\n        fontSize: \"18px\",\r\n        height: \"30px\",\r\n        flex: 1,\r\n      }),\r\n      option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isSelected ? \"black\" : \"black\",\r\n        backgroundColor: state.isSelected ? \"lightgrey\" : \"white\",\r\n      }),\r\n      control: (provided) => ({\r\n        ...provided,\r\n        marginTop: \"1%\",\r\n      }),\r\n    };\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목 명\"\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                placeholder=\"습득물 명\"\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.getplace = ref)}\r\n                placeholder=\"습득 장소\"\r\n              />\r\n              <Select\r\n                styles={styles}\r\n                placeholder=\"보관 장소\"\r\n                options={this.options}\r\n                onChange={this.handleChange}\r\n                autoFocus={true}\r\n                value={selectedOption}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton \r\n              to=\"/find/board\"\r\n              onClick={this.FindUpload} \r\n              type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindUpload;","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAY};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  /* height: 3rem; */\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TitleInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const TitleInput = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PlaceInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  /* padding: 0rem 1rem; */\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, {Component} from \"react\";\r\nimport * as S from \"./styles\";\r\nimport TextEditor from \"../../component/find-text-editor\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\n// import { STATIC_URL } from \"../../constant\";\r\nimport { storage } from '../google_login/storage';\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nclass LostUpload extends Component {\r\n  LostUpload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      name: this.name.value,\r\n      googleId: storage.get(\"loggedInfo\").googleId,\r\n      place: this.place.value,\r\n      content: this.content,\r\n      username: storage.get('loggedInfo').email.split('@')[0],\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000/lost/upload\", send_param)\r\n       //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //render\r\n  render () {\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목 명\" />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                placeholder=\"분실물 명\" />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.place = ref)}\r\n                placeholder=\"분실 장소\" />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor> \r\n            </S.TextEditorContainer>\r\n            \r\n            <S.SubmitButton\r\n              to =\"/lost/board\"\r\n              onClick={this.LostUpload}\r\n              type=\"button\"\r\n              block>작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LostUpload;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const TextEditor = styled.div``;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Notice = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardHeader = styled.ul`\r\n  height: 4rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  border: 0.5px solid white;\r\n\r\n  background-color: ${THEME_COLOR.LIGHT_YELLOW};\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const NameContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid white;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst NoticeHeader = () => {\r\n  return (\r\n    <S.BoardHeader>\r\n      <S.NameContainer>\r\n        <S.Label>제목</S.Label>\r\n      </S.NameContainer>\r\n      <S.DateContainer>\r\n        <S.Label>작성 날짜</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardHeader>\r\n  );\r\n};\r\n\r\nexport default NoticeHeader;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  border-bottom: 1px solid ${THEME_COLOR.GRAY};\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const BoardItem = styled.li`\r\n  height: 4rem;\r\n  padding: 0;\r\n  /* border: 0.5px solid ${THEME_COLOR.GRAYER}; */\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Label = styled.ul`\r\n  font-size: 1.2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const NameContainer = styled(Link)`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const DateContainer = styled.ul`\r\n  border: 0.5px solid ${THEME_COLOR.GRAYER};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst NoticeItem = ({ post }) => {\r\n  const url = \"/notice/post/\" + post._id;\r\n  return (\r\n    <S.BoardItem>\r\n      <S.NameContainer to={url}>\r\n        <S.Label>{post.title}</S.Label>\r\n      </S.NameContainer>\r\n      <S.DateContainer>\r\n        <S.Label>{post.date.slice(0, 10)}</S.Label>\r\n      </S.DateContainer>\r\n    </S.BoardItem>\r\n  );\r\n};\r\n\r\nexport default NoticeItem;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport NoticeItem from \"../../component/notice-item\";\r\n\r\nconst NoticeList = ({ posts }) => {\r\n  console.log(posts);\r\n\r\n  return (\r\n    <S.BoardList>\r\n      {posts.map((post, idx) => {\r\n        return <NoticeItem post={post} key={idx} />;\r\n      })}\r\n    </S.BoardList>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/notice-header\";\r\nimport BoardList from \"../../container/notice-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nimport { useBoardNotice } from \"./hooks\";\r\n\r\nconst Notice = () => {\r\n  const { posts } = useBoardNotice();\r\n  const authentication = () => {\r\n    var admin = ['eunsoo googleId','115049392299918823209'];//[eunsoo,sohee]\r\n    var auth = admin.includes(storage.get(\"loggedInfo\").googleId);\r\n    return auth;\r\n  }\r\n  var auth = authentication();\r\n  //검색기능\r\n  var searchval;\r\n  const Search = () => {\r\n    console.log(searchval.value);\r\n    if(searchval.value.length<2){\r\n      alert('두 글자 이상 입력해주세요.');\r\n      return;\r\n    }\r\n    const currenturl = window.location.href;\r\n    window.location.href = currenturl + \"/search/\" + searchval.value;\r\n  };\r\n  return (\r\n    <Layout>\r\n      <S.Notice>\r\n        <S.NoticeContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>공지사항</S.Title>\r\n          </S.TitleContainer>\r\n          <S.DescContainer>\r\n            <S.Description>공지사항에 대한 간단한 설명</S.Description>\r\n          </S.DescContainer>\r\n          <S.ToolsContainer>\r\n            <S.SearchContainer>\r\n              <S.SearchBox \r\n                placeholder=\"검색\"\r\n                type=\"text\"\r\n                ref={(ref) => (searchval = ref)} />\r\n              <S.SearchIcon onClick={Search}>\r\n                <img\r\n                  src={STATIC_URL.MAGNIFYING_GLASS_ICON}\r\n                  alt=\"magnifying-glass\"\r\n                />\r\n              </S.SearchIcon>\r\n            </S.SearchContainer>\r\n            {auth?\r\n            <S.WriteButton to=\"/notice/upload\">글 작성</S.WriteButton>:\r\n            <div></div>}            \r\n          </S.ToolsContainer>\r\n          <S.BoardListContainer>\r\n            <BoardHeader />\r\n            <BoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n          <S.PagebarContainer>\r\n            <Pagebar board_type=\"notice\" />\r\n          </S.PagebarContainer>\r\n        </S.NoticeContainer>\r\n      </S.Notice>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardNotice = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const request = await fetch(\"http://localhost:4000/notice\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Notice = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const DescContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ToolsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n\r\n  margin-bottom: 1.5rem;\r\n`;\r\nexport const WriteButton = styled(Link)`\r\n  width: 7rem;\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n  width: 20rem;\r\n  font-size: 1.4rem;\r\n  height: 4rem;\r\n\r\n  outline: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n\r\n  padding: 0.8rem 1rem;\r\n`;\r\n\r\nexport const SearchIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const PagebarContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n\r\n  margin: 2.5rem 0rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport BoardHeader from \"../../container/notice-header\";\r\nimport BoardList from \"../../container/notice-list\";\r\nimport Pagebar from \"../../container/page-bar\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nimport { useBoardSearch } from \"./hooks\";\r\n\r\nconst NoticeSearch = () => {\r\n  const { posts } = useBoardSearch();\r\n  return (\r\n    <Layout>\r\n      <S.Notice>\r\n        <S.NoticeContainer>\r\n          <S.TitleContainer>\r\n            <S.Title>공지사항</S.Title>\r\n          </S.TitleContainer>\r\n          <S.ToolsContainer>\r\n            <S.Description>검색 결과</S.Description>\r\n            <S.WriteButton to=\"/notice/upload\">목록으로</S.WriteButton>\r\n          </S.ToolsContainer>\r\n          <S.BoardListContainer>\r\n            <BoardHeader />\r\n            <BoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n          <S.PagebarContainer>\r\n            <Pagebar board_type=\"notice\" />\r\n          </S.PagebarContainer>\r\n        </S.NoticeContainer>\r\n      </S.Notice>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NoticeSearch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardSearch = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\"+url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Upload = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  /* padding: 0rem 2rem; */\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const CategorySelector = styled.select`\r\n  border: 1px solid ${THEME_COLOR.GRAY};\r\n\r\n  padding: 1rem;\r\n  font-size: 1.7rem;\r\n\r\n  /* height: 3rem; */\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CategoryOption = styled.option`\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const WriteInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  align-items: stretch;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  /* width: 100%; */\r\n\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  font-size: 1.7rem;\r\n  border: none;\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const TextEditorContainer = styled.div`\r\n  /* padding: 0rem 1rem; */\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const TextEditor = styled.div``;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  padding: 0rem 1rem;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(Link)`\r\n  font-size: 1.4rem;\r\n  text-decoration: none;\r\n\r\n  background-color: ${THEME_COLOR.YELLOW};\r\n  color: white;\r\n\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React,{Component} from \"react\";\r\nimport * as S from \"./styles\";\r\nimport TextEditor from \"../../component/find-text-editor\";\r\nimport Layout from \"../../component/layout\";\r\nimport axios from \"axios\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nclass NoticeUpload extends Component{\r\n  Upload = () => {\r\n    const send_param = {\r\n      headers,\r\n      title: this.title.value,\r\n      content: this.content,\r\n      googleId: storage.get('loggedInfo').googleId,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000/notice/upload\", send_param)\r\n      //정상 수행\r\n      //에러\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    alert(\"작성 완료!\");\r\n  };\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  render (){\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 작성</S.Title>\r\n            </S.TitleContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                placeholder=\"제목\" />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue=\"\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      placeholder: \"습득물 게시판에 대한 공지사항이 들어갈 예정입니다.\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor> \r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton \r\n              to = '/notice'\r\n              onClick = {this.Upload}>작성</S.SubmitButton>\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NoticeUpload;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const Join = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const JoinContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IDInputBox = styled.input`\r\n  width: 50rem;\r\n  height: 4rem;\r\n`;\r\n\r\nexport const PWInputBox = styled.input`\r\n  width: 50rem;\r\n  height: 4rem;\r\n`;\r\n\r\nexport const PWConfirmInputBox = styled.input`\r\n  width: 50rem;\r\n  height: 4rem;\r\n`;\r\nexport const SubmitButton = styled.button`\r\n  width: 10rem;\r\n  height: 4rem;\r\n`;\r\n","\r\nimport React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\n// import { render } from \"@testing-library/react\";\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nclass JoinForm extends Component {\r\n Join = () => {\r\n  const send_param = {\r\n    headers,\r\n    title: this.title.value,\r\n    description: this.description.value,\r\n  };\r\n  axios\r\n    .post(\"http://localhost:4000/join\", send_param)\r\n    //정상 수행\r\n  \r\n    //에러\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  render(){\r\n    return (\r\n      <Layout>\r\n        <S.Join>\r\n          <S.JoinContainer>\r\n            <S.IDInputBox\r\n              type=\"text\"\r\n              maxLength=\"20\"\r\n              ref={ref => (this.title = ref)}\r\n              placeholder=\"id\"/>\r\n            <S.PWInputBox \r\n              type=\"text\"\r\n              maxLength=\"20\"\r\n              ref={ref => (this.description = ref)}\r\n              placeholder=\"pw\"/>\r\n            <S.PWConfirmInputBox />\r\n            <S.SubmitButton\r\n              onClick={this.Join}\r\n              type=\"button\"\r\n              block\r\n            >확인\r\n            </S.SubmitButton>\r\n          </S.JoinContainer>\r\n        </S.Join>\r\n      </Layout>\r\n    );\r\n}\r\n\r\n};\r\n\r\nexport default JoinForm;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const FindPost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const FindPostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled(Link)`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const CommentsContainer = styled.div`\r\n  width: 99%;\r\n`;\r\n\r\nexport const WriteCommentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriteComment = styled.input`\r\n  width: 97%;\r\n  font-size: 1.4rem;\r\n  height: 3.5rem;\r\n  /* border: none; */\r\n  /* outline: none; */\r\n  /* background-color: ${THEME_COLOR.GRAY}; */\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SubmitIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from \"styled-components/macro\";\r\n\r\nexport const CommentList = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const Comment = styled.div`\r\n  width: 100%;\r\n\r\n  margin-bottom: 1rem;\r\n  background-color: ${THEME_COLOR.GRAY};\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  padding: 1rem 1rem 0.5rem 1rem;\r\n`;\r\n\r\nexport const Writer = styled.div`\r\n  font-size: 1.3rem;\r\n  margin-right: 1rem;\r\n`;\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n`;\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0rem 1rem 1rem 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nexport const ProfileIcon = styled.div`\r\n  margin-right: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const CommentIcon = styled.div`\r\n  margin-right: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","  //댓글수 조정\r\n  const SetReplynum = async (num) => {\r\n    const url = window.location.pathname;\r\n    const request = await fetch('http://localhost:4000'+url+'/replynum/'+(num), {\r\n      method: \"PATCH\",\r\n    });\r\n    console.log('http://localhost:4000'+url+'/replynum/'+(-1));\r\n    if (!request.ok) {\r\n      alert(\"서버 죽음\");\r\n      return;\r\n    }\r\n    await request.json();\r\n  }\r\n\r\n  export const PostDelete = async (delauth, id) => {\r\n    const url = window.location.pathname;\r\n    //삭제함 && 작성자 == 현재 접속자의 googleId\r\n    if(delauth){\r\n      var bool = window.confirm('정말 삭제하시겠습니까?');\r\n      //삭제 안함\r\n      if(!bool){\r\n        return; \r\n      }\r\n      //삭제함\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment/\" + id, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"댓글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json(); \r\n      SetReplynum(-1); //댓글수 -1     \r\n      alert('댓글이 삭제되었습니다!'); \r\n      window.location.reload(true); //새로고침\r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n //댓글 수정\r\n  export const PostEdit = async (editauth, content, id) => {\r\n    const url = window.location.pathname;\r\n    //작성자 == 현재 접속자의 googleId\r\n    if(editauth){\r\n      var input = prompt('새로운 내용을 입력하세요',content);\r\n      if(!input) {\r\n          input=content; //input==null(취소 클릭시)\r\n        }\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment/\" + id +\"/content/\"+input, {\r\n        method: \"PATCH\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"댓글 수정 실패\");\r\n        return;\r\n      }\r\n      await request.json();\r\n      window.location.reload(true); //새로고침\r\n    }\r\n    //작성자!= 접속자 -> 수정 안함\r\n    else{\r\n      alert('수정 권한 없음');\r\n    }\r\n  }","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { PostDelete, PostEdit } from \"./function\";\r\nimport { storage } from '../../view/google_login/storage';\r\n\r\nconst Comment = ({ comment }) => {\r\n  const googleId = comment.googleId;\r\n  const content = comment.content;\r\n  const id = comment._id;\r\n  const date = comment.date;\r\n  const username =  comment.username;\r\n  const currentId =  storage.get('loggedInfo').googleId;\r\n  //삭제,수정 권한\r\n  var editauth; var delauth;\r\n  if(currentId === googleId){\r\n    editauth = true;\r\n    delauth = true;\r\n  }\r\n  else{\r\n    editauth = false;\r\n    delauth = false;\r\n  }\r\n\r\n  const Delete = () => {\r\n    PostDelete(delauth,id);\r\n  };\r\n  const Edit = () => {\r\n    PostEdit(delauth, content, id);\r\n  };\r\n\r\n  return (\r\n    <S.Comment>\r\n      <S.WriterContainer>\r\n        <S.ProfileIcon><img src={STATIC_URL.PROFILE} alt=\"profile\" /></S.ProfileIcon>\r\n        <S.Writer>{username}</S.Writer>\r\n        <S.Date>{date.slice(0, 10)}</S.Date>\r\n      </S.WriterContainer>\r\n      <S.ContentContainer>\r\n        <S.Content>{content}</S.Content>\r\n        <S.IconContainer>\r\n          {editauth?\r\n          <S.Icon onClick={Edit}>\r\n            <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n          </S.Icon>: <div></div>}\r\n          {delauth?\r\n          <S.Icon to=\"find/board\" onClick={Delete}>\r\n            <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n          </S.Icon>: <div></div>}\r\n        </S.IconContainer>\r\n        {/* <S.CommentIcon>{<img src={STATIC_URL.EDIT} alt=\"edit\" align='right' onClick={Edit}/>}</S.CommentIcon> */}\r\n        {/* <S.CommentIcon>{<img src={STATIC_URL.DELETE} alt=\"delete\" align='right' onClick={Delete}/>}</S.CommentIcon> */}\r\n      </S.ContentContainer>\r\n    </S.Comment>\r\n  );\r\n};\r\n\r\nexport default Comment;","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Comment from \"../../component/comment\";\r\n\r\nconst CommentList = ({comments}) => {\r\n  console.log(comments);\r\n  return (\r\n    <S.CommentList>\r\n      {comments.map((comment, idx) => {\r\n        return <Comment comment={comment} key={idx}/>;\r\n      })}\r\n    </S.CommentList>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","//게시글 삭제\r\nexport const PostDelete = async (delauth) => {\r\n    const url = window.location.pathname;  //localhost:4000/find_post/게시글 id정보/  \r\n    //삭제함 && 작성자 == 현재 접속자의 username (temp:nonamed)\r\n    if(delauth){\r\n      var bool = window.confirm('정말 삭제하시겠습니까?');\r\n      //삭제 안함\r\n      if(!bool){\r\n        return; \r\n      }\r\n      //삭제함\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"게시글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json();      \r\n      alert('삭제되었습니다!'); \r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n\r\n  //댓글수 조정\r\n  export const SetReplynum = async (num) => {\r\n    const url = window.location.pathname;\r\n    const request = await fetch('http://localhost:4000'+url+'/replynum/'+(num), {\r\n      method: \"PATCH\",\r\n    });\r\n    console.log('http://localhost:4000'+url+'/replynum/'+(1));\r\n    if (!request.ok) {\r\n      alert(\"서버 죽음\");\r\n      return;\r\n    }\r\n    await request.json();\r\n  }\r\n ","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport CommentList from \"../../container/comment-list\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useBoardFind } from \"./hooks\";\r\nimport { useCommentFind } from \"./hooks2\";\r\nimport { PostDelete, SetReplynum } from \"./function\";\r\nimport axios from \"axios\";\r\nimport {storage} from \"../google_login/storage\";\r\n\r\nconst headers = { withCredentials: true };\r\n\r\nconst FindPost = () => {\r\n  const { posts } = useBoardFind();\r\n  const { comments } = useCommentFind();\r\n  const currentId = storage.get('loggedInfo').googleId;\r\n\r\n  //var username;\r\n  var content; \r\n  //삭제,수정 권한\r\n  var editauth; var delauth;\r\n  if(currentId === posts.googleId){\r\n    editauth = true;\r\n    delauth = true;\r\n  }\r\n  else{\r\n    editauth = false;\r\n    delauth = false;\r\n  }\r\n\r\n  const CommentUpload = () => {\r\n    const url = window.location.pathname;\r\n    const send_param = {\r\n      headers,\r\n      username: storage.get('loggedInfo').email.split('@')[0],\r\n      googleId: storage.get('loggedInfo').googleId,\r\n      content: content.value,\r\n      postid: posts._id,\r\n      postkind: \"find\",\r\n    };\r\n    axios\r\n      .post(\"http://localhost:4000\" + url + \"/comment\", send_param)\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    SetReplynum(1); //댓글수 +1\r\n    alert(\"댓글 작성 완료!\");\r\n    window.location.reload(true); //새로고침\r\n  };\r\n  //게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(delauth);\r\n  };\r\n  //게시글 수정\r\n  const Edit = () => {\r\n    const url = window.location.href; //window.location.pathname;\r\n    const editurl = url + \"/edit\";\r\n    if(editauth){\r\n      const placeholder = {\r\n        title: posts.title,\r\n        name: posts.name,\r\n        getplace: posts.getplace,\r\n        putplace: posts.putplace,\r\n        content: posts.content,\r\n      };\r\n      storage.set('editval', placeholder);\r\n      window.location.href = editurl; //editurl로 이동\r\n    }\r\n    else{\r\n      alert('수정 권한 없음');\r\n      return;\r\n    }\r\n  }\r\n  const post_content = posts.content;\r\n\r\n  return (\r\n    <Layout>\r\n      <S.FindPost>\r\n        <S.TitleContainer>\r\n          <S.Title>습득물 게시판</S.Title>\r\n        </S.TitleContainer>\r\n        <S.FindPostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n               {editauth?\r\n                <S.Icon onClick={Edit}>\r\n                  <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                </S.Icon>:<div></div>}\r\n                {delauth?\r\n                <S.Icon to='/find/board' onClick={Delete}>\r\n                  <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                </S.Icon>:<div></div>}\r\n              </S.IconContainer>\r\n            </S.MetaContainer>\r\n            <S.Label>습득물 명 : {posts.name}</S.Label>\r\n            <S.Label>습득 장소 : {posts.getplace} </S.Label>\r\n            <S.Label>보관 장소 : {posts.putplace} </S.Label>\r\n            <S.ContentContainer>\r\n              <S.Content>\r\n                <div dangerouslySetInnerHTML={{ __html: post_content }} />\r\n              </S.Content>\r\n            </S.ContentContainer>\r\n          </S.PostContainer>\r\n        </S.FindPostContainer>\r\n        <br />\r\n        <br />\r\n        <S.PostContainer>\r\n          <S.Label>\r\n            {<img src={STATIC_URL.CHAT} alt=\"chat\" width=\"15x\" />} 댓글\r\n          </S.Label>\r\n          <S.CommentsContainer>\r\n            <CommentList comments={comments} />\r\n          </S.CommentsContainer>\r\n          <S.WriteCommentContainer>\r\n            <S.WriteComment\r\n              type=\"text\"\r\n              ref={(ref) => (content = ref)}\r\n              placeholder=\"댓글을 입력하세요.\"\r\n            />\r\n            <S.SubmitIcon onClick={CommentUpload}>\r\n              <img src={STATIC_URL.SUBMIT} alt=\"submit_icon\" />\r\n            </S.SubmitIcon>\r\n          </S.WriteCommentContainer>\r\n        </S.PostContainer>\r\n      </S.FindPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FindPost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardFind = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      // console.log(window.location.pathname);\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n      if (!request.ok) {\r\n        const request2 = await fetch(\"http://localhost:4000\" + url + \"/edit\", {\r\n        method: \"GET\",\r\n        });\r\n        if (!request2.ok){\r\n          alert(\"서버 죽음\");\r\n          return;\r\n        }\r\n      }\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","//각 게시글 별 comment 정보 가져오기\r\n//url= localhost:4000/find_post/게시글 id정보/comment\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useCommentFind = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialComments = async () => {\r\n      const url = window.location.pathname;  //localhost:4000/find_post/게시글 id정보/\r\n      \r\n      console.log(\"http://localhost:4000\" + url + \"/comment\")\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setComments(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialComments();\r\n  }, []);\r\n\r\n  return {\r\n    comments,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const LostPost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const LostPostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1.6rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nexport const CommentsContainer = styled.div`\r\n  width: 99%;\r\n`;\r\n\r\nexport const WriteCommentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WriteComment = styled.input`\r\n  width: 97%;\r\n  font-size: 1.4rem;\r\n  height: 3.5rem;\r\n  /* border: none; */\r\n  /* outline: none; */\r\n  /* background-color: ${THEME_COLOR.GRAY}; */\r\n  padding: 0.8rem 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const SubmitIcon = styled.div`\r\n  margin-left: 1rem;\r\n\r\n  img {\r\n    width: 2rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","//게시글 삭제\r\nexport const PostDelete = async (delauth) => {\r\n    const url = window.location.pathname; //localhost:4000/lost_post/게시글 id정보/  \r\n    //삭제함 && 작성자 == 현재 접속자의 username (temp:nonamed)\r\n    if(delauth){\r\n      var bool = window.confirm('정말 삭제하시겠습니까?');\r\n      //삭제 안함\r\n      if(!bool){\r\n        return; \r\n      }\r\n      //삭제함\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"게시글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json();      \r\n      alert('삭제되었습니다!'); \r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n\r\n//댓글수 조정\r\nexport const SetReplynum = async (num) => {\r\n  const url = window.location.pathname;\r\n  const request = await fetch('http://localhost:4000'+url+'/replynum/'+(num), {\r\n    method: \"PATCH\",\r\n  });\r\n  console.log('http://localhost:4000'+url+'/replynum/'+(1));\r\n  if (!request.ok) {\r\n    alert(\"서버 죽음\");\r\n    return;\r\n  }\r\n  await request.json();\r\n}","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport CommentList from \"../../container/comment-list\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useBoardLost } from \"./hooks\";\r\nimport { PostDelete, SetReplynum } from \"./function\";\r\nimport { useCommentLost } from \"./hooks2\";\r\nimport {storage} from \"../google_login/storage\";\r\n\r\nimport axios from \"axios\";\r\nconst headers = { withCredentials: true };\r\n\r\nconst LostPost = () => {\r\n  const { posts } = useBoardLost();\r\n  const { comments } = useCommentLost();\r\n  const currentId = storage.get('loggedInfo').googleId;\r\n  //var username;\r\n  var content;\r\n  //삭제,수정 권한\r\n  var editauth; var delauth;\r\n  if(currentId === posts.googleId){\r\n    editauth = true;\r\n    delauth = true;\r\n  }\r\n  else{\r\n    editauth = false;\r\n    delauth = false;\r\n  }\r\n\r\n//댓글 업로드(신규)\r\nconst CommentUpload = () => {\r\n  const url = window.location.pathname;\r\n  const send_param = {\r\n    headers,\r\n    username: storage.get('loggedInfo').email.split('@')[0],\r\n    googleId: storage.get('loggedInfo').googleId,\r\n    content: content.value,\r\n    postid: posts._id,\r\n    postkind: \"lost\",\r\n  };\r\n  axios\r\n    .post(\"http://localhost:4000\" + url + \"/comment\", send_param)\r\n    //에러\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  SetReplynum(1); //댓글수 +1\r\n  alert(\"댓글 작성 완료!\");\r\n  window.location.reload(true); //새로고침\r\n  };\r\n  //게시글 삭제\r\n  const Delete = () => {\r\n    PostDelete(delauth);\r\n    window.location.pathname = '/lost/board';\r\n  };\r\n  //게시글 수정\r\n  const Edit = () => {\r\n    const url = window.location.href; //window.location.pathname;\r\n    const editurl = url + \"/edit\";\r\n    if(editauth){\r\n      const placeholder = {\r\n        title: posts.title,\r\n        name: posts.name,\r\n        place: posts.place,\r\n        content: posts.content,\r\n      };\r\n      storage.set('editval', placeholder);\r\n      window.location.href = editurl; //editurl로 이동\r\n    }\r\n    else{\r\n      alert('수정 권한 없음');\r\n      return;\r\n    }\r\n  }\r\n  const post_content = posts.content;\r\n\r\n  return (\r\n    <Layout>\r\n      <S.LostPost>\r\n        <S.TitleContainer>\r\n          <S.Title>분실물 게시판</S.Title>\r\n        </S.TitleContainer>\r\n        <S.LostPostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              <S.IconContainer>\r\n                {editauth?\r\n                <S.Icon onClick={Edit}>\r\n                 <div><img src={STATIC_URL.EDIT} alt=\"edit\" /></div>\r\n                </S.Icon>: <div></div>}\r\n                {delauth?              \r\n                <S.Icon onClick={Delete}>\r\n                  <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                </S.Icon>: <div></div>}\r\n              </S.IconContainer>\r\n            </S.MetaContainer>\r\n            <S.Label>분실물 명 : {posts.name} </S.Label>\r\n            <S.Label>분실 장소 : {posts.place} </S.Label>\r\n            <S.ContentContainer>\r\n              {/* <S.Content>{posts.content}</S.Content> */}\r\n              <S.Content>\r\n                <div dangerouslySetInnerHTML={{ __html: post_content }} />\r\n              </S.Content>\r\n            </S.ContentContainer>\r\n          </S.PostContainer>\r\n        </S.LostPostContainer>\r\n        <br />\r\n        <br />\r\n        <S.PostContainer>\r\n          <S.Label>\r\n            {<img src={STATIC_URL.CHAT} alt=\"chat\" width=\"15px\" />} 댓글\r\n          </S.Label>\r\n          <S.CommentsContainer>\r\n            <CommentList comments={comments} />\r\n          </S.CommentsContainer>\r\n          <S.WriteCommentContainer>\r\n            <S.WriteComment\r\n              type=\"text\"\r\n              ref={(ref) => (content = ref)}\r\n              placeholder=\"댓글을 입력하세요.\"\r\n            />\r\n            <S.SubmitIcon onClick={CommentUpload}>\r\n              {<img src={STATIC_URL.SUBMIT} alt=\"submit_icon\" />}\r\n            </S.SubmitIcon>\r\n          </S.WriteCommentContainer>\r\n        </S.PostContainer>\r\n      </S.LostPost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LostPost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useBoardLost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","//각 게시글 별 comment 정보 가져오기\r\n//url= localhost:4000/lost_post/게시글 id정보/comment\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useCommentLost = () => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialComments = async () => {\r\n      const url = window.location.pathname;  //localhost:4000/lost_post/게시글 id정보/\r\n      \r\n      console.log(\"http://localhost:4000\" + url + \"/comment\")\r\n      const request = await fetch(\"http://localhost:4000\" + url + \"/comment\", {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setComments(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialComments();\r\n  }, []);\r\n\r\n  return {\r\n    comments,\r\n  };\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const NoticePost = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const NoticePostContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  border: 1px solid ${THEME_COLOR.GRAYER};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 0.1rem solid black;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 2.2rem;\r\n\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  font-size: 1.6rem;\r\n\r\n  margin-bottom: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 1.3rem;\r\n  color: ${THEME_COLOR.FONT_GRAY};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const IconContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-right: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","//공지사항 게시글 삭제\r\nexport const PostDelete = async (auth) => {\r\n    const url = window.location.pathname; \r\n    //삭제함 && 접속자 id가 관리자의 username과 같으면 (temp:admin)\r\n    if(auth){\r\n      var bool = window.confirm('정말 삭제하시겠습니까?');\r\n      //삭제 안함\r\n      if(!bool){\r\n        return; \r\n      }\r\n      //삭제함\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (!request.ok) {\r\n        alert(\"게시글 삭제 실패\");\r\n        return;\r\n      }\r\n      await request.json();      \r\n      alert('삭제되었습니다!'); \r\n    }\r\n    //작성자!= 접속자 -> 삭제 안함\r\n    else{\r\n      alert('삭제 권한 없음');\r\n    }\r\n  }\r\n\r\n //공지사항 게시글 수정\r\n export const PostEdit = async (auth, content) => {\r\n  const url = window.location.pathname;\r\n  //작성자 == 관리자 id (admin)\r\n  if(auth){\r\n    var newcontent = \"content수정됨\"; //upload 페이지 다시 열어야할듯? find_edit view 새로 만들어서 newcont 받아오기\r\n    const request = await fetch(\"http://localhost:4000\" + url +\"/content/\" + newcontent, {\r\n      method: \"PATCH\",\r\n    });\r\n    if (!request.ok) {\r\n      alert(\"게시글 수정 실패\");\r\n      return;\r\n    }\r\n    await request.json();\r\n    alert('수정되었습니다!');\r\n    window.location.reload(true); //새로고침\r\n  }\r\n  //작성자!= 접속자 -> 수정 안함\r\n  else{\r\n    alert('수정 권한 없음');\r\n  }\r\n}","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport { STATIC_URL } from \"../../constant\";\r\nimport { useNoticePost } from \"./hooks\";\r\nimport { PostDelete, PostEdit } from \"./function\";\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst NoticePost = () => {\r\n  const { posts } = useNoticePost();\r\n  const authentication = () => {\r\n    var admin = ['eunsoo googleId','115049392299918823209'];//[eunsoo,sohee]\r\n    var auth = admin.includes(storage.get(\"loggedInfo\").googleId);\r\n    return auth;\r\n  }\r\n  var auth = authentication(); //admin 권한\r\n  const Delete = () => {\r\n    PostDelete(auth);\r\n  };\r\n  const Edit = () => {\r\n    PostEdit(auth, posts.content);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <S.NoticePost>\r\n        <S.TitleContainer>\r\n          <S.Title>공지사항</S.Title>\r\n        </S.TitleContainer>\r\n        <S.NoticePostContainer>\r\n          <S.PostContainer>\r\n            <S.PostTitle>{posts.title}</S.PostTitle>\r\n            <S.MetaContainer>\r\n              <S.Date>{posts.date}</S.Date>\r\n              {auth?\r\n              <S.IconContainer>\r\n                <S.Icon onClick={Edit}>\r\n                  <img src={STATIC_URL.EDIT} alt=\"edit\" />\r\n                </S.Icon>\r\n                <S.Icon to=\"/notice\" onClick={Delete}>\r\n                  <img src={STATIC_URL.DELETE} alt=\"delete\" />\r\n                </S.Icon>\r\n              </S.IconContainer>: <div></div>}\r\n            </S.MetaContainer>\r\n            <S.Content>{posts.content}</S.Content>\r\n          </S.PostContainer>\r\n        </S.NoticePostContainer>\r\n        <S.ContentContainer></S.ContentContainer>\r\n      </S.NoticePost>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NoticePost;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useNoticePost = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      console.log(window.location.pathname);\r\n\r\n      const url = window.location.pathname;\r\n      const request = await fetch(\"http://localhost:4000\" + url, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n//import TextEditor from \"../../component/find-text-editor\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\n// import { STATIC_URL } from \"../../constant\";\r\nimport Select from \"react-select\";\r\n// import { render } from \"@testing-library/react\";\r\nimport { storage } from '../google_login/storage';\r\n\r\nexport class FindEdit extends Component{\r\n\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //Select 관련\r\n  options = [\r\n    { value: \"중앙광장 원스탑\", label: \"중앙광장 원스탑\" },\r\n    { value: \"하나스퀘어 원스탑\", label: \"하나스퀘어 원스탑\" },\r\n    { value: \"기타\", label: \"기타\" },\r\n  ];\r\n\r\n  state = {\r\n    selectedOption: '',\r\n  };\r\n\r\n  handleChange = (selectedOption) => {\r\n      this.setState({ selectedOption });\r\n      console.log(`Option selected:`, selectedOption);\r\n  };\r\n  //게시글 수정 시\r\n EditPost = async () => {\r\n    const newcontent = {\r\n        title: this.title.value,\r\n        name: this.name.value,\r\n        getplace: this.getplace.value,\r\n        putplace: this.state.selectedOption.value,\r\n        content: \"this.content\",\r\n    }\r\n    console.log(newcontent.content);\r\n    if(!newcontent.putplace){\r\n      newcontent.putplace = storage.get('editval').putplace;\r\n      console.log('진입');\r\n    }\r\n    \r\n    const url = window.location.pathname;\r\n    const fetchurl = \"http://localhost:4000\" + url + \"/\"+(newcontent.title)+\"/\"+(newcontent.name) +\r\n            \"/\"+(newcontent.getplace) + \"/\"+(newcontent.putplace) + \"/\"+(newcontent.content);\r\n    const request = await fetch(fetchurl, {\r\n        method: \"PATCH\",\r\n    });\r\n    console.log(fetchurl);\r\n    const previousurl = window.location.href.slice(0,-5);\r\n    if (!request.ok) {\r\n        alert(\"게시글 수정 실패\");\r\n        storage.remove('editval');\r\n        window.location.href= previousurl;\r\n        return;\r\n    }\r\n    await request.json();\r\n    console.log(newcontent.title.value);\r\n    storage.remove('editval');\r\n    alert('수정되었습니다!');\r\n    window.location.href= previousurl;\r\n }\r\n\r\n  //render\r\n  render(){\r\n    //select 관련\r\n    //this.SetPlaceholder();\r\n    const { selectedOption } = this.state;\r\n    const styles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        padding: \"2px\",\r\n        fontSize: \"18px\",\r\n        height: \"30px\",\r\n        flex: 1,\r\n      }),\r\n      option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isSelected ? \"black\" : \"black\",\r\n        backgroundColor: state.isSelected ? \"lightgrey\" : \"white\",\r\n      }),\r\n      control: (provided) => ({\r\n        ...provided,\r\n        marginTop: \"1%\",\r\n      }),\r\n    };\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 수정</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                defaultValue = {storage.get('editval').title}\r\n              />\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                defaultValue = {storage.get('editval').name}\r\n              />\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.getplace = ref)}\r\n                defaultValue= {storage.get('editval').getplace}\r\n              />\r\n              <Select\r\n                styles={styles}\r\n                options={this.options}\r\n                placeholder={storage.get('editval').putplace}\r\n                onChange={this.handleChange}\r\n                autoFocus={true}\r\n                value={selectedOption}\r\n              />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue = {storage.get('editval').content}\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor>\r\n            </S.TextEditorContainer>\r\n\r\n            <S.SubmitButton              \r\n              onClick = {this.EditPost}\r\n              type=\"button\" block>\r\n              작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindEdit;","import React, { Component } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Layout from \"../../component/layout\";\r\nimport { storage } from '../google_login/storage';\r\n\r\nexport class LostEdit extends Component{\r\n  //texteditor 관련\r\n  handleEditorChange = (e) => {\r\n    console.log(e.target.getContent());\r\n    this.content = e.target.getContent();\r\n  };\r\n  //게시글 수정 시\r\n EditPost = async () => {\r\n    const newcontent = {\r\n        title: this.title.value,\r\n        name: this.name.value,\r\n        place: this.place.value,\r\n        content: \"this.content\",\r\n    }\r\n    console.log(newcontent);\r\n    const url = window.location.pathname;\r\n    const fetchurl = \"http://localhost:4000\" + url + \"/\"+(newcontent.title)+\"/\"+(newcontent.name) +\r\n            \"/\"+(newcontent.place) + \"/\"+(newcontent.content);\r\n    const request = await fetch(fetchurl, {\r\n        method: \"PATCH\",\r\n    });\r\n    console.log(fetchurl);\r\n    const previousurl = window.location.href.slice(0,-5); //edit 뺀 url\r\n    if (!request.ok) {\r\n        alert(\"게시글 수정 실패\");\r\n        storage.remove('editval');\r\n        window.location.href = previousurl;\r\n        return;\r\n    }\r\n    await request.json();\r\n    storage.remove('editval');\r\n    alert('수정되었습니다!');\r\n    window.location.href = previousurl;\r\n  }\r\n\r\n  render () {\r\n    //return\r\n    return (\r\n      <Layout>\r\n        <S.Upload>\r\n          <S.UploadContainer>\r\n            <S.TitleContainer>\r\n              <S.Title>글 수정</S.Title>\r\n            </S.TitleContainer>\r\n            <S.TitleInputContainer>\r\n              <S.TitleInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.title = ref)}\r\n                defaultValue={storage.get('editval').title}/>\r\n            </S.TitleInputContainer>\r\n            <S.WriteInputContainer>\r\n              <S.NameInput \r\n                type=\"text\"\r\n                ref={(ref) => (this.name = ref)}\r\n                defaultValue={storage.get('editval').name}/>\r\n              <S.PlaceInput\r\n                type=\"text\"\r\n                ref={(ref) => (this.place = ref)}\r\n                defaultValue={storage.get('editval').place} />\r\n            </S.WriteInputContainer>\r\n\r\n            <S.TextEditorContainer>\r\n              <S.TextEditor>\r\n                <Editor\r\n                  initialValue={storage.get('editval').content}\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image\",\r\n                      \"charmap print preview anchor help\",\r\n                      \"searchreplace visualblocks code\",\r\n                      \"insertdatetime media table paste wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic | image | alignleft aligncenter alignright | bullist numlist outdent indent | help\",\r\n                    mobile: {\r\n                      theme: \"mobile\",\r\n                      plugins: [\"autosave\", \"lists\", \"autolink\", \"placeholder\"],\r\n                    },\r\n                  }}\r\n                  onChange={this.handleEditorChange}\r\n                />\r\n              </S.TextEditor> \r\n            </S.TextEditorContainer>\r\n            \r\n            <S.SubmitButton\r\n              onClick={this.EditPost}\r\n              type=\"button\"\r\n              block>작성\r\n            </S.SubmitButton>\r\n            {/* <img src={STATIC_URL.PENCIL_ICON} alt=\"pencil\" /> */}\r\n          </S.UploadContainer>\r\n        </S.Upload>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LostEdit;","import styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { THEME_COLOR } from \"../../constant\";\r\n\r\nexport const MyPage = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 2rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const BoardListContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const MyInfoContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 3rem;\r\n`;\r\nexport const MyInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const MetaContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Meta = styled.div`\r\n  font-size: 1.4rem;\r\n  margin-bottom: 0.8rem;\r\n`;\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  width: 100%;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 1.8rem;\r\n`;\r\nexport const Label = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  img {\r\n    width: 8rem;\r\n    height: 8rem;\r\n    border-radius: 8rem;\r\n  }\r\n  margin-right: 3rem;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Layout from \"../../component/layout\";\r\nimport FindBoardHeader from \"../../container/find-board-header\";\r\nimport LostBoardHeader from \"../../container/lost-board-header\";\r\n\r\nimport FindBoardList from \"../../container/find-board-list\";\r\nimport LostBoardList from \"../../container/lost-board-list\";\r\n\r\nimport { useMyPage } from \"./hooks\"; //분실물\r\nimport { useMyPage2 } from \"./hooks2\"; //습득물\r\nimport { storage } from \"../google_login/storage\";\r\n\r\nconst MyPage = () => {\r\n  //뭘 쓸지 몰라서 다 준비해봤어...ㅎㅎㅎ\r\n  const googleId = storage.get(\"loggedInfo\").googleId; //숫자 형식\r\n  const imageurl = storage.get(\"loggedInfo\").imgUrl;\r\n  const username = storage.get(\"loggedInfo\").username; //ex: 정소희[학부재학/컴퓨터학과]\r\n  const email = storage.get(\"loggedInfo\").email; //ex: wjdthgmlgo@korea.ac.kr\r\n  const emailname = email.split(\"@\")[0]; //ex: wjdthgmlgo\r\n  console.log(emailname);\r\n\r\n  //각 게시판 posts 설정\r\n  const { posts } = useMyPage(googleId); //분실물 post\r\n  const { posts2 } = useMyPage2(googleId); //습득물 post\r\n\r\n  // console.log(\"posts\", posts);\r\n  console.log(\"posts2\", posts2);\r\n\r\n  return (\r\n    <Layout>\r\n      <S.MyPage>\r\n        <S.MyInfoContainer>\r\n          <S.Title>내 정보</S.Title>\r\n          <S.MyInfo>\r\n            <S.ImageContainer>\r\n              <img src={imageurl} alt=\"image\" />\r\n            </S.ImageContainer>\r\n            <S.MetaContainer>\r\n              <S.Meta>이름: {username}</S.Meta>\r\n              <S.Meta>닉네임: {emailname}</S.Meta>\r\n              <S.Meta>이메일: {email}</S.Meta>\r\n            </S.MetaContainer>\r\n          </S.MyInfo>\r\n        </S.MyInfoContainer>\r\n\r\n        <S.Title>내가 작성한 글</S.Title>\r\n        <S.Container>\r\n          <S.Label>분실물 게시판</S.Label>\r\n          <S.BoardListContainer>\r\n            <LostBoardHeader />\r\n            <LostBoardList posts={posts} />\r\n          </S.BoardListContainer>\r\n        </S.Container>\r\n        <S.Container>\r\n          <S.Label>습득물 게시판</S.Label>\r\n          <S.BoardListContainer>\r\n            <FindBoardHeader />\r\n            <FindBoardList posts={posts2} />\r\n          </S.BoardListContainer>\r\n        </S.Container>\r\n      </S.MyPage>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMyPage = (googleId) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const boardkind = \"lost\"\r\n      const request = await fetch(\"http://localhost:4000/mypage/\"+boardkind+\"/\"+googleId, {\r\n        method: \"GET\",\r\n      });\r\n      console.log(\"http://localhost:4000/mypage/\"+boardkind+\"/\"+googleId);\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts,\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMyPage2 = (googleId) => {\r\n  const [posts2, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInitialPosts = async () => {\r\n      const boardkind = \"find\";\r\n      const request = await fetch(\r\n        \"http://localhost:4000/mypage/\" + boardkind + \"/\" + googleId,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      console.log(\"http://localhost:4000/mypage/\" + boardkind + \"/\" + googleId);\r\n      if (!request.ok) {\r\n        alert(\"서버 죽음\");\r\n        return;\r\n      }\r\n\r\n      const data = await request.json();\r\n\r\n      setPosts(data);\r\n      console.log(data);\r\n    };\r\n\r\n    getInitialPosts();\r\n  }, []);\r\n\r\n  return {\r\n    posts2,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Main from \"./view/main\";\r\nimport BoardLost from \"./view/board_lost\";\r\nimport BoardLostSearch from \"./view/board_lost_search\";\r\nimport Login from \"./view/login\";\r\nimport BoardFind from \"./view/board_find\";\r\nimport BoardFindSearch from \"./view/board_find_search\";\r\nimport FindUpload from \"./view/find-upload\";\r\nimport LostUpload from \"./view/lost-upload\";\r\nimport Notice from \"./view/notice\";\r\nimport NoticeSearch from \"./view/notice_search\";\r\nimport NoticeUpload from \"./view/notice-upload\";\r\nimport JoinForm from \"./view/join\";\r\nimport FindPost from \"./view/find-post\";\r\nimport LostPost from \"./view/lost-post\";\r\nimport NoticePost from \"./view/notice-post\";\r\nimport FindEdit from \"./view/find-upload/edit\";\r\nimport LostEdit from \"./view/lost-upload/edit\";\r\nimport MyPage from \"./view/mypage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/lost/board\" exact component={BoardLost} />\r\n        <Route path=\"/lost/board/:page_number\" exact component={BoardLost} />\r\n        <Route path=\"/lost/board/search/:searchval\" exact component={BoardLostSearch} />\r\n        <Route path=\"/find/board\" exact component={BoardFind} />\r\n        <Route path=\"/find/board/:page_number\" exact component={BoardFind} />\r\n        <Route path=\"/find/board/search/:searchval\" exact component={BoardFindSearch} />\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/find/upload\" exact component={FindUpload} />\r\n        <Route path=\"/lost/upload\" exact component={LostUpload} />\r\n        <Route path=\"/notice\" exact component={Notice} />\r\n        <Route path=\"/notice/search/:searchval\" exact component={NoticeSearch} />\r\n        <Route path=\"/notice/:page_number\" exact component={Notice} />\r\n        <Route path=\"/notice/upload\" exact component={NoticeUpload} />\r\n        <Route path=\"/join\" exact component={JoinForm} />\r\n        <Route path=\"/find/post/:_id\" exact component={FindPost} />\r\n        <Route path=\"/find/post/:_id/edit\" exact component={FindEdit} />\r\n        <Route path=\"/lost/post/:_id\" exact component={LostPost} />\r\n        <Route path=\"/lost/post/:_id/edit\" exact component={LostEdit} />\r\n        <Route path=\"/notice/post/:_id\" exact component={NoticePost} />\r\n        <Route path=\"/mypage\" exact component={MyPage} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components/macro\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'NanumSquare', sans-serif !important;\r\n    font-display: 'block';\r\n    box-sizing : border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  html {\r\n    font-size : 10px;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    user-select : none;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding : 0;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport GlobalStyle from \"./component/global-style\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}